<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chainguys.github.io</id>
    <title>Chainguys&apos;Blog</title>
    <updated>2022-10-19T09:49:10.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chainguys.github.io"/>
    <link rel="self" href="https://chainguys.github.io/atom.xml"/>
    <subtitle>A blockchain guy who likes making memes and translating tech articles &lt;/br&gt;All Information NOT Financial Adivice&lt;/br&gt; 一个区块链的老韭菜 &lt;/br&gt;兴趣是做meme和翻译技术文章 &lt;/br&gt;一切均非投资建议</subtitle>
    <logo>https://chainguys.github.io/images/avatar.png</logo>
    <icon>https://chainguys.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Chainguys&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[SeiNetwork长推-20221014 (SeiNetwork twitter threads-20221014)]]></title>
        <id>https://chainguys.github.io/post/seinetwork-chang-tui-20221014-seinetwork-twitter-threads-20221014/</id>
        <link href="https://chainguys.github.io/post/seinetwork-chang-tui-20221014-seinetwork-twitter-threads-20221014/">
        </link>
        <updated>2022-10-14T09:39:53.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://pbs.twimg.com/profile_images/1579219797392474118/_PpJrD9Z_x96.jpg" alt="" loading="lazy"></figure>
<p>原文地址:<a href="https://twitter.com/SeiNetwork/status/1580703985836515329">https://twitter.com/SeiNetwork/status/1580703985836515329</a></p>
<p>1/ Minimizing latency is crucial. A thread on what that means and how Sei is making strides to have extremely fast time to finality through collocating validators.</p>
<p>最小化延迟至关重要。这篇长推将解释这意味着什么，以及 Sei 如何通过并置验证者来以极快的速度完成最终确定。</p>
<p>2/ What is &quot;time to finality&quot;? &quot;Time to finality&quot; describes the time between when blocks are committed to the blockchain. Sei has a strong focus on minimizing our network latency to create the best environment for decentralized exchanges to deploy and scale.</p>
<p>什么是“完成时间”？ “完成时间”描述了将块提交到区块链之间的时间。 Sei 非常注重最大限度地减少的网络延迟，为去中心化交易所的部署和扩展创造最佳环境。</p>
<p>3/ For optimal performance, sei ran load tests with a smaller validator set that was colocated.</p>
<p>为了获得最佳性能，sei 使用托管的较小验证者集进行负载测试。</p>
<figure data-type="image" tabindex="2"><img src="https://pbs.twimg.com/media/Fe_J5_nUoAAdq_v?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<hr>
<p>4/ Why colocation? Internationally scattered validators have higher latency when reaching consensus and producing blocks because it takes longer for messages to travel between them.</p>
<p>为什么要托管？国际上分散的验证者在达成共识和生成区块时具有更高的延迟，因为消息在它们之间传输需要更长的时间。</p>
<p>5/ After extensive research on colocation Sei found:<br>
Colocation reduces latency by ~46% vs. international dispersion<br>
50 validators is the limit before seeing increased latency by adding more validators Full research here</p>
<p>Sei 在对托管进行广泛研究后发现：<br>
与国际分散相比，托管可将延迟降低约 46%<br>
50 个验证器是通过添加更多验证器来增加延迟之前的限制，您可以查看以下研究</p>
<p><a href="https://twitter.com/jayendra_jog/status/1552830894091644929">https://twitter.com/jayendra_jog/status/1552830894091644929</a></p>
<p>6/ Although testing for the software and hardware designs is still ongoing, interested teams are actively considering expanding to Sei. A number of protocols are prepared to deploy on Sei at mainnet launch.</p>
<p>尽管软件和硬件设计的测试仍在进行中，但感兴趣的团队正在积极考虑扩展到 Sei。许多协议准备在主网启动时部署在 Sei 上。</p>
<p>7/ To learn more about how Sei creates an environment custom-built for <a href="https://twitter.com/hashtag/DEX?src=hashtag_click">#DEX</a> applications in-depth check out our GitBook: <a href="https://t.co/F4HHZRnu9Z">https://docs.seinetwork.io/introduction/overview…</a></p>
<p>要深入了解 Sei 如何为 <a href="https://twitter.com/hashtag/DEX?src=hashtag_click">#DEX</a> 应用创建定制环境的更多信息，请查看我们的 GitBook：<a href="https://t.co/F4HHZRnu9Z">https:// docs.seinetwork.io/introduction/overview…</a></p>
<p>8/ Shoutout to the<a href="https://twitter.com/Delphi_Digital">@Delphi_Digital</a> team for writing in-depth research about Sei! Read the full report here<br>
[Learn more in our new PRO report.]</p>
<p>向 <a href="https://twitter.com/Delphi_Digital">@Delphi_Digital</a> 团队致敬，感谢他们撰写有关 Sei 的深入研究！在此处阅读完整报告</p>
<p>[在新 PRO 报告中了解更多信息。]</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ackee区块链完成 Neon 的治理审计 (Ackee Blockchain Completes Neon’s Governance Audit)]]></title>
        <id>https://chainguys.github.io/post/ackee-qu-kuai-lian-wan-cheng-neon-de-zhi-li-shen-ji-ackee-blockchain-completes-neons-governance-audit/</id>
        <link href="https://chainguys.github.io/post/ackee-qu-kuai-lian-wan-cheng-neon-de-zhi-li-shen-ji-ackee-blockchain-completes-neons-governance-audit/">
        </link>
        <updated>2022-10-13T10:00:17.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*s1rfUjRRm0Qki1m78ESBcA.png" alt="" loading="lazy"></figure>
<p>Between June 27 and July 22, 2022, <a href="https://ackeeblockchain.com/">Ackee Blockchain</a> conducted a security audit of Neon’s Governance contract. The Ackee Blockchain team is composed of auditors and white hat hackers who perform security audits and assessments including code review, testing, automated analysis, and local deployment/hacking.</p>
<p>在 2022 年 6 月 27 日至 7 月 22 日期间，<a href="https://ackeeblockchain.com/">Ackee区块链</a> 对 Neon 的治理合约进行了安全审计。 Ackee 区块链团队由审计员和白帽黑客组成，他们执行安全审计和评估，包括代码审查、测试、自动分析和本地部署/黑客攻击。</p>
<p>At the end of the 26-day audit process, a <em>Findings and Recommendations</em> report was delivered to the Neon Labs team. In this article, we’ll outline the scope, goals, and process of the Ackee security audit and summarize the notable findings.</p>
<p>在 26 天的审核过程结束时，一份 <em>调查结果和建议</em> 报告已提交给 Neon Labs 团队。在本文中，我们将概述 Ackee 安全审计的范围、目标和过程，并总结值得注意的发现。</p>
<h1 id="安全审计的范围-scope-of-the-security-audit">安全审计的范围 (Scope of the Security Audit)</h1>
<p>Ackee Blockchain focused the security audit on understanding and reviewing the Neon SPL Governance contract. In addition, the team reviewed the source code and security of the Neon maintenance program and custom add-ins. The specific commit audited was <em>f13d7e7c1507819306797688ce0bb1f6950a5038</em> of the <a href="https://github.com/neonlabsorg/neon-spl-governance">neonlabsorg/neon-spl-governance</a> repository.</p>
<p>Ackee区块链将安全审计的重点放在理解和审查 Neon SPL 治理合约上。此外，团队还审查了 Neon 维护程序和自定义插件的源代码和安全性。审核的具体提交是 <a href="https://github.com/neonlabsorg/neon-spl-governance">neonlabsorg/neon-spl-governance</a> 存储库的 <em>f13d7e7c1507819306797688ce0bb1f6950a5038</em>。</p>
<p>The programs covered include:<br>
涵盖的计划包括：</p>
<ul>
<li>maintanance/program 维护/程序</li>
<li>addin-fixed-weights/program 附加固定权重/程序</li>
<li>addin- vesting/program 附加注入/计划</li>
<li>governance-lib 治理库</li>
</ul>
<p>During the review, Ackee paid particular attention to:<br>
在审核过程中，Ackee 特别关注：</p>
<ul>
<li>
<p>whether the SPL-governance contract specifications are implemented correctly for the custom add-ins.<br>
是否为自定义加载项正确实施了 SPL 治理合约规范。</p>
</li>
<li>
<p>whether the programs correctly use dependencies or other supporting programs (e.g., SPL dependencies).<br>
程序是否正确使用依赖项或其他支持程序(例如，SPL 依赖项)。</p>
</li>
<li>
<p>whether the code is vulnerable to voting manipulation.<br>
代码是否容易受到投票操纵。</p>
</li>
</ul>
<h1 id="安全审计的目的目标-purposegoals-of-the-security-audit">安全审计的目的/目标 (Purpose/Goals of the Security Audit)</h1>
<p>Neon Labs always strives to reach the highest security standard for our services and platforms, including Neon Governance. The Ackee discovered findings from the audit that will be urgently addressed and will continue to challenge and motivate our product team.</p>
<p>Neon Labs 始终致力于为我们的服务和平台(包括 Neon Governance)达到最高安全标准。 Ackee 发现审计结果将被紧急处理，并将继续挑战和激励我们的产品团队。</p>
<p>The main goal of the security audit was to assess the security posture of the SPL governance contract and associated programs to identify potential vulnerabilities. Ackee Blockchain aimed to meet this goal through a review of the targeted source code and documentation, execution of a penetration test, and evaluation of the testing process.</p>
<p>安全审计的主要目标是评估 SPL 治理合约和相关程序的安全状况，进而识别潜在的漏洞。 Ackee 区块链旨在通过审查目标源代码和文档、执行渗透测试和评估测试过程来实现这一目标。</p>
<h1 id="安全审计程序-the-security-audit-procedure">安全审计程序 (The Security Audit Procedure)</h1>
<p><strong>1. 代码审查 Code Review</strong></p>
<p>Ackee began the security audit by reviewing the specifications, sources, and instructions related to Neon’s SPL Governance contract. Following the initial review, the Ackee team conducted a manual line-by-line review of Neon’s in-scope source code.</p>
<p>Ackee 通过审查与 Neon 的 SPL 治理合约相关的规范、来源和说明开始了安全审计。在初步审查之后，Ackee 团队对 Neon 范围内的源代码进行了手动逐行审查。</p>
<p><strong>2. 测试和自动分析 Testing and Automated Analysis</strong></p>
<p>Following the code review, Ackee ran automated tests to ensure the SPL Governance contract functioned as intended. As part of the testing, Ackee also wrote missing unit or “fuzzy tests” using their Solana testing framework, <a href="https://solana.com/riptide/voting/trdelnik">Trdelnik</a>.</p>
<p>在代码审查之后，Ackee 运行自动化测试来确保 SPL 治理合约按预期运行。作为测试的一部分，Ackee 还使用他们的 Solana 测试框架 <a href="https://solana.com/riptide/voting/trdelnik">Trdelnik</a> 编写了缺失的单元或“模糊测试”。</p>
<p><strong>3. 本地部署 + 黑客攻击 Local Deployment + Hacking</strong></p>
<p>In the final steps of the security audit, Ackee initiated a white hat hacking campaign to try and manipulate the system based on their findings from steps one and two. Programs were deployed locally in an attempt to attack and break the in-scope system. Hacking is a beneficial way to round out the audit and ensure there are no additional holes in the source code and platform.</p>
<p>在安全审计的最后阶段，Ackee 发起了一场白帽黑客攻击活动，试图根据他们在第一步和第二步中的发现来操纵系统。程序被部署在本地，试图攻击和破坏范围内的系统。黑客攻击是完成审计并确保源代码和平台中没有额外漏洞的有益方式。</p>
<h1 id="neon-evm-安全审计结果-neon-evm-security-audit-outcome">Neon EVM 安全审计结果 (Neon EVM Security Audit Outcome)</h1>
<p>The Ackee Security Audit presented findings by categorizing issues according to severity, impact, and likelihood. The results identified some core issues and mandatory clean-ups for the Neon Labs team to address, along with some recommendations to be implemented.</p>
<p>Ackee 安全审计通过根据严重性、影响和可能性对问题进行分类来展示调查结果。结果确定了 Neon Labs 团队需要解决的一些核心问题和要做的强制清理，以及一些需要实施的建议。</p>
<p>The security audit identified eight issues that range from critical to informational in terms of severity. The Neon Labs team has reviewed these issues and has already begun to address them.</p>
<p>安全审计确定了八个问题，从严重程度来看，从严重到知会不等。 Neon Labs 团队已经审查了这些问题，并且已经开始着手解决这些问题。</p>
<p>The two critical issues identified by the audit are as:</p>
<p>审计发现的两个关键问题如下：</p>
<p><strong>1. It is possible to manipulate the voting process while using the fixed-weights addin.</strong><br>
可以在使用固定权重插件时操纵投票过程</p>
<p><em>This vulnerability allows users to select a number higher than 100%, which gives additional weight to their vote to such an extent that a single user (member of governance) could practically decide on any proposal by themself.</em></p>
<p><em>此漏洞允许用户选择高于 100% 的数字，这为他们的投票提供了额外的权重，以至于单个用户(治理成员)实际上可以自己决定任何提案</em></p>
<p><strong>2. When using the add in-vesting (for realm), the first user will be able to decide on any proposal after their deposit.</strong><br>
使用附加注入时(针对领域)时，第一个用户将能够在存款后决定任何提案。</p>
<p><em>In this scenario, the first user who calls a deposit can immediately create a proposal and vote for it. Since their vote would have 100% weight, the proposal would be marked as successful.</em></p>
<p><em>在这种情况下，第一个调用存款的用户可以立即创建提案并对其进行投票。由于他们的投票权重为 100%，因此提案将被标记为成功。</em></p>
<h1 id="结论-conclusion">结论 (Conclusion)</h1>
<p>We hope you found this article informative. If you have any questions about the security audit of Neon’s SPL Governance contract, don’t hesitate to reach out. You can contact the team via <a href="https://discord.com/invite/9jVYEDVwn8">Discord</a>. Lastly, stay connected with the team on <a href="https://twitter.com/neonlabsorg">Twitter</a>, <a href="https://github.com/neonlabsorg">GitHub</a>, <a href="https://www.youtube.com/channel/UCAL2uFkKkfBgz3mXFN3UDTQ">YouTube</a>, and <a href="https://neonlabsorg.medium.com/">Medium</a> for more development updates and announcements.</p>
<p>我们希望您发现这篇文章内容丰富。如果您对 Neon 的 SPL 治理合约的安全审计有任何疑问，请随时与我们联系。您可以通过 <a href="https://discord.com/invite/9jVYEDVwn8">Discord</a> 联系团队。最后，在 <a href="https://twitter.com/neonlabsorg">Twitter</a>、<a href="https://github.com/neonlabsorg">GitHub</a>、<a href="https://www.youtube">YouTube</a>  <a href="https://neonlabsorg.medium.com/">Medium</a> 了解更多开发更新和公告，与团队保持联系。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[模块化执行的案例(第一部分) The Case for Modular Execution (Part 1)]]></title>
        <id>https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/</id>
        <link href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/">
        </link>
        <updated>2022-10-13T03:22:52.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/10/the-case-for-modular-execution-part-1.png" alt="The Case for Modular Execution (Part 1)" loading="lazy"><br>
How modular execution layers enable scalability by decoupling computation from verification.<br>
模块化执行层如何通过将计算与验证解耦来实现可扩展性。</p>
<hr>
<h2 id="模块化执行案例-the-case-for-modular-execution">模块化执行案例 (The Case for Modular Execution)</h2>
<p>The blockchain space is increasingly moving toward a modular architecture in order to achieve true scalability. Even chains like Ethereum, which were previously fully monolithic, are <a href="https://ethereum.org/en/upgrades/sharding/">shifting</a> to a modular design to overcome the challenges that come with monolithic blockchain designs.</p>
<p>为了实现真正的可扩展性，区块链空间正越来越多地向模块化架构发展。甚至像以太坊这样以前完全是单片的，现在正在 <a href="https://ethereum.org/en/upgrades/sharding/">转变</a> 到模块化设计，进而克服单片区块链设计带来的挑战。</p>
<p>One of the core components of the <a href="https://fuel-labs.ghost.io/beyond-monolithic-the-modular-blockchain-paradigm/">modular blockchain stack</a> is the execution layer. <strong><a href="https://www.fuel.network/">Fuel</a> is building the fastest execution layer for the modular blockchain stack.</strong></p>
<p><a href="https://fuel-labs.ghost.io/beyond-monolithic-the-modular-blockchain-paradigm/">模块化区块链技术栈</a> 的核心组件之一是执行层。 <strong><a href="https://www.fuel.network/">Fuel</a> 正在为模块化区块链技术栈构建最快的执行层。</strong></p>
<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-13.png" alt="" loading="lazy"></figure>
<p><strong>What is a modular execution layer? And how will they enable more scalable blockchain systems?</strong></p>
<p><strong>什么是模块化执行层？他们将如何启用更具可扩展性的区块链系统？</strong></p>
<p>Modular execution layers offer two core benefits over their monolithic counterparts:<br>
与单体执行层相比，模块化执行层提供了两个核心优势：</p>
<ol>
<li>
<p>Monolithic chains couple computation and verification on the same layer, leading to sub-par security and limited scalability. <strong>Modular execution layers</strong> avoid this by decoupling computation and verification, allowing for much more robust security guarantees at scale.<br>
单片链将计算和验证耦合在同一层，导致安全性低于标准，可扩展性有限。 <strong>模块化执行层</strong>通过解耦计算和验证来避免这种情况，在规模上提供更强大的安全保证。</p>
</li>
<li>
<p>Monolithic chains are locked into inefficient technologies when it comes to the speed and variety of computation they can support. On the other hand, <strong>modular execution layers</strong> can be specifically designed to optimize for efficient computation.<br>
单片链在可以支持的计算速度和多样性方面被锁定在低效的技术中。另一方面，<strong>模块化执行层</strong>可以专门设计用于优化高效计算。</p>
</li>
</ol>
<p>This post elaborates on the first core benefit, with the second being explored in an upcoming Part 2.</p>
<p>本文详细阐述第一个核心优势，第二个核心优势将在即将发布的第二部分中进行探讨。</p>
<hr>
<h2 id="单片区块链基础知识计算和验证-monolithic-blockchain-basics-computation-verification">单片区块链基础知识：计算和验证 (Monolithic Blockchain Basics: Computation &amp; Verification)</h2>
<p>To understand the innovations that come from modular execution layers (MELs), first we need to understand how monolithic blockchains handle computation and verification.</p>
<p>了解来自模块化执行层 (MEL) 的创新，需要我们首先了解单片区块链如何处理计算和验证。</p>
<p>Blockchains rely on a network of entities which execute transactions and bundle them together into a block - these are known as <em>block producers</em>. Without checks and balances, a malicious block producer could include invalid transactions in a block (for example, minting tokens to their own address). To prevent this, blockchains rely on a network of other nodes to determine the validity of a block before adding it to their version of the chain.</p>
<p>区块链依赖于一个实体网络，这些实体执行交易并将它们打包在一起形成一个区块——这些被称为 <em>区块生产者</em> 。如果没有制衡，恶意区块生产者可能会在区块中包含无效交易(例如，将代币铸造到他们自己的地址)。为了防止这种情况，区块链依赖于其他节点的网络来确定一个块的有效性，然后再将其添加到他们链的版本中。</p>
<p>This leads to two core functions required for a blockchain to operate:<br>
这导致了区块链运行所需的两个核心功能：</p>
<ul>
<li><strong>Block Production (i.e. computation)</strong> - Executing transactions and applying individual state transitions to build a block.<br>
<strong>区块生产(即计算)</strong> - 执行交易并应用单个状态转换来构建块。</li>
<li><strong>Block Validation (i.e. verification)</strong> - Confirming that the state transitions are valid.<br>
<strong>区块验证(即验证)</strong> - 确认状态转换有效。</li>
</ul>
<h3 id="单片链上的计算和验证-computation-verification-on-monolithic-chains">单片链上的计算和验证 (Computation &amp; Verification on Monolithic Chains)</h3>
<p><em>NOTE: For ease of understanding, this section provides a simplified explanation of how block production and verification work on monolithic blockchains. In reality, the process is more complex, and may differ depending on the design of the specific chain. However, many of the same core principles apply.</em></p>
<p><em>注意：为方便理解，本节提供了对如何在单片区块链上进行区块生产和验证工作的简化说明。实际上，该过程更复杂，并且可能因特定链的设计而异。然而，许多相同的核心原则也适用。</em></p>
<p>In most monolithic blockchain designs, computation and verification are performed by the same entities - validators (i.e. full nodes). When a user sends a transaction, a validator will execute the transaction and then include the corresponding state transition in a block. Once a block is created and propagated, other full nodes download the block and re-execute the transactions in the block in order to confirm it is valid. If the block is valid, assuming they are honest, the full nodes append that block onto their version of the chain, thereby attesting to its validity.</p>
<p>在大多数单片区块链设计中，计算和验证由相同的实体 - 验证者(即完整节点)执行。当用户发送交易时，验证者将执行交易，然后将相应的状态转换包含在块中。一旦创建并传播了一个块，其他完整节点就会下载该块并重新执行该块中的交易来确认它是有效的。如果该块是有效的，假设他们是诚实的，那么全节点将该块附加到他们链的版本上，从而证明它的有效性。</p>
<p>Sometimes, applications or users need to access the state of the blockchain, but don’t want to incur the high resource requirements of running a full node and independently validating all transactions. For this purpose they can run <a href="https://www.parity.io/blog/what-is-a-light-client/">light clients</a>, which assume the blocks provided by full nodes include only valid transactions. They do not download the full blockchain, nor do they verify that all previous transactions are valid. Instead, they have to trust that the majority of full nodes are honest (i.e. have only included valid blocks in their copy of the chain).</p>
<p>有时，应用或用户需要访问区块链的状态，但不希望产生运行完整节点和独立验证所有交易的高资源需求。为此，他们可以运行 <a href="https://www.parity.io/blog/what-is-a-light-client/">轻客户端</a>，假设全节点提供的块仅包含有效交易。他们不会下载完整的区块链，也不会验证所有之前的交易是否有效。相反，他们必须相信大多数完整节点是诚实的(即在其链副本中仅包含有效块)。</p>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-14.png" alt="" loading="lazy"></figure>
<p>This is called the <em>honest majority assumption</em>, and is the reason that most monolithic blockchains are vulnerable to 51% attacks. Under the monolithic model, because an honest majority of full nodes is required to verify that the blockchain is valid, light clients are forced to trust the majority. If more than half of the full nodes are dishonest, light clients have no way of knowing this, so they will end up following an invalid chain.</p>
<p>这被称为 <em>诚实大多数假设</em>，这也是大多数单片区块链容易受到 51% 攻击的原因。在单片模型下，由于需要诚实的大多数完整节点来验证区块链是否有效，因此轻客户端被迫信任大多数。如果超过一半的全节点不诚实，轻客户端无法知道这一点，因此他们最终会跟随一条无效的链。</p>
<h3 id="诚实多数假设-可扩展性的限制-honest-majority-assumption-limits-to-scalability">诚实多数假设 - 可扩展性的限制 (Honest Majority Assumption - Limits to Scalability)</h3>
<p>The scalability of monolithic chains is severely limited by their reliance on this honest majority assumption. This is because, in order to increase transaction throughput, block size and/or frequency must be increased to enable more transactions to be processed in the same amount of time. This increases the resource requirements (and associated costs) for full nodes; bigger/faster blocks = more computation = higher costs.</p>
<p>单片链的可扩展性，受到其对这种诚实多数假设依赖的严重限制。这是因为，为了增加交易吞吐量，必须增加块大小和/或频率，以使更多交易能够在相同的时间内处理。这增加了全节点的资源需求(和相关成本)；更大/更快的块 = 更多的计算 = 更高的成本。</p>
<figure data-type="image" tabindex="3"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-15.png" alt="" loading="lazy"></figure>
<p>As the cost of running a full node increases, more entities will opt to run a light client instead, relying on a smaller and smaller network of full nodes to verify the validity of the chain. <strong>This increasing centralization of block validation is a major threat to security for monolithic chains</strong>, as a more centralized pool of validators is more vulnerable to attacks and also more easily able to collude.</p>
<p>随着运行全节点成本的增加，更多实体将选择运行轻客户端，依靠越来越小的全节点网络来验证链的有效性。 <strong>这种日益集中的区块验证是对单片链安全性的主要威胁</strong>，因为更集中的验证者池更容易受到攻击，也更容易串通。</p>
<hr>
<h2 id="模块化执行解耦计算和验证-modular-execution-decoupling-computation-verification">模块化执行：解耦计算和验证 (Modular Execution: Decoupling Computation &amp; Verification)</h2>
<p>The good news is that blockchain systems can move away from designs that rely on an honest majority assumption. In order to avoid this pitfall of monolithic design, <strong>the modular blockchain stack decouples computation from verification</strong>. By moving execution (i.e. computation) off the base chain (often referred to as the “parent chain”), increased scale can be achieved without compromising on decentralization.</p>
<p>好消息是区块链系统可以摆脱依赖诚实大多数假设的设计。为了避免这种单片设计的缺陷，<strong>模块化区块链技术栈将计算与验证分离</strong>。通过将执行(即计算)移出基础链(通常称为“父链”)，可以在不影响去中心化的情况下实现规模扩大。</p>
<h3 id="什么是模块化执行层-what-is-a-modular-execution-layer">什么是模块化执行层？ (What is a Modular Execution Layer?)</h3>
<p>Within the modular blockchain stack, the execution layer is responsible for computation - in other words, processing transactions and applying individual state transitions.</p>
<p>在模块化区块链技术栈中，执行层负责计算——换句话说，处理交易和应用单独的状态转换。</p>
<p>Fuel <a href="https://fuel-labs.ghost.io/introducing-fuel-the-fastest-modular-execution-layer/">defines</a> a modular execution layer as: <strong>a verifiable computation system designed for the modular blockchain stack</strong>. More concretely, a fraud- or validity-provable blockchain (or other computation system) that leverages a modular blockchain for data availability.</p>
<p>Fuel <a href="https://fuel-labs.ghost.io/introducing-fuel-the-fastest-modular-execution-layer/">定义</a> 了模块化执行层：<strong>为模块化区块链技术栈设计的可验证计算系统</strong>。更具体地说，一种可验证欺诈或有效性的区块链(或其他计算系统)，它利用模块化区块链来实现数据可用性。</p>
<figure data-type="image" tabindex="4"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-16.png" alt="" loading="lazy"></figure>
<p>To clarify further, computation systems are not modular execution layers if they: 1) are not fraud- or validity-provable, or 2) do not offload data availability to another layer.</p>
<p>为了进一步澄清，如果计算系统：1) 不能证明欺诈或有效性，或 2) 不将数据可用性重载到另一层，则它们不是模块化执行层。</p>
<p>Like monolithic blockchains, modular execution layers employ a network of dedicated block producers. These entities handle the resource-intensive process of executing transactions and producing blocks. However, unlike in monolithic systems, <strong>verification is not handled on the execution layer</strong>, but rather on the lower levels of the modular blockchain stack.</p>
<p>与单片区块链一样，模块化执行层采用专门的区块生产者网络。这些实体处理执行交易和生成区块的资源密集型过程。但是，与单片系统不同，<strong>验证不在执行层处理</strong>，而是在模块化区块链技术栈的较低级别处理。</p>
<h3 id="验证-让区块生产者保持诚实-verification-keeping-block-producers-honest">验证 - 让区块生产者保持诚实 (Verification - Keeping Block Producers Honest)</h3>
<p>The genius of modular execution is that as long as verification (i.e. block validation) is decentralized, computation (i.e. block production) does not need to be decentralized. Block sizes can be increased, leading to centralization of nodes which produce blocks - but as long as verification is decoupled, invalid blocks will not be added to the chain.</p>
<p>模块化执行的天才之处在于，只要验证(即区块验证)是去中心化的，计算(即区块生产)就不需要去中心化。可以增加块大小，从而导致产生块的节点集中化——但只要将验证解耦，无效块就不会被添加到链中。</p>
<p>But how does this work? <strong>How can we ensure security is preserved if we allow block production to remain centralized?</strong> This is where modularity comes into play.</p>
<p>但这是如何工作的？ <strong>如果我们允许块生产保持中心化，我们如何确保安全性？</strong> 这就是模块化发挥作用的地方。</p>
<p>Modular execution layers abstract the resource-intensive function of execution to powerful block producers which bundle and execute batches of transactions, and periodically post these as blocks to the parent chain (settlement/consensus/data availability layers). In order to keep these block producers honest, there are additional non-block-producing full nodes (often referred to as “verifiers” or “provers”) which download and re-execute the blocks posted to the parent chain to ensure they contain only valid transactions.</p>
<p>模块化执行层将资源密集型执行功能抽象给强大的区块生产者，这些区块生产者打包并执行批量交易，定期将这些作为区块发布到父链(结算/共识/数据可用性层)。为了让这些区块生产者保持诚实，还有额外的非区块生产完整节点(通常称为“验证者”或“证明者”)下载并重新执行发布到父链的区块，以确保它们仅包含有效交易。</p>
<p>The specifics of how these full nodes communicate the validity or invalidity of transactions differs depending on whether the modular execution layer employs an optimistic or zero-knowledge model. In the case of optimistic MELs, full nodes only take action (via fraud proofs) when they detect an invalid transaction. Conversely, in the case of zero-knowledge MELs, full nodes actively attest to the validity of transactions (via validity proofs). In either case, <strong>the validity or invalidity of all transactions provided by the block producer is attested to on the parent chain, not on the modular execution layer</strong>.</p>
<p>这些完整节点如何传达交易的有效性或无效性的细节，取决于模块化执行层是采用乐观模型还是零知识模型。在乐观 MEL 的情况下，全节点仅在检测到无效交易时才采取行动(通过欺诈证明)。相反，在零知识 MEL 的情况下，全节点主动证明交易的有效性(通过有效性证明)。无论哪种情况，<strong>区块生产者提供的所有交易的有效性或无效性都在父链上证明，而不是在模块化执行层上</strong>。</p>
<h3 id="一个例子乐观模块化执行层的欺诈证明-an-example-fraud-proofs-on-optimistic-modular-execution-layers">一个例子：乐观模块化执行层的欺诈证明 (An Example: Fraud Proofs on Optimistic Modular Execution Layers)</h3>
<p>To provide a deeper illustration, let’s explore the case of optimistic MELs (under which it is assumed that all transactions are valid unless otherwise proven). If even a single full node on the modular execution layer detects an invalid transaction within a block posted on the parent chain, they can generate a fraud proof (within a predefined “dispute resolution window”) which cryptographically proves that the transaction is invalid.</p>
<p>为了提供更深入的说明，让我们探讨乐观 MEL 的情况(假设所有交易都是有效的，除非另有证明)。即使模块化执行层上的单个完整节点检测到发布在父链上的块中的无效交易，它们也可以生成欺诈证明(在预定义的“争议解决窗口”内)，以加密方式证明交易无效。</p>
<p>Depending on the structure of the particular modular stack, this may be dealt with in several ways, for example:</p>
<p>根据特定模块化技术栈的结构，这可以通过多种方式处理，例如：</p>
<p><strong>In modular stacks with a settlement layer:</strong></p>
<p><strong>在具有结算层的模块化技术栈中：</strong></p>
<ul>
<li>
<p>The full node submits the fraud proof to a dedicated dispute resolution contract on the settlement layer, which re-executes the transaction directly (note that this requires the MEL transactions to be structured in a way which makes them fraud-provable on the settlement layer’s VM in a deterministic manner - for example, the <a href="https://fuellabs.github.io/fuel-docs/master/technology/fraud_proofs.html">FuelVM is designed to be fraud-provable within the EVM</a> to enable settlement on Ethereum).<br>
全节点将欺诈证明提交给结算层上的专用争议解决合约，该合约直接重新执行交易(请注意，这要求 MEL 交易的结构使其在结算层的欺诈可证明VM 以一种确定性的方式 - 例如，<a href="https://fuellabs.github.io/fuel-docs/master/technology/fraud_proofs.html">FuelVM被设计在 EVM 内完成可证明欺诈性</a> 来获得在以太坊的结算能力)。</p>
</li>
<li>
<p>If the transaction is invalid, the offending block producer is punished via slashing (i.e. they lose funds), the “whistleblower” is rewarded with a portion of these funds, and the state of the chain is reverted to before the invalid transaction. Because there is no guarantee that any transaction following the invalid one corresponds to a valid state, these subsequent transactions are re-executed.</p>
</li>
<li>
<p>如果交易无效，违规的区块生产者将受到惩罚(即他们损失资金)，“举报人”将获得部分资金奖励，并将链的状态恢复到无效交易之前的状态。因为不能保证在无效交易之后的任何交易都对应于有效状态，所以这些后续交易被重新执行。</p>
</li>
</ul>
<p><strong>In modular stacks <a href="https://forum.celestia.org/t/rollups-on-celestia/55#optimistic-rollups-10">without a settlement layer</a>:</strong></p>
<p><strong>在模块化技术栈中若<a href="https://forum.celestia.org/t/rollups-on-celestia/55#optimistic-rollups-10">没有结算层</a>：</strong></p>
<ul>
<li>
<p>The full node gossips the fraud proof via a peer-to-peer network to warn light clients that the block contains an invalid transaction. Using the fraud proof as evidence of the block producer’s dishonest behavior, full nodes can propose a penalty transaction on the parent chain, which slashes the block producer’s funds.<br>
全节点通过点对点网络传播欺诈证明，警告轻客户端该块包含无效交易。使用欺诈证明作为出块人不诚实行为的证据，全节点可以在父链上提出惩罚交易，从而削减出块人的资金。</p>
</li>
<li>
<p>Because there is no settlement layer to dictate the “canonical” version of the chain, malicious full nodes could theoretically choose not to reject the block; however, the fraud proof has already been communicated to light clients, so they know not to follow a malicious full node’s version of the chain. As a result, social consensus guarantees that the invalid block will be rejected.<br>
由于没有结算层来规定链的“规范”版本，恶意全节点理论上可以选择不拒绝区块；但是，欺诈证明已经传达给轻客户端，因此他们知道不要遵循恶意的全节点版本的链。结果，社会共识保证了无效块将被拒绝。</p>
</li>
</ul>
<p>In either case, because the verification process is enshrined on the parent chain instead of the execution layer, security is outsourced to the parent chain, meaning the execution layer on its own can operate with lower security guarantees. <strong>Even if 99% of full nodes on the execution layer are dishonest, it only takes one honest full node to ensure the execution layer only includes valid transactions.</strong></p>
<p>在任何一种情况下，由于验证过程是在父链上而不是在执行层上进行的，因此安全性被外包给了父链，这意味着执行层本身可以在较低的安全保证下运行。 <strong>即使执行层上 99% 的全节点都是不诚实的，也只需要一个诚实的全节点来确保执行层只包含有效交易。</strong></p>
<p>This means that instead of relying on an honest majority of full nodes, modular execution layers (and MEL light clients) can operate on a <em>single honest minority assumption</em>.</p>
<p>这意味着，模块化执行层(和 MEL 轻客户端)可以在 <em>单个诚实少数假设</em> 上运行，而不是依赖于诚实的大多数完整节点。</p>
<figure data-type="image" tabindex="5"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-17.png" alt="" loading="lazy"></figure>
<p><em>On modular execution layers, light clients only need to rely on there being a single honest full node in order to guarantee the validity of the chain</em></p>
<p><em>在模块化执行层上，轻客户端只需要依赖一个诚实的全节点就可以保证链的有效性</em></p>
<p>Whereas an invalid block can only be reverted by a majority of full nodes in a monolithic system, a single full node in a modular system can force an invalid transaction to be reverted by using fraud/validity proofs.</p>
<p>无效块只能由单片系统中的大多数完整节点恢复，而模块化系统中的单个完整节点可以通过使用欺诈/有效性证明来强制恢复无效交易。</p>
<h3 id="这如何实现可扩展性-how-this-enables-scalability">这如何实现可扩展性 (How this Enables Scalability)</h3>
<p>Allowing computation to happen off the parent chain allows for massive increases in transaction throughput. Block size can be significantly increased without concerns about centralization of block production, as the separate block validation process keeps block producers honest.</p>
<p>允许在父链之外进行计算可以大幅增加交易吞吐量。区块大小可以显着增加，而无需担心块生产的中心化，因为单独的块验证过程使块生产者保持诚实。</p>
<p>While larger blocks do place a higher burden on the full nodes performing validation, the honest minority assumption means that centralization in this area is less of a threat, as centralization-based vulnerabilities which rely on a dishonest majority are rendered impossible.</p>
<p>虽然较大的区块确实会给执行验证的完整节点带来更高的负担，但诚实的少数假设意味着该领域的中心化威胁较小，因为依赖不诚实多数的基于中心化的漏洞变得不可能。</p>
<p>Light clients can also run with significantly higher security guarantees under a modular architecture, as fraud proofs enable them to identify invalid transactions based on a proof from a single honest full node (as opposed to monolithic systems, which require light clients to trust that at least half of the full nodes are honest).</p>
<p>轻客户端还可以在模块化架构下以显着更高的安全保证运行，因为欺诈证明使他们能够根据来自单个诚实完整节点的证明来识别无效交易(与单片系统相反，单片系统至少需要轻客户端信任一半的完整节点是诚实的)。</p>
<figure data-type="image" tabindex="6"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-18.png" alt="" loading="lazy"></figure>
<p><em>Light clients on modular execution layers have significantly higher security guarantees than their monolithic counterparts</em> <em>模块化执行层上的轻客户端比它们的单体客户端具有更高的安全保证</em></p>
<p>In addition, block producers are aware that any malicious activity will be detected and will result in slashing, so they are less likely to even attempt to behave dishonestly. As such, the execution layer can be computation-optimized (i.e. handle a lot of transactions) while relying on security-optimized lower levels of the modular stack.</p>
<p>此外，区块生产者知道任何恶意活动都会被检测到并导致处罚，因此他们甚至不太可能试图做出不诚实的行为。因此，执行层可以进行计算优化(即处理大量交易)，同时依赖模块化技术栈的安全优化的较低级别。</p>
<hr>
<h2 id="模块化执行潜在挑战-modular-execution-potential-challenges">模块化执行：潜在挑战 (Modular Execution: Potential Challenges)</h2>
<p>This modular architecture does present some additional technical and game-theoretic challenges.</p>
<p>这种模块化架构确实提出了一些额外的技术和博弈论挑战。</p>
<h3 id="数据可用性-data-availability">数据可用性 (Data Availability)</h3>
<p>While fraud/validity proofs enable honest full nodes to prove fraud, there is an additional problem: <strong>data availability</strong>. In order to generate proofs, full nodes rely on block availability, as they need to download and re-execute all transactions in a block to determine its validity and generate a proof.</p>
<p>虽然欺诈/有效性证明使诚实的完整节点能够证明欺诈，但还有一个问题：<strong>数据可用性</strong>。为了生成证明，全节点依赖于区块的可用性，因为它们需要下载并重新执行块中的所有交易以确定其有效性并生成证明。</p>
<p>A malicious block producer could theoretically publish only block headers to the parent chain, potentially withholding some or all of the corresponding data. This prevents full nodes from being able to generate fraud/validity proofs to alert light clients to the issue.</p>
<p>理论上，恶意区块生产者可以只向父链发布区块头，可能会保留部分或全部相应数据。这可以防止完整节点生成欺诈/有效性证明来提醒轻客户端注意问题。</p>
<p>When attempting to validate a block, it is trivial for full nodes to identify when data has been withheld by a malicious block producer. In this case, they can simply assume the chain is invalid and fork away from it. <strong>But how can light clients determine whether data has been withheld by a block producer without downloading the whole block?</strong></p>
<p>当尝试验证一个块时，全节点很容易识别数据何时被恶意块生产者扣留。在这种情况下，他们可以简单地假设该链无效并从中分叉。 <strong>但是轻客户端如何在不下载整个区块的情况下确定数据是否被区块生产者扣留？</strong></p>
<p>A new technology called <a href="https://hackmd.io/@vbuterin/sharding_proposal#ELI5-data-availability-sampling">data availability sampling</a> (DAS) enables light clients to probabilistically determine whether the entirety of a block has been published. In short, light clients request small random small portions (or “samples”) of the block from full nodes.</p>
<p>一种称为<a href="https://hackmd.io/@vbuterin/sharding_proposal#ELI5-data-availability-sampling">数据可用性采样</a> (DAS) 的新技术使轻客户端能够以概率方式确定是否已发布整个块。简而言之，轻客户端从完整节点请求块的小随机小部分(或“样本”)。</p>
<figure data-type="image" tabindex="7"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-19.png" alt="" loading="lazy"></figure>
<p><em>Light clients request subsets (“samples”) of the block from full nodes (source:</em> <a href="https://hackmd.io/@vbuterin/sharding_proposal#ELI5-data-availability-sampling"><em>Vitalik Buterin</em></a><em>)</em> <em>轻客户端从完整节点请求区块的子集(“样本”)(来源：</em> <a href="https://hackmd.io/@vbuterin/sharding_proposal#ELI5-data-availability-sampling"><em>Vitalik Buterin</em></a><em>)</em></p>
<p>If all the requested samples are available, then assuming there are enough light clients performing data availability sampling, this probabilistically proves that the entire block is available. If any portions of the block are not available, light clients know that data has been withheld, and can therefore fork away from that version of the chain.</p>
<p>如果所有请求的样本都可用，那么假设有足够多的轻客户端执行数据可用性采样，这在概率上证明了整个块是可用的。如果块的任何部分不可用，轻客户端知道数据已被保留，因此可以从该版本的链中分叉。</p>
<p>A full explanation of this technology is out of scope for this post, but you can read more about it <a href="https://www.paradigm.xyz/2022/08/das">here</a>. Ultimately, the important takeaway is that DAS enables light clients to identify invalid blocks even when a malicious block producer withholds data.</p>
<p>对这项技术的完整解释超出了本文的范围，但您可以在 <a href="https://www.paradigm.xyz/2022/08/das">此处</a> 阅读更多相关信息。最终，重要的一点是 DAS 使轻客户端能够识别无效块，即使恶意块生产者隐瞒数据也是如此。</p>
<h3 id="验证者的困境-verifiers-dilemma">验证者的困境 (Verifier’s Dilemma)</h3>
<p>Another potential issue is the phenomenon referred to as the “verifier’s dilemma”. The simplified version is as follows:</p>
<p>另一个潜在的问题是被称为“验证者困境”的现象。简化版如下：</p>
<ul>
<li>
<p>If block producers know that full nodes will identify dishonest activity, they will behave honestly in order to avoid being slashed.<br>
如果区块生产者知道全节点会识别不诚实的活动，他们会诚实行事以避免被处罚。</p>
</li>
<li>
<p>Over time, if full nodes assume block producers will continue to behave honestly, they have no incentive to continue validating blocks, as they will never receive a reward for identifying an invalid transaction.<br>
随着时间的推移，如果全节点假设区块生产者将继续诚实行事，他们就没有动力继续验证区块，因为他们永远不会因识别无效交易而获得奖励。</p>
</li>
<li>
<p>If full nodes are not financially incentivized to continue validating blocks, they may stop doing so. At this point, it becomes viable for block producers to behave dishonestly. Even if there is still a non-zero amount of full nodes, it may become financially viable for the block producer to bribe the remaining full nodes to ignore a sufficiently valuable invalid transaction.<br>
如果全节点没有经济上的激励来继续验证区块，他们可能会停止这样做。在这一点上，区块生产者的不诚实行为变得可行。即使仍然存在非零数量的完整节点，对于区块生产者而言，贿赂剩余的完整节点以忽略足够有价值的无效交易可能在财务上是可行的。</p>
</li>
</ul>
<p>This ends in a circular conundrum whereby the more secure a modular execution layer becomes (i.e. the less incentive there is for a block producer to behave dishonestly), the more it tends toward lower security (i.e. full nodes are no longer incentivized to validate blocks). On the other hand, the less secure it is, the more it tends toward higher security.</p>
<p>这以一个循环难题告终，即模块化执行层变得越安全(即区块生产者不诚实行为的动机越少)，它就越倾向于降低安全性(即不再激励完整节点来验证区块) .另一方面，它越不安全，它就越倾向于更高的安全性。</p>
<figure data-type="image" tabindex="8"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-22.png" alt="" loading="lazy"></figure>
<p>This dilemma can be mitigated through a number of avenues (for a game-theoretic analysis of these factors, <a href="https://medium.com/onther-tech/optimistic-rollup-is-not-secure-enough-than-you-think-cb23e6e6f11c">see this extensive post</a>):</p>
<p>可以通过多种途径缓解这种困境(有关这些因素的博弈论分析，<a href="https://medium.com/onther-tech/optimistic-rollup-is-not-secure-%E6%AF%94%E4%BD%A0%E6%83%B3%E8%B1%A1%E7%9A%84%E8%BF%98%E5%A4%9A-cb23e6e6f11c">请参阅这篇帖子</a>)：</p>
<ul>
<li>
<p><strong>Altruism</strong> - Because MELs only require a single honest validator, as long as there is at least one altruistic full node operating, the system remains secure. However, while this may be secure enough in practice, it is not a sufficient guarantee for a system controlling a large amount of assets.<br>
<strong>利他主义</strong> - 因为 MEL 只需要一个诚实的验证者，只要至少有一个利他的全节点在运行，系统就会保持安全。然而，虽然这在实践中可能足够安全，但对于控制大量资产的系统来说，这并不是充分的保证。</p>
</li>
<li>
<p><strong>Economic interest</strong> - There are many entities which have financial incentives to run full nodes that go beyond the potential whistleblower reward. For example, products and services like block explorers, liquidity providers, or dapps need to access the full state of the MEL to effectively run their business. However, these entities are (in theory) susceptible to being bribed by a malicious block producer.<br>
<strong>经济利益</strong> - 许多实体拥有运行完整节点的经济激励，这些激励超出了潜在的举报人奖励。例如，区块浏览器、流动性提供者或 dapp 等产品和服务需要访问 MEL 的完整状态才能有效地开展业务。然而，这些实体(理论上)容易受到恶意区块生产者的贿赂。</p>
</li>
<li>
<p><strong>Whales</strong> - Entities with a large number of assets on an MEL may choose to run a full node in order to ensure their interests are protected and that the chain is secure.<br>
<strong>巨鲸</strong> - 在 MEL 上拥有大量资产的实体可以选择运行一个完整节点，以确保他们的利益受到保护并且链是安全的。</p>
</li>
<li>
<p><strong>Fast withdrawals</strong> - Because optimistic MELs rely on a dispute resolution window before guaranteeing finality on the lower layers of the modular stack, withdrawals from the MEL to the settlement layer are not finalized until this window has elapsed. As such, there is a market for third-party services which offer fast withdrawals, accepting tokens on the MEL and instantly sending the same tokens (minus a fee) to the user on the settlement layer. In order to ensure the MEL state isn’t reverted after they have sent funds on the settlement layer, the service provider is incentivized to verify the validity of the chain before entering into such a transaction.<br>
<strong>快速取款</strong> - 因为乐观 MEL 在保证模块化技术栈较低层的最终确定性之前，依赖争议解决窗口，所以在此窗口过去之前，从 MEL 到结算层的取款不会最终确定。因此，存在提供快速提款、在 MEL 上接受代币并在结算层立即向用户发送相同代币(减去费用)的第三方服务市场。为了确保 MEL 状态在他们在结算层发送资金后不会恢复，激励服务提供商在进行此类交易之前验证链的有效性。</p>
</li>
<li>
<p><strong>Block producers</strong> - It is possible to introduce a penalty for block producers who submit blocks which build on top of previous invalid blocks. With such a mechanism in place, block producers would be incentivized to verify the validity of the chain before submitting a block.<br>
<strong>区块生产者</strong> - 可以对提交构建在先前无效块之上的新块的生产者引入惩罚。有了这样的机制，区块生产者将被激励在提交区块之前验证链的有效性。</p>
</li>
</ul>
<p>While the above mitigation strategies may not be completely effective on their own, when combined there is a clear incentive for a number of different parties to continue running full nodes on the MEL and validating the state of the chain.</p>
<p>虽然上述缓解策略本身可能并不完全有效，但当结合使用时，有明显的动机让许多不同的各方继续在 MEL 上运行完整节点并验证链的状态。</p>
<hr>
<h2 id="新的设计空间超越-evm-a-new-design-space-going-beyond-the-evm">新的设计空间：超越 EVM (A New Design Space: Going Beyond the EVM)</h2>
<p>By adopting a design that enables high security under a single honest minority assumption, the modular blockchain stack enables the development of much higher-throughput blockchains than have previously been possible under monolithic designs.</p>
<p>通过采用在单一诚实少数假设下实现高安全性的设计，模块化区块链技术栈能够开发比以前在单片设计下可实现的更高吞吐量的区块链。</p>
<p>However, alongside the scalability benefits that come from separating computation from verification, further strides can be made in scalability by focusing specifically on the design of the top of the stack: the modular execution layer. <strong>Making computation more scalable and efficient on this layer is the next step in building better blockchains.</strong></p>
<p>然而，除了计算与验证分离带来的可扩展性优势之外，还可以通过专门关注技术栈顶部的设计：模块化执行层，在可扩展性方面取得进一步进展。 <strong>在这一层上使计算更具可扩展性和效率是构建更好的区块链的下一步。</strong></p>
<p>Most modular execution layers currently under development use Ethereum as their parent chain, so default to using the EVM as an execution environment. This is the design equivalent of improving the energy efficiency of an internal combustion engine: an incremental improvement on an already outdated technology.</p>
<p>目前正在开发的大多数模块化执行层都使用以太坊作为其父链，因此默认使用 EVM 作为执行环境。这相当于提高内燃机的能源效率的设计：对已经过时的技术进行增量改进。</p>
<p>In reality, the modular stack opens up a much wider design space, removing the need for modular execution layers to rely on the inefficient EVM. <strong>Fuel is taking advantage of this newly expanded design space to build a modular execution layer which <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">goes beyond the EVM</a></strong>, optimizing for efficient &amp; scalable computation, superior developer experience, and maximum security.</p>
<p>实际上，模块化技术栈开辟了更广阔的设计空间，不再需要模块化执行层来依赖低效的 EVM。 <strong>Fuel 正在利用这个新扩展的设计空间来构建一个<a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">超越 EVM</a> 的模块化执行层</strong> ，优化高效和可扩展的计算、卓越的开发人员体验和最大的安全性。</p>
<p>In Part 2, we will explore the ways in which modular execution layers can transcend the technological limitations of the previous generation of blockchain design to achieve true scalability.</p>
<p>在第 2 部分中，我们将探讨模块化执行层如何超越上一代区块链设计的技术限制以实现真正的可扩展性。</p>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong><strong>Twitter</strong></strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong><strong>Discord</strong></strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong><strong>LinkedIn</strong></strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong><strong>YouTube</strong></strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong><strong>fastest execution layer</strong></strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong><strong>highest flexible throughput</strong></strong> and <strong><strong>maximum security</strong></strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong><strong>superior developer experience</strong></strong> and the ability to go <strong><strong>beyond the limitations of the EVM</strong></strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制****。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SeiNetwork长推-20221012 (SeiNetwork twitter threads-20221012)]]></title>
        <id>https://chainguys.github.io/post/seinetwork-chang-tui-20221012-seinetwork-twitter-threads-20221012/</id>
        <link href="https://chainguys.github.io/post/seinetwork-chang-tui-20221012-seinetwork-twitter-threads-20221012/">
        </link>
        <updated>2022-10-12T00:57:55.000Z</updated>
        <content type="html"><![CDATA[<p>原文地址:https://twitter.com/SeiNetwork/status/1575181008349302785</p>
<p>A $50,000,000 ecosystem &amp; liquidity fund awaits strong teams that build on Sei.  every week we work with<a href="https://twitter.com/Cryptocito">@Cryptocito</a> <a href="https://twitter.com/strangelovelabs">@strangelovelabs</a> <a href="https://twitter.com/Galileo_xyz">@galileo_xyz</a>to lay out the best developer opportunities in Web3. This week we're highlighting Tokenized Time.</p>
<p>一个价值 50,000,000 美元的生态系统和流动性基金正在等待建立在 Sei 之上的强大团队。每周我们都使用<a href="https://twitter.com/Cryptocito">@Cryptocito</a> <a href="https://twitter.com/strangelovelabs">@strangelovelabs</a> <a href="https://twitter.com/Galileo_xyz">@galileo_xyz</a>布局 Web3 中最好的开发人员机会。本周我们将重点介绍代币化时间。</p>
<p>Crypto has not yet disrupted one of the largest markets: Labor ![👷‍♂️]( Sei has been brainstorming ways to tokenize developer time, allowing for protocols and ecosystems to make better use of their valuable war-chests.</p>
<p>加密货币尚未扰乱最大的市场之一：人工！[👷‍♂️]（Sei 一直在集思广益，来标记开发人员的时间，允许协议和生态系统更好地利用其宝贵的资金。</p>
<p>Rather than giving out millions of incentives via liquidity mining, protocols can instead pay for developer hours to deploy towards key projects. We’re looking for the right team to explore this exciting, wide-open concept on crypto rails Ready to SEIze the opportunity?</p>
<p>与其通过流动性挖矿提供数百万的奖励，协议可以支付开发人员的时间来部署关键项目。我们正在寻找合适的团队来探索这个令人兴奋的、广泛开放的加密轨道概念 准备好抓住机会了吗？</p>
<p>Sei's Mission:<br>
Give DeFI protocols an unfair advantage.  Create a robust ecosystem tailored for trading.  Enable what cannot be done on any other Layer 1.</p>
<p>Sei的使命：<br>
给 DeFI 协议一个无与伦比优势。创建一个为交易量身定制的强大生态系统。达成在任何其他第 1 层上无法完成的事情。</p>
<p>To learn more about the $50 Million ecosystem fund check out these resources below</p>
<p>要了解有关 5000 万美元生态系统基金的更多信息，请查看以下资源</p>
<p><a href="https://twitter.com/SeiNetwork/status/1575181008349302785">点击此处</a></p>
<p>If you're interested in building anything on the chain made for DeFi fill out the ecosystem form:</p>
<p>如果您有兴趣在为 DeFi 制造的链上构建任何东西，请填写生态系统表格：</p>
<figure data-type="image" tabindex="1"><img src="https://pbs.twimg.com/card_img/1577423600331771905/qq_JGYRE?format=png&amp;name=900x900" alt="" loading="lazy"></figure>
<p><a href="https://y8e47wadwqp.typeform.com/to/Ia7t8DxY?typeform-source=t.co">https://y8e47wadwqp.typeform.com/to/Ia7t8DxY?typeform-source=t.co</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[当我们都Dedoco我们的文档 (When we all Dedoco our documents)]]></title>
        <id>https://chainguys.github.io/post/dang-wo-men-du-dedoco-wo-men-de-wen-dang-when-we-all-dedoco-our-documents/</id>
        <link href="https://chainguys.github.io/post/dang-wo-men-du-dedoco-wo-men-de-wen-dang-when-we-all-dedoco-our-documents/">
        </link>
        <updated>2022-10-11T00:29:48.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://akord.com/media/Dedoco-Future-Scenarios.png" alt="Dedoco Future Scenarios" loading="lazy"></figure>
<hr>
<h2 id="达到产品-行动的匹配-reaching-product-action-fit">达到产品-行动的匹配 (Reaching product-action fit)</h2>
<p>Some actions are so fundamental to our lives that we end up using the name of the product or service to describe the action itself.</p>
<p>有些行为对我们的生活如此重要，以至于我们最终使用产品或服务的名称来描述行为本身。</p>
<p>I’m sure you’ve Whatsapp’d someone, or told a friend you can easily ‘Uber it’ to this or that place. When your product takes the action itself in people’s minds, you could say you’ve achieved Product–Action Fit, your formal status as a verb has been reached.</p>
<p>我敢肯定你已经用 Whatsapp 找人了，或者告诉朋友你可以轻松地“优步”到这个或那个地方。当您的产品在人们的脑海中采取行动时，可以说您已经实现了产品-行动匹配，其作为动词的正式状态已经达到。</p>
<p>In web2, one of the companies that’s achieved Product–Action Fit is Docusign. You’ve probably told your lawyer, boss/employee or landlord that you’ll ‘Docusign’ the contract or agreement later that day, and it is here that Dedoco's disruption of traditional document management workflows has begun.</p>
<p>在 web2 中，实现产品-行动匹配的公司之一是 Docusign。您可能已经告诉您的律师、老板/雇员或房东，您将在当天晚些时候“签署”合同或协议，而 Dedoco 对传统文档管理工作流程的颠覆正是在这里开始的。</p>
<p>As the decentralised version of Docusign, when you hear the word ‘Dedoco’ in the future it will mean digital signatures in the new paradigm of data ownership, ushered in by web3.</p>
<p>作为 Docusign 的去中心化版本，当你在未来听到“Dedoco”这个词时，它将意味着由 web3 引入的新数据所有权范式中的数字签名。</p>
<p>However, if you dig a little deeper you may in fact find that Dedoco is evolving itself into something closer to a noun…</p>
<p>然而，如果你再深入一点，你实际上可能会发现 Dedoco 正在演变成更接近名词的东西……</p>
<h2 id="dedoco-的信任引擎-dedocos-engine-of-trust">Dedoco 的信任引擎 (Dedoco’s engine of trust)</h2>
<p>Dedoco has become well known in the APAC region for enabling a more secure and verifiable way to digitally sign electronic documents. By recording a document’s chain of custody on-chain, they are enabling a significant shift for organisations – allowing them to become ‘document-centric’ vs the more traditional ‘system-centric’ approach that formed the bedrock of web2.</p>
<p>Dedoco 以更安全和可验证的方式对电子文档进行数字签名而在亚太地区广为人知。通过在链上记录文档的监管链，它们为组织带来了重大转变——使它们成为“以文档为中心”，而不是形成 web2 基石的更传统的“以系统为中心”的方法。</p>
<p>The impact of creating this network of trusted, connected and verifiable documents is that the company is positioning its technology as the foundation for a whole ecosystem.</p>
<p>创建这个由可信、连接和可验证的文档组成的网络的影响在于，该公司将其技术定位为整个生态系统的基础。</p>
<p>Businesses and other applications will be able to plug into Dedoco’s ‘engine’ and execute many different document management workflows within a web3 enterprise context. The use cases include:</p>
<p>企业和其他应用程序将能够插入 Dedoco 的“引擎”并在 web3 企业环境中执行许多不同的文档管理工作流。用例包括：</p>
<ul>
<li>
<p>proof of originality  原创性证明</p>
</li>
<li>
<p>version checking  版本检查</p>
</li>
<li>
<p>proof of acknowledgement  承认证明</p>
</li>
<li>
<p>proof of status 身份证明</p>
</li>
<li>
<p>proof of ownership  所有权证明</p>
</li>
<li>
<p>agreement management  协议管理</p>
</li>
<li>
<p>proof of issuance.  发行证明</p>
</li>
</ul>
<p>Dedoco’s vision has always been that the platform remains agnostic to how an organisation wishes to manage their documents, putting data residency and ownership front and centre for partners and customers.</p>
<p>Dedoco 的愿景始终是，该平台始终不知道组织希望如何管理其文档，将数据驻留和所有权置于合作伙伴和客户的前沿和中心。</p>
<p>By providing a layer of trust at the data layer, as opposed to the system layer, other technologies and services can access their engine and reap the benefits – most notably providing an easily accessible bridge for web2 organisations looking to leverage the very best of web3 capabilities and outputs.</p>
<p>通过在数据层（而不是系统层）提供信任层，其他技术和服务可以访问它们的引擎并获得好处——最显着的是为希望利用最好的 web3 功能的 web2 组织提供一个易于访问的桥梁和输出。</p>
<p>So where is all this leading to? Perhaps the creation of a noun in the not too distant future – a trusted document category known simply as a 'Dedoco'.</p>
<p>那么这一切会导致什么？也许在不久的将来会创建一个名词——一种简单称为“Dedoco”的可信文档类别。</p>
<blockquote>
<p>If trust for you looks like getting immutable, verifiable documents – fantastic. That’s what we can enable for you. But then if that next level of trust that you require is that this document also needs to be permanently stored and there needs to be trust with third parties by sharing that information, that’s where that Akord layer comes in.</p>
<p>如果对您的信任看起来像是获得不可变的、可验证的文件——太棒了。这就是我们可以为您实现的。但是，如果您需要的下一个信任级别是该文档也需要永久存储，并且需要通过共享该信息来获得第三方的信任，那么这就是 Akord 层的用武之地。</p>
<p><strong>~ Jason Williamson, Head of Growth &amp; Strategic Partnerships, Dedoco</strong><br>
~ Jason Williamson，Dedoco 增长与战略伙伴关系主管</p>
</blockquote>
<h2 id="x-akord">X Akord</h2>
<p>Our partnership with Dedoco is a two-way collaboration – both Akord’s and Dedoco’s users will benefit from the value and features of the other’s platform. As consumers start to appreciate the risks in storing sensitive documents with third party SaaS solutions, we believe the demand for more private and secure storage alternatives like Akord will evolve.</p>
<p>我们与 Dedoco 的合作是双向合作——Akord 和 Dedoco 的用户都将受益于对方平台的价值和功能。随着消费者开始意识到使用第三方 SaaS 解决方案存储敏感文档的风险，我们相信对 Akord 等更私密、更安全的存储替代方案的需求将会发展。</p>
<p>The issue that remains is that trust in the document may be lost when it is shared at a later stage for a signing or approval process. Dedoco provides the perfect complementary solution by ensuring the digital trust is captured in a decentralised manner – and so our integration strategy was born.</p>
<p>剩下的问题是，当在稍后阶段共享文档以进行签名或批准过程时，可能会失去对文档的信任。 Dedoco 通过确保以去中心化的方式获取数字信任来提供完美的补充解决方案——因此我们的集成战略诞生了。</p>
<p>From the file menu in Akord, users can see the option ‘Send for signature’. Selecting this option will take you to Dedoco’s platform where your document will appear, ready to be set up and sent out for signing.</p>
<p>在 Akord 的文件菜单中，用户可以看到“发送签名”选项。选择此选项会将您带到 Dedoco 的平台，您的文档将出现在该平台上，准备好设置并发送出去以供签署。</p>
<p>We can realise incredibly secure workflows where legal documents are uploaded directly and versioned in Akord, each version protected by end-to-end encryption and stored permanently on Arweave, and then sent for signing with Dedoco. At no point is the document exposed to the risks inherent with web2 centralised cloud services.</p>
<p>我们可以实现非常安全的工作流程，其中法律文件直接上传并在 Akord 中进行版本控制，每个版本都受到端到端加密的保护并永久存储在 Arweave 上，然后发送给 Dedoco 进行签名。该文档绝不会暴露于 web2 集中式云服务固有的风险。</p>
<p>From the other side, users starting out in Dedoco will soon have the option to ‘Save to Akord’ at the end of the signing process. This will offer Dedoco’s extensive clients in business, finance and government the ability to permanently store their most valuable docs, paying a one-time fee for the additional security and simplicity Akord provides over other web2 competitors.</p>
<p>另一方面，从 Dedoco 开始的用户将很快可以在签名过程结束时选择“保存到 Akord”。这将为 Dedoco 在商业、金融和政府领域的广泛客户提供永久存储他们最有价值的文档的能力，支付一次性费用来获得 Akord 提供的与其他 web2 竞争对手相比的额外安全性和简单性。</p>
<h2 id="项目状态-project-status">项目状态 (Project status)</h2>
<p>The first release of this collaboration, the ‘Send for signing’ feature, is now live on <a href="http://v2.akord.com/">v2.akord.com</a>. The next step will be to integrate Akord as a storage option within Dedoco, empowering Dedoco's enterprise users with the ability to store their signed documents on Arweave.</p>
<p>此次合作的第一个版本“发送签名”功能现已在 <a href="http://v2.akord.com/">v2.akord.com</a> 上发布。下一步将把 Akord 作为存储选项集成到 Dedoco 中，使 Dedoco 的企业用户能够将他们签名的文档存储在 Arweave 上。</p>
<p>You can access this feature by going to the file menu on any uploaded pdf:<br>
您可以通过转到任何上传的 pdf 上的文件菜单来访问此功能：</p>
<figure data-type="image" tabindex="2"><img src="https://akord.com/media/Send-for-signing.png" alt="Send for signing" loading="lazy"></figure>
<p>In the future, we’ll be exploring how Akord can integrate with Dedoco’s engine of trust to help unlock other benefits for Akord’s users, features such as proof of ownership and issuance. We’ll also be working with Dedoco’s DeLabs – their web3 business integration studio – offering Arweave specific expertise and helping businesses integrate and build with the Akord protocol.</p>
<p>未来，我们将探索 Akord 如何与 Dedoco 的信任引擎集成，以帮助为 Akord 的用户解锁其他好处，例如所有权证明和发行证明。我们还将与 Dedoco 的 DeLabs（他们的 web3 业务集成工作室）合作，提供 Arweave 特定的专业知识并帮助企业使用 Akord 协议进行集成和构建。</p>
<p>You can listen to the episode of Striking Akord with Dedoco, where we discuss many of these topics, on the Arweave app <a href="https://permacast.dev/#/podcasts/aBeyl4yIuJSveNJ9QiX5SGccz2aFqueoyGWB7H0IApo">Permacast</a> or on <a href="https://open.spotify.com/show/1C6i7aGF6bMuRPXK2TevKu">Spotify</a>.</p>
<p>您可以在 Arweave 应用程序。</p>
<p>您可以在 Arweave 应用 <a href="https://permacast.dev/#/podcasts/aBeyl4yIuJSveNJ9QiX5SGccz2aFqueoyGWB7H0IApo">Permacast</a> 或 [Spotify](https: //open.spotify.com/show/1C6i7aGF6bMuRPXK2TevKu)上收听 Striking Akord with Dedoco 的内容，我们在其中讨论了许多这方面的事情。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[@fuellabs_长推20221007(@fuellabs_threads20221007)]]></title>
        <id>https://chainguys.github.io/post/fuellabs_-chang-tui-20221007fuellabs_threads20221007/</id>
        <link href="https://chainguys.github.io/post/fuellabs_-chang-tui-20221007fuellabs_threads20221007/">
        </link>
        <updated>2022-10-07T10:03:51.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><a href="https://www.youtube.com/watch?v=DhBkrc9dECg"><img src="https://i.ytimg.com/vi/DhBkrc9dECg/maxresdefault.jpg" alt="" loading="lazy"></a></figure>
<p>Our co-founder<a href="https://twitter.com/jadler0">@jadler0</a>recently sat down with<a href="https://twitter.com/LoganJastremski">@LoganJastremski</a>to discuss modular blockchains and Fuel Here are 7 highlights</p>
<p>我们的联合创始人<a href="https://twitter.com/jadler0">@jadler0</a>最近与<a href="https://twitter.com/LoganJastremski">@LoganJastremski</a>坐下来讨论模块化区块链和Fuel 谈及7个亮点</p>
<p>Highlight 1: Modularity and rollups enable new use cases It turns out a VM can be strictly better than the EVM. The FuelVM is the EVM but with higher performance and flexibility.</p>
<p>亮点 1：模块化和汇总支持新用例。事实证明，VM 可以比 EVM 更好。 FuelVM 是 EVM，但具有更高的性能和灵活性。</p>
<p>Highlight 2: Ethereum ≠ EVM Many believe that Ethereum comes only with the EVM and Solidity as the viable solution. Unknowing that you can actually innovate and improve the VM without sacrificing Ethereum's security as the core layer.</p>
<p>亮点 2：以太坊≠ EVM 许多人认为以太坊只有 EVM 和 Solidity 能作为可行的解决方案。不知道你实际上可以在不牺牲以太坊作为核心层安全性的情况下，创新和改进虚拟机。</p>
<p>Highlight 3: Blockchain bottlenecks are changing The EVM throughput is limited in order to facilitate full nodes to secure the network. The introduction of trust minimized light nodes with fraud and validity proofs is a game-changer, making execution the primary bottleneck.</p>
<p>亮点 3：区块链瓶颈正在改变 EVM吞吐量受到限制，以促进全节点保护网络。引入具有欺诈和有效性证明的信任最小化轻节点改变了游戏规则，使执行成为主要瓶颈。</p>
<p>Highlight 4: Rollups enable incredible innovation on the execution layer Why? Because there is no burden of state history (i.e. as with Ethereum) that otherwise needs to be considered. This allows for innovation from the ground up.</p>
<p>亮点 4：汇总在执行层上实现了令人难以置信的创新。为什么？因为没有其他需要考虑的状态历史负担（即与以太坊一样）。这允许从头开始进行创新。</p>
<p>Highlight 5: General purpose VMs that don't use parallel transaction execution will be left behind How come? It's pretty simple: If you don't, you will have leftover compute capacity that is left unused. This is not optimal for performance in the long term.</p>
<p>亮点 5：不使用并行交易执行的通用 VM 将被抛弃。为什么？这很简单：如果不这样做，您将拥有未使用的剩余计算容量。从长远来看，这对性能来说并不是最佳的。</p>
<p>Highlight 6: The current state of ORs are not improving on the EVM - but stagnating in terms of innovation. Fuel implements some EIPs that never got to production. For instance: EIP-648: Parallel transaction execution EIP-3074: AUTH and AUTHCALL opcodes</p>
<p>亮点 6：ORs 的当前状态在 EVM 上没有改善 - 但在创新方面停滞不前。 Fuel 实现了一些从未投入生产的 EIP。例如： EIP-648：并行交易执行 EIP-3074：AUTH 和 AUTHCALL 操作码</p>
<p>Highlight 7: A scalable data layer without a scalable execution layer is worthless Bytes per second (DA) is not Transactions per second. To solve the scalability problem you need to optimize for both DA and execution.</p>
<p>亮点 7：没有可扩展执行层的可扩展数据层毫无价值。每秒字节数 (DA) 不是每秒交易数。要解决可扩展性问题，您需要针对 DA 和执行进行优化。</p>
<p>The 7 Highlights !  7大亮点！</p>
<ol>
<li>
<p>Modularity and rollups enable new use cases<br>
模块化和汇总支持新用例</p>
</li>
<li>
<p>Ethereum ≠ EVM<br>
以太坊≠EVM</p>
</li>
<li>
<p>Blockchain bottlenecks are changing<br>
区块链的瓶颈正在改变</p>
</li>
<li>
<p>Rollups enable incredible innovation on the execution layer<br>
汇总在执行层上实现了令人难以置信的创新</p>
</li>
<li>
<p>General purpose VMs that don't use parallel transaction execution will be left behind<br>
不使用并行交易执行的通用 VM 将被抛在后面</p>
</li>
<li>
<p>The current state of ORs are not improving on the EVM - but stagnating in terms of innovation.<br>
ORs 的当前状态并没有在 EVM 上有所改善，且在创新方面停滞不前。</p>
</li>
<li>
<p>A scalable data layerwithout a scalable execution layer is worthless<br>
没有可扩展执行层的可扩展数据层毫无价值</p>
</li>
</ol>
<p>Listen to the full podcast below ↓<br>
收听下面的完整播客↓</p>
<figure data-type="image" tabindex="2"><a href="https://www.youtube.com/watch?v=DhBkrc9dECg"><img src="https://i.ytimg.com/vi/DhBkrc9dECg/maxresdefault.jpg" alt="" loading="lazy"></a></figure>
<p>原文地址：<a href="https://twitter.com/fuellabs_/status/1578412287957704704">https://twitter.com/fuellabs_/status/1578412287957704704</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Akord应用V2介绍 (Introducing the V2 Akord app)]]></title>
        <id>https://chainguys.github.io/post/akord-ying-yong-v2-jie-shao-introducing-the-v2-akord-app/</id>
        <link href="https://chainguys.github.io/post/akord-ying-yong-v2-jie-shao-introducing-the-v2-akord-app/">
        </link>
        <updated>2022-10-06T12:16:32.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://akord.com/media/akord-v2-post.png" alt="Akord v2 post" loading="lazy"></figure>
<h2 id="新协议新应用-new-protocol-new-app">新协议，新应用 (New protocol, new app)</h2>
<p>We recently released the new <a href="http://docs.akord.com/">Akord protocol</a> open source along with a raft of developer tools to help builders get going on the new protocol.</p>
<p>我们最近发布了新的开源 <a href="http://docs.akord.com/">Akord 协议</a> 以及大量开发工具，以帮助构建者着手使用新协议。</p>
<p>The Akord protocol marks a new beginning where we start to create an ecosystem of builders who will use our technology to integrate permanence, privacy and collaboration on Arweave into their own projects.</p>
<p>Akord 协议标志着一个新的开始，我们开始创建一个构建者生态系统，他们将使用我们的技术把 Arweave 上永续、隐私和协作集成到他们自己的项目中。</p>
<p>We built the Akord protocol for number of reasons, including:</p>
<p>我们构建 Akord 协议的原因有很多，包括：</p>
<ul>
<li>
<p>having a standard way of posting transactions to arweave<br>
有一个标准的方式来发布交易到 arweave</p>
</li>
<li>
<p>moving from base64 to binary uploads to get rid of unnecessary storage consumption caused by encoding<br>
从 base64 迁移到二进制上传，以摆脱编码造成的不必要的存储消耗</p>
</li>
<li>
<p>moving to arbundles to get finite and deterministic transaction references<br>
转移到 arbundles 以获得有限和确定性的交易参考</p>
</li>
<li>
<p>improving encryption to defend from quantum computing attacks<br>
改进加密以防御量子计算攻击</p>
</li>
<li>
<p>using Redstone warp to have each vault represented by warp contract with calculated state.<br>
使用红石(Redstone)封装使每个保险库都由具有计算状态的封装合约表示。</p>
</li>
</ul>
<p><strong>Along with the protocol release, we launched a new version of the Akord app – the first application to be built on top of the protocol.</strong></p>
<p><strong>随着协议的发布，我们推出了新版本的 Akord 应用程序——第一个基于协议构建的应用程序。</strong></p>
<p>These changes, while a big leap forward technologically, were breaking in the sense that we no longer maintain the code needed for the old decryption and encryption used on v1 (<a href="http://app.akord.com/">app.akord.com</a>).</p>
<p>这些变化，虽然在技术上是一个巨大的飞跃，但从某种意义上说，我们不再维护 v1 上使用的旧解密和加密所需的代码 ([app.akord.com](http://app.akord.com /))。</p>
<p><strong>You can login to <a href="http://v2.akord.com/">v2.akord.com</a> with the login credentials from app.akord.com, but you will not see any of your vaults or uploaded data.</strong></p>
<p><strong>您可以使用 app.akord.com 的登录凭据登录 <a href="http://v2.akord.com/">v2.akord.com</a>，但您不会看到任何保管库或上传的数据。</strong></p>
<h3 id="迁移工具-migration-tool">迁移工具 (Migration tool)</h3>
<p>No data uploaded to app.akord.com will ever be lost. Eventually we will deprecate this app, as from now on all new features will be deployed on the new v2.akord.com. But for a while we will run both apps, giving people time to migrate their data to the new version.</p>
<p>上传到 app.akord.com 的任何数据都不会丢失。最终我们将弃用此应用，因为从现在开始，所有新功能都将部署在新的 v2.akord.com 上。但在一段时间内，我们将同时运行这两个应用程序，让人们有时间将他们的数据迁移到新版本。</p>
<p>We’re currently building a migration tool that will enable anyone who has vaults and data on app.akord.com to migrate everything to v2. **There will be no cost for this migration, the tool will be completely free to use.**If you have any questions concerning the migration of your data, the best place to reach our team is on the community <a href="https://discord.com/invite/g4VXfauK5s">Discord</a>.</p>
<p>我们目前正在构建一个迁移工具，使任何在 app.akord.com 上拥有保管库和数据的人都可以将所有内容迁移到 v2。 <strong>此迁移不收取任何费用，该工具将完全免费使用。如果您对数据迁移有任何疑问，联系我们团队的最佳地点是社区 [Discord](https 😕/discord.com/invite/g4VXfauK5s)。</strong></p>
<h3 id="查看合约-view-contracts">查看合约 (View contracts)</h3>
<p>Most of these changes, being at the protocol level, are not noticeable when you use the new app by logging in to v2.akord.com. The exception is that you can now select “View contract” from the vault menu, and you will be taken to the Warp contract page for the vault on Redstone’s SonAR explorer.</p>
<p>当您通过登录 v2.akord.com 使用新应用时，这些更改中的大部分内容在协议级别上都并不明显。唯一的例外是您现在可以从保险库菜单中选择“查看合约”，您将被带到 Redstone 的 SonAR 浏览器上保险库的 Warp(封装) 合同页面。</p>
<figure data-type="image" tabindex="2"><img src="https://akord.com/media/Screenshot-2022-10-04-at-14.49.22.png" alt="Screenshot 2022 10 04 at 14 49 22" loading="lazy"></figure>
<h3 id="共享公共保管库-share-public-vault">共享公共保管库 (Share public vault)</h3>
<p>There is one other new change to v2.akord.com, which you will see from the vault menu: select “Share vault” and get a link to share with anyone and let them easily view your vault’s contents.</p>
<p>v2.akord.com 还有另一项新变化，您将从保管库菜单中看到：选择“共享保管库”并获取与任何人共享的链接，让他们轻松查看您保管库的内容。</p>
<figure data-type="image" tabindex="3"><img src="https://akord.com/media/Screenshot-2022-10-07-at-10.41.48.png" alt="Screenshot 2022 10 07 at 10 41 48" loading="lazy"></figure>
<p>Please note that you can share your vault straight away, even while your uploads are in pending state. This means if you click on the “View transaction” link on individual files, it will display a 404 error on viewblock.io.</p>
<p>请注意，即使您的上传处于待处理状态，您也可以立即共享您的保管库。这意味着如果您单击单个文件上的“查看交易”链接，它将在 viewblock.io 上显示 404 错误。</p>
<p>If you want to share your public vault and have all the files to have working transaction links to viewblock.io, than ensure all content is no longer in pending state (file icons with orange dots are in pending).</p>
<p>如果您想共享您的公共保管库并让所有文件都具有指向 viewblock.io 的有效交易链接，那么请确保所有内容不再处于待处理状态（带有橙色圆点的文件图标处于待处理状态）。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[介绍Fuel资助计划 (Introducing the Fuel Grants Program)]]></title>
        <id>https://chainguys.github.io/post/jie-shao-fuel-zi-zhu-ji-hua-introducing-the-fuel-grants-program/</id>
        <link href="https://chainguys.github.io/post/jie-shao-fuel-zi-zhu-ji-hua-introducing-the-fuel-grants-program/">
        </link>
        <updated>2022-10-06T09:03:47.000Z</updated>
        <content type="html"><![CDATA[<p>Fuel is offering grants ranging from $10k-$150k USD to developers and creators building on Fuel, the fastest modular execution layer.</p>
<p>Fuel 向基于最快模块化执行层 Fuel 的开发人员和构建者提供 1 万至 15 万美元不等的资助。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/10/FuelGrants.png" alt="Introducing the Fuel Grants Program" loading="lazy"><br>
Apply for a grant <a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">here</a><br>
点<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">此处</a>  申请资助！</p>
<hr>
<p>Earlier this year, we introduced Fuel v2, the fastest modular execution layer. With the development of Fuel v2, we have begun to shift away from traditional monolithic structures, where all aspects of a blockchain, (consensus, data availability, and execution), are handled on a single layer.</p>
<p>今年早些时候，我们推出了最快的模块化执行层 Fuel v2。随着 Fuel v2 的发展，我们已经开始摆脱传统的单片结构，在这种结构中，区块链的所有方面（共识、数据可用性和执行）都在单一层上处理。</p>
<p>The introduction of the <strong>Fuel VM</strong> provides incredibly high levels of throughput through parallelization via UTXOs. The FuelVM learns from the Ethereum ecosystem, implementing improvements that were suggested to the Ethereum VM (EVM) for many years, but couldn’t be implemented due to the need of maintaining backward compatibility. We have seen a radical uptick of interest in Fuel, particularly from developers interested in building a modular future with us.</p>
<p><strong>Fuel VM</strong> 的引入，通过 UTXO 并行化提供了令人难以置信的高水平吞吐量。 FuelVM 从以太坊生态系统中学习，实施了多年来对以太坊 VM (EVM) 提出的改进，但由于需要保持向后兼容性而无法实施。我们已经看到(市场)对 Fuel 的兴趣急剧上升，特别是有兴趣与我们一起构建模块化未来的开发人员。</p>
<p>From decentralized exchanges to lending markets, oracles, NFT projects, and more, the Fuel ecosystem is growing significantly. Already, we have a large number of projects building, including:</p>
<p>从去中心化交易所到借贷市场、预言机、NFT 项目等等，Fuel 生态系统正在显着增长。我们已经有大量的项目在建，包括：</p>
<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/2022/10/GrantedApps.png" alt="" loading="lazy"></figure>
<ul>
<li>
<p><strong><a href="https://elix.finance/#">Elix</a></strong> - an advanced decentralized exchange doing deep research into bonding curves - <a href="https://twitter.com/elixfinance">Twitter</a><br>
<strong><a href="https://elix.finance/#">Elix</a></strong> - 一个对联合曲线进行深入研究的高级去中心化交易所 - <a href="https://twitter.com/elixfinance">Twitter</a></p>
</li>
<li>
<p><strong><a href="https://microchain.systems/">Microchain</a></strong> - A low-cost, easy-to-use token swapping terminal with two major benefits... versatility and simplicity - <a href="https://twitter.com/MicrochainSys">Twitter</a><br>
<strong><a href="https://microchain.systems/">Microchain</a></strong> - 一个低成本、易用的代币兑换终端，具有两大优势……多功能性和简单性 - [Twitter](https:// /twitter.com/MicrochainSys)</p>
</li>
<li>
<p><a href="https://www.unic.io/"><strong>UNIC</strong></a> - Bringing real-world items on-chain as NFTs - <a href="https://twitter.com/0xUNIC">Twitter</a>  <br>
<a href="https://www.unic.io/"><strong>UNIC</strong></a> - 将现实世界的物品以 NFT 形式上链 - <a href="https://twitter.com/0xUNIC">Twitter</a></p>
</li>
<li>
<p><strong><a href="https://twitter.com/fuelnomen">Fuel Nomen</a></strong> - A decentralized naming service for Fuel<br>
<strong><a href="https://twitter.com/fuelnomen">Fuel Nomen</a></strong> - Fuel 的去中心化命名服务</p>
</li>
<li>
<p><strong>Thunder</strong> - A fully on-chain NFT marketplace allowing for batch listing and purchasing with an emphasis on UX/UI experience for users.<br>
<strong>Thunder</strong> - 一个完全链上的 NFT 市场，允许批量上市和购买，重点是用户的 UX/UI 体验。</p>
</li>
<li>
<p><strong><a href="https://docs.poolsharks.io/">Poolsharks</a></strong> - OceanBook is an open-source web3 protocol that makes it easy for users, protocols, and DAOs to set limit orders all in one aggregated orderbook. - <a href="https://twitter.com/poolsharks_labs">Twitter</a><br>
<strong><a href="https://docs.poolsharks.io/">Poolsharks</a></strong> - OceanBook 是一种开源的 web3 协议，它使用户、协议和 DAO 可以在一个聚合订单簿中轻松设置限价单。 - <a href="https://twitter.com/poolsharks_labs">twitter</a></p>
</li>
<li>
<p><a href="https://acumen.network/"><strong>Accumen</strong></a> - bridging DeFi and Traditional Finance, Accumen democratizes access to capital to thousands of SMEs and Entrepreneurs while allowing crypto lenders to earn an attractive, stable, and uncorrelated yield - <a href="https://twitter.com/acumenofficial">Twitter</a><br>
<a href="https://acumen.network/"><strong>Accumen</strong></a> - 连接 DeFi 和传统金融，Accumen 使成千上万的中小企业和企业家获得资本的机会民主化，同时允许加密货币贷方获得有吸引力、稳定且不相关的收益- <a href="https://twitter.com/acumenofficial">twitter</a></p>
</li>
<li>
<p><strong><a href="https://orao.network/">Orao</a></strong> - an oracle service for custom data feeds - <a href="https://twitter.com/OraoNetwork">Twitter</a><br>
<strong><a href="https://orao.network/">Orao</a></strong> - 用于自定义数据推送的预言机服务 - <a href="https://twitter.com/OraoNetwork">Twitter</a></p>
</li>
</ul>
<hr>
<h2 id="什么是fuel资助计划what-is-the-fuel-grants-program">什么是Fuel资助计划？(What is the Fuel Grants Program?)</h2>
<p>The Fuel Grants Program is designed to support projects building on Fuel. Currently, we are offering generous grants ranging from $10,000-$150,000 USD to developers, creators, and new or existing projects to build on the world's fastest modular execution layer.</p>
<p>Fuel资助计划旨在支持以Fuel为基础的项目。目前，我们向开发人员、创作者以及新的或现有的项目提供 10,000 美元至 150,000 美元不等的慷慨资助，让其在世界上最快的模块化执行层上进行构建。</p>
<p>We welcome all builders with a passion for decentralization, web3, and building the modular future. We envision an autonomous future, where systems are built to power the next generation of human coordination and cooperation. Building on Fuel means breaking free from the constraints of monolithic blockchains.</p>
<p>我们欢迎所有对去中心化、web3 和构建模块化未来充满热情的构建者。我们设想一个自治的未来，建立系统来推动下一代人类协调与合作。基于 Fuel 的构建意味着摆脱单一区块链的限制。</p>
<p>The grants program is not limited to what you see in this post, however; but will evolve over time. As interest grows both within our ecosystem, and external to it, we will take time to listen to the people building, understanding their needs, and wants for an ecosystem. This ecosystem is not defined by us, but by the projects building within it.</p>
<p>但是，赠款计划不仅限于您在这篇文章中看到的内容；会随着时间的推移而发展。随着我们生态系统内外的兴趣不断增长，我们将花时间倾听人们的意见，了解他们对生态系统的需求和需求。这个生态系统不是由我们定义的，而是由在其中构建的项目定义的。</p>
<h2 id="申请流程-the-application-process">申请流程 (The Application Process)</h2>
<h3 id="分类-categories">分类 (Categories)</h3>
<p>Fuel is a budding ecosystem, and we’re in search of a variety of exciting projects to build on our protocol. When applying for a grant, please consider the following categories, and in particular where your project fits in. Note that projects that do not fit into a specific category are still welcome to apply!</p>
<p>Fuel 是一个新兴的生态系统，我们正在寻找各种令人兴奋的项目来构建我们的协议。申请资助时，请考虑以下类别，尤其是您的项目适合的类别。请注意，仍然欢迎不适合特定类别的项目申请！</p>
<ul>
<li>Protocol development  协议开发</li>
<li>Applications and integrations (think DeFi apps)  应用和集成（比如DeFi 应用程序）</li>
<li>Infrastructure  基础设施</li>
<li>Developer tooling  开发者工具</li>
<li>Auditing  审计</li>
<li>Community (marketing and educational)  社区（营销和教育）</li>
<li>Events and hackathons  活动和黑客马拉松</li>
</ul>
<h3 id="申请标准和指南-criteria-and-guidelines-for-applications">申请标准和指南 (Criteria and Guidelines for Applications)</h3>
<p>When applying for an ecosystem grant, you will be asked to provide the following information:<br>
申请生态系统补助金时，您将被要求提供以下信息：</p>
<ul>
<li>Project name;  项目名称;</li>
<li>Description and stage of the project;  项目描述和阶段；</li>
<li>Why do you want to build on Fuel, and how your project benefits Fuel;  你为什么要在 Fuel 上构建，以及你的项目如何使 Fuel 受益；</li>
<li>The scope of your project and milestones;  您的项目范围和里程碑；</li>
<li>How many people are working on the project;  有多少人在做这个项目；</li>
</ul>
<p>Additionally:<br>
此外：</p>
<ul>
<li>
<p>All projects must commit to being open source via MIT or Apache Licensing.<br>
所有项目必须承诺通过 MIT 或 Apache Licensing 开源。</p>
</li>
<li>
<p>We don't require developers to be public, but to receive funding we require identity verification.<br>
我们不要求开发者公开，但要获得资金，我们需要进行身份验证。</p>
</li>
</ul>
<p>We welcome applications from projects at varying stages of development, from early ideation to MVP and beyond. We’d also love to hear from projects already building on other chains who want to deploy on Fuel as well.</p>
<p>我们欢迎处于不同开发阶段的项目的应用，从早期构思到 MVP 及之后。我们也很想听到已在其他链上构建的项目也想部署在 Fuel 上。</p>
<h2 id="审核流程-review-process">审核流程 (Review Process)</h2>
<p>We review applications on a rolling basis and will contact you after we have completed an internal review. This process can take up to two weeks, and we may contact you in the interim for any clarifications regarding your application.</p>
<p>我们会滚动审核申请，并在完成内部审核后与您联系。此过程最多可能需要两周时间，我们可能会在此期间与您联系以了解有关您的申请的任何说明。</p>
<p>The Fuel team will then reach out to you to arrange an interview, and following this, confirm our decision on the application. If your application is approved, we will work with you through an onboarding process, establish certain milestones for the project, and get you started on building on Fuel!</p>
<p>Fuel 团队随后会联系您面试，并在此之后确认对申请的决定。如果您的申请获得批准，我们将通过入职流程与您合作，为项目建立某些里程碑，并让您开始在 Fuel 上进行构建！</p>
<h2 id="申请-apply">申请 (Apply)</h2>
<p>To apply for a grant, fill out <a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">this</a> form.</p>
<p>要申请资助，请填写 <a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">这个</a> 表格。</p>
<p>We’re incredibly excited to launch this Grants program, to see more of you building on Fuel, and taking the modular-pill. If you have any additional questions please feel free to reach out to <a href="mailto:grants@fuel.sh">grants@fuel.sh</a>.</p>
<p>我们非常高兴能够启动这个赠款计划，看到更多人在 Fuel 上构建，并服用模块化药片。如果您有任何其他问题，请随时与 <a href="mailto:grants@fuel.sh">grants@fuel.sh</a> 联系。</p>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong><strong>Twitter</strong></strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong><strong>Discord</strong></strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong><strong>LinkedIn</strong></strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong><strong>YouTube</strong></strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong><strong>fastest execution layer</strong></strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong><strong>highest flexible throughput</strong></strong> and <strong><strong>maximum security</strong></strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong><strong>superior developer experience</strong></strong> and the ability to go <strong><strong>beyond the limitations of the EVM</strong></strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链堆栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制****。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neon EVM：如何使用Truffle部署dApps (Neon EVM：How to Deploy dApps Using Truffle)]]></title>
        <id>https://chainguys.github.io/post/neon-evmru-he-shi-yong-truffle-bu-shu-dapps-neon-evmhow-to-deploy-dapps-using-truffle/</id>
        <link href="https://chainguys.github.io/post/neon-evmru-he-shi-yong-truffle-bu-shu-dapps-neon-evmhow-to-deploy-dapps-using-truffle/">
        </link>
        <updated>2022-10-05T09:42:34.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*FyXVoy4GqE7wr39rFjBN8A.png" alt="" loading="lazy"></figure>
<hr>
<p>As a developer, you know the importance of understanding how to deploy the smart contract code you’ve written onto the blockchain. Our Deploying Neon dApps article series provides this crucial information in a simple and straightforward way. This article, the second in the series, will show you how to deploy Solidity dApps using Truffle. You can also check out our articles on deploying Neon with <a href="https://medium.com/neon-labs/neon-evm-how-to-deploy-dapps-using-remix-363ebe946ed2">Remix</a> and Hardhat.</p>
<p>作为开发人员，您知道这件事的重要性：了解如何将您编写的智能合约代码部署到区块链上。我们的 Deploying Neon dApps(部署Neon dApps) 系列文章以简单直接的方式提供了这些重要信息。本文是该系列的第二篇，将向您展示如何使用 Truffle 部署 Solidity dApp。您还可以查看我们关于使用 <a href="https://medium.com/neon-labs/neon-evm-how-to-deploy-dapps-using-remix-363ebe946ed2">Remix</a> 和 Hardhat 部署 Neon 的文章。</p>
<p><a href="https://trufflesuite.com/">Truffle</a> is a deployment tool, development environment, and asset pipeline that makes it easy for developers to test and debug their code on-chain. Unlike Remix, which only supports a few functions and can’t run automated tests, Truffle is an advanced and flexible tool that can support much more complex code. However, Truffle can only be used via a command-line interface and is not an IDE.</p>
<p><a href="https://trufflesuite.com/">Truffle</a> 是一个部署工具、开发环境和资产管道，可让开发人员轻松测试和调试其链上代码。与仅支持少数功能且无法运行自动化测试的 Remix 不同，Truffle 是一种先进且灵活的工具，可以支持更复杂的代码。但是，Truffle 只能通过命令行界面使用，而不是 IDE。</p>
<p>To deploy your contracts successfully, you will need to modify the publicly available Truffle configuration file, which contains the private keys for the wallets the contract interacts with. For this reason, you should only use Truffle for debugging or testing purposes and not for mainnet deployment.</p>
<p>要成功部署您的合约，您需要修改公开可用的 Truffle 配置文件，其中包含与合约交互的钱包的私钥。出于这个原因，你应该只将 Truffle 用于调试或测试目的，而不是用于主网部署。</p>
<p><strong>Before You Begin</strong><br>
<strong>准备工作</strong></p>
<p>Before you start the tutorial below, make that the following is true:<br>
在开始下面的教程之前，请确保以下内容为真：</p>
<ul>
<li>
<p>MetaMask is installed on your device<br>
MetaMask 已安装在您的设备上</p>
</li>
<li>
<p>MetaMask is configured for Neon EVM<br>
MetaMask 已配置 Neon EVM</p>
</li>
<li>
<p>NodeJS v8.9.4 or later is installed on your device<br>
您的设备上已安装 NodeJS v8.9.4 或更高版本</p>
</li>
<li>
<p>Git is installed on your device (on Windows, use Git Bash)<br>
Git 已安装在您的设备上(在 Windows 上，使用 Git Bash)</p>
</li>
</ul>
<p>To install and configure MetaMask, follow <a href="https://docs.neon-labs.org/docs/wallet/metamask_setup">this guide</a>.<br>
要安装和配置 MetaMask，请按照 <a href="https://docs.neon-labs.org/docs/wallet/metamask_setup">本指南</a>。</p>
<p><strong>ERC-20 Tutorial</strong><br>
<strong>ERC-20 教程</strong></p>
<p>The following tutorial will explain how to deploy a simple ERC-20 token contract to the Neon Devnet using Truffle.</p>
<p>以下教程将解释如何使用 Truffle 将简单的 ERC-20 代币合约部署到 Neon Devnet。</p>
<p><strong>第1步：安装 Truffle (Step 1: Install Truffle)</strong></p>
<p>Using Git, clone the ERC-20 Truffle project from Neon’s remote repository and navigate to it with the following commands:</p>
<p>使用 Git，从 Neon 的远程存储库中克隆 ERC-20 Truffle 项目，并使用以下命令导航到该项目：</p>
<pre><code>git clone https://github.com/neonlabsorg/examples.git

cd examples/simple-erc20-truffle
</code></pre>
<p>Then, run the following command to install Truffle and the dependencies necessary to run the example project:</p>
<p>然后，运行以下命令来安装 Truffle 和运行示例项目所需的依赖项：</p>
<pre><code>npm install
</code></pre>
<p>If the above command results in an error, run the following command:</p>
<p>如果上述命令导致错误，请运行以下命令：</p>
<pre><code>npm cache clear --force

npm install
</code></pre>
<p><strong>第2步：设置 MetaMask 帐户和配置文件 (Step 2: Set Up the MetaMask Accounts and Configuration File)</strong></p>
<p>To interact with the soon-to-be-deployed contracts, you’ll need to create two new accounts in MetaMask. Before you begin, make sure that MetaMask is connected to the Neon Devnet.</p>
<p>要与即将部署的合约交互，您需要在 MetaMask 中创建两个新账户。在开始之前，请确保 MetaMask 已连接到 Neon Devnet。</p>
<p>In MetaMask, create two new accounts by clicking on your current account’s icon in the top right of the MetaMask extension pop-up, and then when the drop-down menu appears, click on “Create an Account”. Then, use the <a href="https://docs.neon-labs.org/docs/developing/utilities/faucet">NeonFaucet</a> to obtain some Devnet NEON tokens for these accounts.</p>
<p>在 MetaMask 中，通过单击 MetaMask 扩展弹出窗口右上角的当前帐户图标创建两个新帐户，然后在出现下拉菜单时单击“创建帐户”。然后，使用 <a href="https://docs.neon-labs.org/docs/developing/utilities/faucet">NeonFaucet</a> 为这些帐户获取一些 Devnet NEON代币。</p>
<p>Next, click on the three vertical dots to the right of your currently displayed account name and wallet address to open a drop-down menu. Select “Account Details” then “Export Private Key”. Enter your password and select “Confirm” to get access to the private key for that account. Copy both accounts’ private keys and paste them into the truffle-config.js file in the project folder, replacing the placeholder text in lines 11 and 12 of that file. Make sure to prefix these keys with “0x” in the configuration file.</p>
<p>接下来，单击您当前显示的帐户名称和钱包地址右侧的三个垂直点，打开下拉菜单。选择“帐户详细信息”，然后选择“导出私钥”。输入您的密码并选择“确认”，访问该帐户的私钥。复制两个帐户的私钥并将它们粘贴到项目文件夹中的 truffle-config.js 文件中，替换该文件第 11 行和第 12 行中的占位符文本。确保在配置文件中为这些键添加前缀“0x”。</p>
<p><strong>第3步：编译合约 (Step 3: Compile Contracts)</strong></p>
<p>To compile the project’s contracts (which are located in the “contracts/” folder), run the following command:</p>
<p>要编译项目的合约(位于“contracts/”文件夹中)，请运行以下命令：</p>
<pre><code>./node_modules/.bin/truffle compile
</code></pre>
<p>The output from this command should be similar to the following:</p>
<p>此命令的输出应类似于以下内容：</p>
<figure data-type="image" tabindex="2"><img src="https://miro.medium.com/max/1400/0*LtZtr_3WXLE0jqRh" alt="" loading="lazy"></figure>
<p><strong>第4步：运行测试 (Step 4: Run Tests)</strong></p>
<p>To run the project tests before deploying, run the following command. It will compile the contracts, deploy them to the Neon Devnet, and run all the tests in the “tests/” folder to make sure the contracts are working as expected.</p>
<p>要在部署之前运行项目测试，请运行以下命令。它将编译合约，将它们部署到 Neon Devnet，并运行“tests/”文件夹中的所有测试，确保合约按预期工作。</p>
<pre><code>./node_modules/.bin/truffle test --network neonlabs
</code></pre>
<p>If the tests all pass, the output of this command should look something like this</p>
<p>如果测试全部通过，则此命令的输出应如下所示：</p>
<figure data-type="image" tabindex="3"><img src="https://miro.medium.com/max/1400/0*N8dpM4prX_eNh3zV" alt="" loading="lazy"></figure>
<p><strong>第5步：运行迁移 (Step 5: Run Migrations)</strong></p>
<p>Deploying the contracts to Neon requires running some migration scripts, which are located in the “migrations/” folder. To do this, run the following command:</p>
<p>将合约部署到 Neon 需要运行一些迁移脚本，这些脚本位于“migrations/”文件夹中。为此，请运行以下命令：</p>
<pre><code>./node_modules/.bin/truffle migrate --network neonlabs
</code></pre>
<p>You should see output in your terminal similar to the following:</p>
<p>您应该会在终端中看到类似于以下内容的输出：</p>
<figure data-type="image" tabindex="4"><img src="https://miro.medium.com/max/1400/0*V9cMb296apRFdj4R" alt="" loading="lazy"></figure>
<p><strong>第6步：将项目连接到 MetaMask (Step 6: Connect the Project to MetaMask)</strong></p>
<p>To use this newly deployed ERC-20-style Neon Devnet token with ease, follow <a href="https://metamask.zendesk.com/hc/en-us/articles/360015489031-How-to-add-unlisted-tokens-custom-tokens-in-MetaMask#h_01FWH492CHY60HWPC28RW0872H">these instructions</a> to import the token as an asset in MetaMask. Use the “contract address” from the output in Step 5 for the “Token Contract Address” in the instructions.</p>
<p>要轻松使用这个新部署的 ERC-20 式 Neon Devnet代币，请按照 <a href="https://metamask.zendesk.com/hc/en-us/articles/360015489031-How-to-add-unlisted-tokens-custom-tokens-in-MetaMask#h_01FWH492CHY60HWPC28RW0872H">这些说明</a>将代币作为资产导入 MetaMask。将步骤 5 输出中的“合约地址”用于说明中的“代币合约地址”。</p>
<p>Once you complete this final step, you will be able to see your new ERC-20 assets in the MetaMask profiles of the new test accounts.</p>
<p>完成最后一步后，您将能够在新测试帐户的 MetaMask 配置文件中看到您的新 ERC-20 资产。</p>
<h2 id="结论-conclusion">结论 (Conclusion)</h2>
<p>Truffle is a versatile, flexible solution for deploying dApps on Neon, with a lot of room for customization and playing with advanced features. However, because it has some security vulnerabilities when deploying to Neon, it remains usable only for testing and development. Therefore, while Truffle is great for Neon developers during the development process itself, the final deployment must be done with a different tool.</p>
<p>Truffle 是用于在 Neon 上部署 dApp 的多功能、灵活的解决方案，具有很大的定制和使用高级功能的空间。但是，由于它在部署到 Neon 时存在一些安全漏洞，因此只能用于测试和开发。因此，虽然 Truffle 在开发过程中非常适合 Neon 开发人员，但最终部署必须使用不同的工具来完成。</p>
<p>Visit the <a href="https://docs.neon-labs.org/docs/developing/deploy_facilities/using_truffle">Neon docs</a> for a complete tutorial on using Truffle to deploy your dApps.</p>
<p>访问 <a href="https://docs.neon-labs.org/docs/developing/deploy_facilities/using_truffle">Neon docs</a>，获取有关使用 Truffle 部署 dApp 的完整教程。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[超越单片链：模块化区块链范式 (Beyond Monolithic：The Modular Blockchain Paradigm)]]></title>
        <id>https://chainguys.github.io/post/chao-yue-dan-pian-lian-mo-kuai-hua-qu-kuai-lian-fan-shi-beyond-monolithicthe-modular-blockchain-paradigm/</id>
        <link href="https://chainguys.github.io/post/chao-yue-dan-pian-lian-mo-kuai-hua-qu-kuai-lian-fan-shi-beyond-monolithicthe-modular-blockchain-paradigm/">
        </link>
        <updated>2022-10-05T05:15:48.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/09/blog-banner-V2.png" alt="Beyond Monolithic: The Modular Blockchain Paradigm" loading="lazy"><br>
<strong>How modular design will enable blockchains to scale by orders of magnitude.</strong><br>
<strong>模块化设计如何赋能区块链按订单量级扩展</strong></p>
<h2 id="模块化区块链范式-the-modular-blockchain-paradigm">模块化区块链范式 (The Modular Blockchain Paradigm)</h2>
<p>Modular blockchains are the latest paradigm in blockchain design. Originated by <a href="https://celestia.org/">Celestia</a>, the concept of modularity is rapidly becoming a category-defining narrative when it comes to the challenge of scaling blockchains by orders of magnitude.</p>
<p>模块化区块链是区块链设计的最新范式。由 <a href="https://celestia.org/">Celestia</a> 发起，当涉及到将区块链按数量级扩展的挑战时，模块化的概念正在迅速成为一种类别定义的描述。</p>
<p>But why do we need modular blockchains? Consider the following four theses:</p>
<p>但为什么我们需要模块化区块链？考虑以下四个论点：</p>
<hr>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-12.png" alt="" loading="lazy"><br>
上图翻译：</p>
<p>1.增加吞吐量是我们实现Web3愿景的必经之路<br>
2.去中心化是我们实现Web3愿景的必经之路<br>
3.增加了吞吐量却牺牲了去中心化，那就不是扩容<br>
4.当前的单篇L1和L2扩展解决方案不足以实现真正的扩展</p>
<hr>
<p>Based on these principles, it becomes clear that we need to look to new paradigms in order to achieve our vision for web3. Modular blockchains are the most promising new paradigm.</p>
<p>基于这些原则，很明显我们需要寻找新的范式，来实现我们对 web3 的愿景。模块化区块链是最有前途的新范式。</p>
<h2 id="什么是模块化区块链-what-is-a-modular-blockchain">什么是模块化区块链 (What is a Modular Blockchain?)</h2>
<p>Before diving deeper into the four statements above, it is important to understand the basics of monolithic and modular blockchains.</p>
<p>在深入研究上述四个陈述之前，了解单片和模块化区块链的基础知识非常重要。</p>
<p>The core functions of a blockchain are:<br>
区块链的核心功能是：</p>
<ul>
<li>
<p><strong>Execution</strong> - Transaction processing and computation.<br>
<strong>执行</strong> - 事务处理和计算。</p>
</li>
<li>
<p><strong>Settlement</strong> - Dispute resolution and bridging.<br>
<strong>清算</strong> - 争议解决和跨链。</p>
</li>
<li>
<p><strong>Consensus</strong> - Transaction ordering.<br>
<strong>共识</strong> - 交易排序</p>
</li>
<li>
<p><strong>Data availability</strong> - Ensures data is available.<br>
<strong>数据可用性</strong> - 确保数据可用</p>
</li>
</ul>
<p>Traditionally, blockchain designs have been <em>monolithic</em>. This means that all the functions of the blockchain are handled on a single layer.</p>
<p>传统上，区块链设计一直是 <em>单片</em>。这意味着区块链的所有功能都在单层维度上处理。</p>
<p>The thesis of <em>modular</em> blockchains is that a single blockchain doesn’t need to handle all these components on its own. Instead, by disaggregating these core components, individual blockchains can focus on specializing in a specific area, leading to significant optimizations.</p>
<p><em>模块化</em> 区块链的论点是单个区块链不需要自己处理所有这些组件。相反，通过分解这些核心组件，单个区块链可以专注于特定领域，从而实现显着优化。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-4.png" alt="" loading="lazy"><br>
<em>单片 vs. 模块化区块链堆栈(<a href="https://celestia.org/learn/basics-of-modular-blockchains/#monolithic-blockchains">原图来源</a>)</em> <em>Monolithic vs. modular blockchain stack (<a href="https://celestia.org/learn/basics-of-modular-blockchains/#monolithic-blockchains">original image source</a>)</em></p>
<p>A modular blockchain stack consists of layers of modular blockchains which rely on each other to create a system with all of the above components. A modular blockchain is any chain which is part of a modular blockchain stack.</p>
<p>模块化区块链技术栈由多层模块化区块链组成，它们相互依赖以创建具有所有上述组件的系统。模块化区块链是作为模块化区块链技术栈一部分的任何链。</p>
<blockquote>
<p>Modular blockchain (noun): a blockchain that fully outsources at least one component to an external chain:</p>
<ul>
<li>Execution</li>
<li>Settlement</li>
<li>Consensus</li>
<li>Data availability</li>
</ul>
<p>— Celestia (@CelestiaOrg) <a href="https://twitter.com/CelestiaOrg/status/1541507149620056064?ref_src=twsrc%5Etfw">June 27, 2022</a></p>
<p>模块化区块链（名词）：将至少一个组件完全外包给外部链的区块链：</p>
<ul>
<li>执行</li>
<li>结算</li>
<li>共识</li>
<li>数据可用性</li>
</ul>
<p>— Celestia (@CelestiaOrg) <a href="https://twitter.com/CelestiaOrg/status/1541507149620056064?ref_src=twsrc%5Etfw">2022 年 6 月 27 日</a></p>
</blockquote>
<hr>
<h2 id="为什么要模块化-why-modular">为什么要模块化? (Why Modular?)</h2>
<p>Fundamentally, blockchains are designed to protect and promote the sovereignty of the individual. <strong>Our vision for web3 is a world where the systems that form the fabric of our digital world are accessible by everyone, and are decentralized, scalable, and secure.</strong></p>
<p>从根本上说，区块链旨在保护和促进个人的主权。 <strong>我们对 web3 的愿景是一个这样的世界：在这个世界中，构成我们数字世界结构的系统可供所有人访问，并且是去中心化的、可扩展的和安全的。</strong></p>
<p>Above, we considered four statements which justify the development of a new paradigm for blockchains - specifically, the modular paradigm. Let's explore these further.</p>
<p>上面，我们考虑了四个开发区块链新范式的陈述——特别是模块化范式。让我们进一步探讨这些。</p>
<h3 id="1-提高吞吐量对于实现我们的-web3-愿景至关重要-1-increased-throughput-is-essential-in-order-to-achieve-our-vision-for-web3">1 - 提高吞吐量对于实现我们的 Web3 愿景至关重要 (1 - Increased Throughput is Essential In Order to Achieve our Vision for Web3)</h3>
<p>Despite the expansive ecosystem of existing blockchains, demand still far outstrips supply when it comes to throughput. This leads to network congestion, making blockchain networks increasingly inaccessible for many potential users.</p>
<p>尽管现有区块链的生态系统很广阔，但在吞吐量方面，需求仍然远远超过供应。这导致网络拥塞，使许多潜在用户越来越无法访问区块链网络。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-11.png" alt="" loading="lazy"><br>
<em>像以太坊这样的网络变得越来越拥挤（来源：</em> <a href="https://etherscan.io/chart/gasused"><em>Etherscan</em></a><em>)</em> <em>Networks like Ethereum are becoming increasingly congested (source:</em> <a href="https://etherscan.io/chart/gasused"><em>Etherscan</em></a><em>)</em></p>
<p>This challenge has plagued the blockchain space since its inception, even though adoption is still relatively low. Without new technologies to increase throughput, it will only become more of a problem as adoption scales to the billions.</p>
<p>这一挑战自诞生以来就一直困扰着区块链领域，尽管区块链采用率仍然相对较低。如果没有新技术来提高吞吐量，随着采用规模扩大到数十亿，它只会成为一个更大的问题。</p>
<p><strong>To achieve our vision of making web3 systems accessible by everyone, they need to be able to scale accordingly.</strong> Mass adoption requires a massive increase in transactional and computational throughput.</p>
<p><strong>为了实现我们让每个人都可以访问 web3 系统的愿景，他们需要能够相应地扩展。</strong> 大规模采用需要大量增加事务和计算吞吐量。</p>
<h3 id="2-为了实现我们对-web3-的愿景去中心化是必需的-2-decentralization-is-essential-in-order-to-achieve-our-vision-for-web3">2 - 为了实现我们对 Web3 的愿景，去中心化是必需的 (2 - Decentralization is Essential In Order to Achieve our Vision for Web3)</h3>
<p>Decentralization is the key differentiator between web2 and web3 systems, and as such should be the core focus of any web3 system. Without decentralization, web3 systems are no better than their web2 predecessors.</p>
<p>去中心化是 web2 和 web3 系统之间的关键区别，因此也会是任何 web3 系统的核心焦点。如果没有去中心化，web3 系统并不比它们的 web2 前辈更好。</p>
<p>The following principles are essential to achieving decentralization:</p>
<p>以下原则对于实现去中心化至关重要：</p>
<ul>
<li>
<p><strong>Openness</strong> - Anyone can view and access the system.<br>
<strong>开放性</strong> - 任何人都可以查看和访问系统。</p>
</li>
<li>
<p><strong>Verifiability</strong> - Anyone can verify the validity of the system. Any user can operate a node and guarantee that the blockchain is operating correctly and that its rules are being upheld by validators.<br>
<strong>可验证性</strong> - 任何人都可以验证系统的有效/合法性。任何用户都可以操作一个节点并保证区块链正确运行并且其规则得到验证者的支持。</p>
</li>
<li>
<p><strong>Censorship resistance</strong> - Anyone can participate in the system as a user without the risk of being locked out by validators.<br>
<strong>抗审查性</strong> - 任何人都可以作为用户参与系统，而不会有被验证者锁定的风险。</p>
</li>
</ul>
<p>Thus, in order to achieve our vision for web3, any blockchain system must guarantee openness, verifiability, and censorship resistance - and all at a scale that can service billions of users.</p>
<p>因此，为了实现我们对 web3 的愿景，任何区块链系统都必须保证开放性、可验证性和抗审查性——并且所有这些都必须具备能够为数十亿用户提供服务的规模。</p>
<h3 id="3-增加吞吐量却不保持去中心化就不是真正的可扩展性-3-increasing-throughput-without-maintaining-decentralization-is-not-scaling">3 - 增加吞吐量却不保持去中心化，就不是真正的可扩展性 (3 - Increasing Throughput Without Maintaining Decentralization is Not Scaling)</h3>
<p>The now-notorious <a href="https://medium.com/certik/the-blockchain-trilemma-decentralized-scalable-and-secure-e9d8c41a87b3">Blockchain Scalability Trilemma</a> describes the compromise monolithic blockchains must make between <em>security</em>, <em>throughput</em>, and <em>decentralization</em>. In order to improve one of these three components, sacrifices must be made in one or more of the others.</p>
<p>现在臭名昭著的<a href="https://medium.com/certik/the-blockchain-trilemma-decentralized-scalable-and-secure-e9d8c41a87b3">区块链可扩展性三难困境</a>描述了单片区块链必须在 <em>安全</em>、<em>吞吐量</em> 和 <em>去中心化</em> 之间做出妥协.为了改进这三个组成部分中的一个，必须在其他一个或多个方面做出牺牲。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-5.png" alt="" loading="lazy"><br>
<em>大多数单片区块链将自己定位在 A、B 或 C 组中，从而牺牲了三个核心方面之一</em> <em>Most monolithic blockchains position themselves in group A, B, or C, thereby sacrificing one of the three core facets</em></p>
<p>Plenty of existing blockchains promise high throughput. However, in order to achieve this, they often make unacceptable sacrifices when it comes to decentralization.</p>
<p>大量现有的区块链承诺高吞吐量。然而，为了实现这一点，他们在去中心化方面经常做出不可接受的牺牲。</p>
<p>In today’s monolithic blockchain systems, increased throughput is correlated with an increased cost to verify the chain. As blocks become larger or more frequent, the resource requirements for verifying the validity of a block and/or blockchain increase. As such, fewer users are able to verify the chain, instead having to rely on an increasingly centralized group of trusted third parties to run nodes.</p>
<p>在当今的单片区块链系统中，增加的吞吐量与增加的验证成本相关。随着区块变得更大或更频繁，验证区块和/或区块链有效性的资源需求增加。因此，能够验证链的用户更少，而不得不依赖越来越集中的可信第三方来运行节点。</p>
<blockquote>
<p><strong>It is important to note: sacrificing decentralization to increase throughput is not scaling.</strong><br>
<strong>重要的是要注意：牺牲去中心化来增加吞吐量不是扩展。</strong></p>
</blockquote>
<p>While the term “scalability” has often been used to refer to a blockchain’s capacity to process transactions, there is a movement to redefine scalability as <em>a blockchain’s throughput divided by the cost to verify the chain</em>.</p>
<p>虽然“可扩展性”一词经常被用来指代区块链处理交易的能力，但有一种趋势是重新定义可扩展性为 <em>区块链的吞吐量除以验证链的成本</em>。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-4.png" alt="" loading="lazy"><br>
<em>“可扩展性”可以定义为区块链的吞吐量除以验证所有交易的成本（来源：<a href="https://celestia.org/learn/first-principles-of-modular-blockchains/#scalability">Celestia</a>）</em> <em>“Scalability” can be defined as a blockchain’s throughput divided by the cost to validate all transactions (source: <a href="https://celestia.org/learn/first-principles-of-modular-blockchains/#scalability">Celestia</a>)</em></p>
<p>Under this definition, in order to scale, blockchains must increase throughput without increasing the cost to verify the network. This kind of “true scalability” is what modular blockchains are designed to enable.</p>
<p>根据这个定义，为了扩展，区块链必须在不增加验证网络成本的情况下增加吞吐量。这种“真正的可扩展性”是模块化区块链旨在实现的。</p>
<h3 id="4-当前的单片-l1-和-l2-扩展解决方案不足以实现真正的可扩展性-4-current-monolithic-l1-and-l2-scaling-solutions-are-not-sufficient-to-achieve-true-scalability">4 - 当前的单片 L1 和 L2 扩展解决方案不足以实现真正的可扩展性 (4 - Current Monolithic L1 and L2 Scaling Solutions are Not Sufficient to Achieve True Scalability)</h3>
<p>There are many proposed scaling solutions for monolithic blockchains, some of which are already under development. Solutions like <a href="https://ethereum.org/en/upgrades/sharding/">sharding</a>, <a href="https://ethereum.org/en/developers/docs/scaling/#rollups">rollups</a>, <a href="https://ethereum.org/en/glossary/#fraud-proof">fraud</a>/<a href="https://ethereum.org/en/glossary/#validity-proof">validity proofs</a>, and <a href="https://ethereum.org/en/developers/docs/data-availability/#data-availability-and-light-clients">light client innovations</a> aim to increase throughput without increasing the cost to verify the network.</p>
<p>有许多针对单片区块链的扩展解决方案，其中一些已经在开发中， <a href="https://ethereum.org/en/upgrades/sharding/">sharding</a>、<a href="https://ethereum.org/en/developers/docs/scaling/#rollups">rollups</a>、<a href="https://ethereum.org/en/glossary/#fraud-proof">fraud</a>/<a href="https://ethereum.org/en/glossary/#validity-proof">有效性证明</a>和<a href="https://ethereum.org/en/developers/docs/data-availability/#data-availability-and-light-clients">轻客户端创新</a>，都旨在增加吞吐量而不增加验证网络的成本。</p>
<p>Some of these solutions are adopting aspects of modularity in order to scale, such as outsourcing execution to L2s. However, L2s are severely restricted by the performance of the main network, so as long as they continue to rely on monolithic L1s for finality, the scalability trilemma remains an issue.</p>
<p>其中一些解决方案正在采用模块化方面来实现扩展，例如将执行外包给 L2。然而，L2s 受到主网性能的严重限制，因此只要它们继续依赖单片 L1s 来实现最终性，可扩展性三难困境仍然是一个问题。</p>
<p>For example, rollups on Ethereum post their blocks directly to the Ethereum blockchain, essentially using L1 Ethereum as a settlement, consensus, and data availability layer. The problem with this is that Ethereum is already congested, and rollups are competing for bandwidth with users of “monolithic Ethereum” (i.e. non-rollup use cases).</p>
<p>例如，以太坊上的汇总将其块直接发布到以太坊区块链，本质上使用 L1 以太坊作为结算、共识和数据可用性层。这样做的问题是以太坊已经拥塞，并且汇总正在与“单片以太坊”（即非汇总用例）的用户竞争带宽。</p>
<p>Because of their growing popularity, rollups are causing further congestion on Ethereum, thereby inadvertently driving Ethereum toward a more modular-first design. For example, there are already <a href="https://eips.ethereum.org/EIPS/eip-4488">several</a> <a href="https://www.eip4844.com/">proposals</a> to make gas costs cheaper for rollups on Ethereum (i.e. prioritizing modularity), but this move is <a href="https://notes.ethereum.org/EH_xVCD8SnaLCEDrXxUyYA">controversial</a>, as it will make typical Ethereum transactions more expensive, essentially forcing users of L1 Ethereum to subsidize rollups.</p>
<p>由于它们越来越受欢迎，汇总正在导致以太坊进一步拥塞，从而无意中将以太坊推向更加模块化优先的设计。例如，已经有 <a href="https://eips.ethereum.org/EIPS/eip-4488">几个</a> <a href="https://www.eip4844.com/">提案</a> 来降低以太坊上汇总的 gas 成本（即优先考虑模块化），但这一举措是<a href="https://notes.ethereum.org/EH_xVCD8SnaLCEDrXxUyYA">有争议的</a>，因为它将使典型的以太坊交易更加昂贵，实质上迫使L1以太坊的用户补贴汇总。</p>
<p><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-2.png" alt="" loading="lazy"><br>
<em>在以太坊之上的汇总必须与整体以太坊的非汇总用例竞争空间，这是模块化优先区块链避免的问题（</em>[<em>原始图像源</em>](https://twitter.com/ptrwtts/status/ 1509869606906650626)<em>)</em> <em>Rollups on top of Ethereum have to compete for space with non-rollup use cases of monolithic Ethereum, a problem which is avoided by modular-first blockchains (</em><a href="https://twitter.com/ptrwtts/status/1509869606906650626"><em>original image source</em></a><em>)</em></p>
<p>This conflict between modular and monolithic use cases of Ethereum means it is failing to effectively optimize for modularity. As long as it remains unspecialized, it will have reduced scale compared to modular-first alternatives.</p>
<p>以太坊的模块化和单片用例之间的冲突意味着它未能有效地优化模块化。只要它保持非专业化，与模块化优先的替代方案相比，它的容量就会减少。</p>
<p><strong>True scalability - that is, massively increased throughput which preserves decentralization - is not a viable goal for monolithic blockchains.</strong> In order to scale, chains like Ethereum will need to optimize for modularity, which will mean outsourcing execution entirely.</p>
<p><strong>真正的可扩展性 - 即在保持去中心化的情况下大幅增加吞吐量 - 对于单片区块链来说不是一个可行的目标。</strong> 为了扩展，像以太坊这样的链需要针对模块化进行优化，这意味着完全外包执行。</p>
<hr>
<h2 id="模块化区块链的承诺-the-promise-of-modular-blockchains">模块化区块链的承诺 (The Promise of Modular Blockchains)</h2>
<p>Novel modular blockchain systems are designed from the ground up to solve barriers to scalability. Rather than building on top of dated technology, the aim is to learn from the suboptimal elements of previous generations of blockchain tech and create an <strong>entirely new paradigm which optimizes for scalability and decentralization while maintaining security</strong>.</p>
<p>全新的模块化区块链系统是从头开始设计的，进而来解决可扩展性的障碍。其目标不是建立在过时的技术之上，而是从前几代区块链技术的次优元素中学习，并创建一个<strong>全新的范式，在保持安全性的同时优化可扩展性和去中心化</strong>。</p>
<p>In a modular system, protocols can specialize their offering for a specific layer in the stack. With teams like <a href="https://celestia.org/">Celestia</a> working on a dedicated data availability and consensus layer, there is a new drive for projects which optimize for solving bottlenecks on the execution layer. <a href="https://www.fuel.network/">Fuel</a> is tackling this challenge by building the world’s <strong>fastest execution layer for the modular stack</strong>.</p>
<p>在模块化系统中，协议可以专门针对堆栈中的特定层提供定制服务。随着像 <a href="https://celestia.org/">Celestia</a> 这样的团队致力于专门的数据可用性和共识层，对于优化解决执行层瓶颈的项目有了新的驱动力。 <a href="https://www.fuel.network/">Fuel</a> 正在通过构建世界上<strong>最快的模块化堆栈执行层</strong>来应对这一挑战。</p>
<p>Unconstrained by the limitations of Ethereum and the EVM, Fuel approaches scalable execution from a modular-first perspective, allowing for <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">significant improvements over the EVM</a>’s inefficient execution environment and thus enabling maximum decentralization and the highest flexible throughput.</p>
<p>不受以太坊和 EVM 的限制，Fuel 从模块化优先的角度实现可扩展的执行，允许 [对 EVM的低效执行环境进行重大改进](https://fuellabs.github.io/fuel-docs/master/vs-evm .html) ，从而实现最大程度的去中心化和最大的灵活吞吐量。</p>
<p>With this new movement, we have an opportunity to start fresh and build a fundamentally new generation of blockchains that go <strong>beyond monolithic</strong>.</p>
<p>借助这一新运动，我们有机会重新开始并构建从根本上超越单片**的新一代区块链。</p>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong><strong>Twitter</strong></strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong><strong>Discord</strong></strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong><strong>LinkedIn</strong></strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong><strong>YouTube</strong></strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong><strong>fastest execution layer</strong></strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong><strong>highest flexible throughput</strong></strong> and <strong><strong>maximum security</strong></strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong><strong>superior developer experience</strong></strong> and the ability to go <strong><strong>beyond the limitations of the EVM</strong></strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链堆栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制****。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
</feed>