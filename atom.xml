<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chainguys.github.io</id>
    <title>Chainguys&apos;Blog</title>
    <updated>2023-05-08T03:28:35.271Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chainguys.github.io"/>
    <link rel="self" href="https://chainguys.github.io/atom.xml"/>
    <subtitle>A blockchain guy who likes making memes and translating tech articles &lt;/br&gt;All Information NOT Financial Adivice&lt;/br&gt; 一个区块链的老韭菜 &lt;/br&gt;兴趣是做meme和翻译技术文章 &lt;/br&gt;一切均非投资建议</subtitle>
    <logo>https://chainguys.github.io/images/avatar.png</logo>
    <icon>https://chainguys.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Chainguys&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[去中心化序列的重要性 (The Importance of Decentralized Sequencing)]]></title>
        <id>https://chainguys.github.io/post/qu-zhong-xin-hua-xu-lie-de-chong-yao-xing-the-importance-of-decentralized-sequencing/</id>
        <link href="https://chainguys.github.io/post/qu-zhong-xin-hua-xu-lie-de-chong-yao-xing-the-importance-of-decentralized-sequencing/">
        </link>
        <updated>2023-05-03T03:25:55.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/v2/resize:fit:700/1*7QnsfyP4R69EgUcdCeyjFQ.png" alt="" loading="lazy"></figure>
<hr>
<p>It’s well understood by now that rollups and modular blockchains present a better and a more scalable design compared to monolithic alternative Layer 1s. <strong><em>However, some would argue that each and every existing rollup today (ZK-based or optimistic-execution based) is in fact much less decentralized than even the least decentralized alternative Layer 1s.</em></strong> The core issue is that they all operate with a single <strong><em>sequencer</em></strong> — a network node core to the proper functioning of the rollups.</p>
<p>现在大家都明白，与单片的替代第1层相比，汇总和模块化的区块链呈现出更好、更可扩展的设计。<strong>然而，有些人认为，今天每一个现有的汇总（基于ZK或基于乐观执行）实际上比最不去中心化的替代第1层更不去中心化。</strong>  核心问题是，它们都通过一个单一的 <strong>序列器 sequencer</strong> 来运作，这是汇总正常运作的核心网络节点。</p>
<p>AltLayer is a protocol built to change this status quo both at the design as well as at the implementation-level. In this post, we dive deeper into the world of sequencers, the issues with centralized sequencers and the approach taken by AltLayer to build an open and decentralized sequencer network in a way that anyone wanting to launch a rollup can leverage them, thereby eliminating the need to self bootstrap a decentralized sequencer network for the rollup.</p>
<p>AltLayer是一个在设计和实施层面上，都是为了改善这种现状的协议。在这篇文章中，我们将深入探讨序列器的世界，中心化序列器的问题，以及AltLayer采取的方法：即建立一个开放的、去中心化的序列器网络，使任何想要启动汇总的人都可以加以利用，从而消除了为汇总而重复启动中心化序列器网络的必要。</p>
<h2 id="为什么是去中心化序列-why-decentralized-sequencing">为什么是去中心化序列 (Why Decentralized Sequencing?)</h2>
<p>A central component to any rollup is the <strong>sequencer</strong>. Sequencers are nodes in the rollup network that are tasked with the following operations of a rollup:</p>
<p>任何汇总的核心组成部分都是<strong>序列器</strong> 。序列器是汇总网络中的节点，负责汇总的以下操作：</p>
<ol>
<li>
<p><strong>Aggregate transactions:</strong> Accept transactions from the end users via a mempool.<br>
<strong>聚合交易：</strong> 通过mempool接受来自终端用户的交易。</p>
</li>
<li>
<p><strong>Order transactions:</strong> Select transactions from the mempool and order them according to some policy.<br>
<strong>排序交易：</strong> 从mempool中选择交易，并根据一些政策对其进行排序。</p>
</li>
<li>
<p><strong>Execute transactions:</strong> In most rollups, the sequencer is also tasked with executing the transactions according to the underlying VM.<br>
<strong>执行交易：</strong> 在大多数汇总中，序列器的任务也是根据底层虚拟机来执行交易。</p>
</li>
<li>
<p><strong>Produce pre-confirmation:</strong> As finality for a rollup transaction ultimately comes from the underlying Layer 1, sequencers often produce pre-confirmation for a user transaction that allows clients and applications to proceed while waiting for finality from the Layer 1.<br>
<strong>产生预确认：</strong> 由于汇总交易的最终结果来自底层的第1层，序列器经常为用户交易产生预确认，允许客户端和应用在等待第1层的最终结果时继续进行。</p>
</li>
<li>
<p><strong>Send ordered transaction data to the DA Layer:</strong> As the last step, sequencer also commits the ordered transaction data to a DA layer, for example the underlying Layer 1. Once posted on Layer 1, transactions have Layer 1-level finality.<br>
<strong>将订购的交易数据发送到DA层：</strong> 作为最后一步，序列器还将订购的交易数据提交到DA层，例如底层第1层。一旦发布到第1层，交易就具有第1层的最终(确定)性/终态。</p>
</li>
</ol>
<p>Sequencers are therefore the heart of a rollup. Now, imagine a rollup with a single sequencer. What would happen if the sequencer were to become unavailable? Well, the network would then effectively stop processing transactions. This is not entirely a hypothetical question as there have been instances where rollups stopped processing transactions when the sequencer was down.</p>
<p>因此，序列器是一个汇总的核心。现在，想象一个只有一个序列器的汇总。如果序列器不可用，会发生什么？那么，网络将有效地停止处理交易。这并不完全是一个假设性的问题，因为已经有实例表明，当序列器出现故障时，汇总系统停止处理交易。</p>
<p>While one could argue that even when a sequencer goes down, the network is still operational as users could instead send their Layer 2 transaction directly to Layer 1. However, those transactions can take up to 24 hours to be considered final and will cost the same fees as the underlying Layer 1 and hence would result in poor user experience. Also, a 24 hour delay may not be ideal for time-sensitive transactions like liquidation of a debt position.</p>
<p>虽然人们可以说，即使一个序列器发生故障，网络仍然可以运行，因为用户可以代替他们把第2层的交易直接发送到第1层。然而，这些交易可能需要长达24小时才能被最终确认，并将花费与底层第1层相同的费用，因此会导致用户体验不佳。另外，24小时的延迟对于像清算债务头寸这样的时间敏感型交易，可能并不理想。</p>
<p>More generally, a centralized sequencer may:<br>
更为普遍的是，中心化序列器可能：</p>
<ul>
<li>Censor user transactions<br>
审查用户交易</li>
<li>Become a choke-point or in the worst-case could go completely unavailable<br>
成为一个阻塞点，或者在最坏的情况下可能完全不可用</li>
<li>Extract excessive rent<br>
提取过多的租金</li>
<li>Frontrun user transactions or more broadly create bad MEV and adversely affect users<br>
抢跑用户交易或更广泛地创造坏的MEV，并对用户产生不利影响</li>
</ul>
<p>It is therefore imperative to decentralize the sequencer. Unfortunately, none of the live rollups have decentralized sequencing enabled today.</p>
<p>因此，当务之急是将序列器去中心化。不幸的是，今天没有一个实时启用了去中心化序列器。</p>
<h2 id="对altlayer的简要介绍-brief-intro-to-altlayer">对AltLayer的简要介绍 (Brief Intro to AltLayer)</h2>
<p>AltLayer offers Rollup-as-a-Service (RaaS) solutions that enable users to launch highly scalable application-tailored rollups quickly and reliably. The RaaS offering comes in the form of a no-code dashboard that allows not only developers but also those with limited or no coding experience to spin up a customized rollup within 2 mins through a few simple clicks.</p>
<p>AltLayer提供汇总即服务(RaaS)解决方案，使用户能够快速、可靠地启动高度可扩展的应用定制汇总。该RaaS产品以无代码仪表盘的形式出现，不仅使得开发人员，而且使得那些编码经验有限或没有编码经验的人，通过几个简单的点击，在2分钟内启动一个定制的汇总。</p>
<p>AltLayer’s RaaS offering can save significant capital, manpower resources and years of development work for application teams while encouraging innovation and rapid experimentation.</p>
<p>AltLayer的RaaS产品可以为应用团队节省大量资金、人力资源和多年的开发工作，同时鼓励创新和快速实验。</p>
<p>With AltLayer, decentralized sequencing is baked into the RaaS design and therefore the service entirely eliminates the issues prevalent in rollups with centralized sequencers.</p>
<p>在AltLayer中，去中心化序列被植入RaaS设计中，因此该服务完全消除了中心化序列器在汇总中普遍存在的问题。</p>
<p><em>Watch out for an upcoming post, which details how our multi-sequencers are designed, and how they create a more decentralized infrastructure for rollups!</em> <strong><em>Coming soon!</em></strong></p>
<p>请注意即将发布的一篇文章，其中详细介绍了我们的多序列器是如何设计的，以及它们如何为汇总创造一个更加去中心化基础设施！<strong>即将发布!</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linera中文材料汇总-更新中(Linera CHN materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/linera-zhong-wen-cai-liao-hui-zong-geng-xin-zhong-linera-chn-materials-updating/</id>
        <link href="https://chainguys.github.io/post/linera-zhong-wen-cai-liao-hui-zong-geng-xin-zhong-linera-chn-materials-updating/">
        </link>
        <updated>2023-04-27T03:15:17.000Z</updated>
        <content type="html"><![CDATA[<h2 id=""><img src="https://chainguys.github.io/post-images/1682566080378.png" alt="" loading="lazy"></h2>
<h1 id="白皮书whitepaper">白皮书(Whitepaper)</h1>
<p><a href="https://chainguys.github.io/post/linerawei-web3-ying-yong-er-sheng-de-gao-ke-kuo-zhan-qu-kuai-lian-ji-chu-she-shi-di-1-ban-2022-nian-12-yue-19-ri">Linera：为Web3应用而生的高可扩展区块链基础设施(第1版，2022年12月19日)-Linera：a Blockchain Infrastructure for Highly Scalable Web3 Applications(Version 1 – December 19, 2022)</a></p>
<h1 id="blogs博客">Blogs(博客)</h1>
<p><a href="https://chainguys.github.io/post/linera-jian-jie-introducing-linera/">Linera简介 (Introducing Linera)</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linera：为Web3应用而生的高可扩展区块链基础设施(第1版-2022年12月19日)]]></title>
        <id>https://chainguys.github.io/post/linerawei-web3-ying-yong-er-sheng-de-gao-ke-kuo-zhan-qu-kuai-lian-ji-chu-she-shi-di-1-ban-2022-nian-12-yue-19-ri/</id>
        <link href="https://chainguys.github.io/post/linerawei-web3-ying-yong-er-sheng-de-gao-ke-kuo-zhan-qu-kuai-lian-ji-chu-she-shi-di-1-ban-2022-nian-12-yue-19-ri/">
        </link>
        <updated>2023-04-27T02:52:15.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://chainguys.github.io/post-images/1682564027152.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564046350.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564049541.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564064673.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564070774.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564077408.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564084726.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564090077.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564094410.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564100328.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564199576.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564207495.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564214229.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564219710.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564225477.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564231082.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564236082.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564241199.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564246398.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564251649.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564805897.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564811635.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564817435.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564823087.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564828487.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564833637.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564838889.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564845088.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564851073.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564866425.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564911032.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564917332.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564943483.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564949284.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564955137.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564960554.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564968288.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564973689.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564979456.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564985107.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564990990.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682564997374.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565023161.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565028280.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565033412.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565038347.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565043582.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565048615.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565053581.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565058233.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565062816.png" alt="" loading="lazy"><br>
<img src="https://chainguys.github.io/post-images/1682565067264.png" alt="" loading="lazy"></p>
<h1 id="pdf版本请自取httpsdrivegooglecomfiled1wa92nlj_njsszomzbzcaqaepq2nyp-ikviewuspsharing">PDF版本请自取：<a href="https://drive.google.com/file/d/1wa92nlJ_NJssZoMZbZcaqAEPQ2nYp-Ik/view?usp=sharing">https://drive.google.com/file/d/1wa92nlJ_NJssZoMZbZcaqAEPQ2nYp-Ik/view?usp=sharing</a></h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fuel内幕-2023年第一季 (Inside Fuel：Q1 2023)]]></title>
        <id>https://chainguys.github.io/post/fuel-nei-mu-2023-nian-di-yi-ji-inside-fuelq1-2023/</id>
        <link href="https://chainguys.github.io/post/fuel-nei-mu-2023-nian-di-yi-ji-inside-fuelq1-2023/">
        </link>
        <updated>2023-04-17T03:23:00.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2023/04/Q123.png" alt="Inside Fuel: Q1 2023" loading="lazy"></figure>
<p>Welcome to <em>Inside Fuel</em> our quarterly review of technical developments and everything happening on the Fuel Network. Take a moment to catch up on all the latest news.</p>
<p>欢迎来到Fuel内幕，这是我们对技术发展和Fuel网络上发生的一切的季度回顾。请拨冗了解一下所有的最新消息。</p>
<hr>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2023/04/NewestAdditionsToFuel.png" alt="" loading="lazy"></figure>
<p>Building the fastest modular execution layer would not be possible without an incredible contributor team. Here are the newest additions to the team this quarter:</p>
<p>如果没有一个令人难以置信的贡献者团队，建立最快的模块化执行层是不可能的。以下是本季度团队的最新成员：</p>
<figure data-type="image" tabindex="3"><img src="https://fuel-labs.ghost.io/content/images/2023/04/NewContributors.png" alt="" loading="lazy"></figure>
<hr>
<figure data-type="image" tabindex="4"><img src="https://fuel-labs.ghost.io/content/images/2023/03/InTheNews-2.png" alt="" loading="lazy"></figure>
<h2 id="rust-in-区块链-rust-in-blockchain"><strong>🦀 Rust in 区块链 Rust in Blockchain</strong></h2>
<p>According to the <em>Rust In Blockchain</em> <a href="https://rustinblockchain.org/newsletters/rib-newsletter-45/?ref=fuel-labs.ghost.io">monthly review</a>, Fuel is one of the most active Rust-based projects this quarter, ranking us once again in the Top 5 of the most active Rust-based blockchains.</p>
<p>根据Rust In Blockchain的<a href="https://rustinblockchain.org/newsletters/rib-newsletter-45/?ref=fuel-labs.ghost.io">月度回顾</a>，Fuel是本季度最活跃的，基于Rust的项目之一，我们再次排在最活跃的基于Rust的区块链的前五名中。</p>
<h2 id="揭开新的fuel品牌面纱-unveiling-the-new-fuel-branding">✨ 揭开新的Fuel品牌面纱 (Unveiling the new Fuel Branding)</h2>
<p>We officially unveiled the new visual identity of Fuel, the fastest modular execution layer.</p>
<p>我们正式公布了最快模块化执行层Fuel的新视觉标识。</p>
<iframe src="https://fuel-labs.ghost.io/content/media/2023/04/NewFuel.mp4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
<hr>
<figure data-type="image" tabindex="5"><img src="https://fuel-labs.ghost.io/content/images/2023/04/Events.png" alt="" loading="lazy"></figure>
<h3 id="️-第2层之日-layer-2-day">🎙️ 第2层之日 (Layer 2 Day)</h3>
<p>Right before ETH Denver, we hosted Layer 2 Day, a one-day-long event gathering all the major Ethereum Scalability maximalists from all over the world to talk about the future of blockchain, language design, account abstraction, and more!</p>
<p>就在ETH Denver之前，我们举办了第2层之日(Layer 2 Day)，这是一个为期一天的活动，聚集了来自世界各地的所有主要以太坊扩容热心人士，讨论区块链的未来、语言设计、账户抽象等问题!<br>
<img src="https://fuel-labs.ghost.io/content/images/2023/04/Layer2-Day.png" alt="" loading="lazy"></p>
<p>Watch the replay of all the talks and panels:<br>
观看所有会谈和小组讨论的回放：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=cH4BNwwZLv0&amp;ref=fuel-labs.ghost.io">Blockchain Language Design</a><br>
区块链语言设计</li>
<li><a href="https://www.youtube.com/watch?v=tOsSuBdXlxs&amp;ref=fuel-labs.ghost.io">L2 Bridging</a><br>
L2跨链</li>
<li><a href="https://www.youtube.com/watch?v=tN4_oRdxaXY&amp;ref=fuel-labs.ghost.io">Defining Rollup finality</a><br>
定义汇总的终态</li>
<li><a href="https://www.youtube.com/watch?v=vLhnNVdRGfE&amp;t=1801s&amp;ref=fuel-labs.ghost.io">Account Abstraction</a><br>
帐户抽象</li>
<li><a href="https://www.youtube.com/watch?v=fpG5y1VB0oE&amp;ref=fuel-labs.ghost.io">Alternate VMs vs. EVM</a><br>
其他虚拟机与EVM</li>
<li><a href="https://www.youtube.com/watch?v=tN4_oRdxaXY&amp;ref=fuel-labs.ghost.io">Introducing Base</a><br>
Base简介</li>
<li><a href="https://www.youtube.com/watch?v=tN4_oRdxaXY&amp;ref=fuel-labs.ghost.io">Fuelmint: Celestia, Fuel, and Rollkit</a><br>
Fuelmint： Celestia, Fuel, 和 Rollkit</li>
</ul>
<h3 id="️-eth丹佛-eth-denver">🏔️ ETH丹佛 (ETH Denver)</h3>
<p>ETH Denver was an incredible opportunity for us to meet, grow and share insights to the Fuel community. If you were there, you maybe also got the chance to drink Moscow Fuel cocktails and receive exclusive Fuel swag!</p>
<p>ETH丹佛是一个令人难以置信的机会，让我们认识、成长并与燃料社区分享见解。如果你在那里，你可能也有机会喝到莫斯科Fuel鸡尾酒，并收到Fuel的独家礼品!<br>
<img src="https://fuel-labs.ghost.io/content/images/2023/04/ETH-Denver.png" alt="" loading="lazy"></p>
<p>ETH Denver was also the chance for developers to experience building on Fuel using Sway. Here is a recap of the winning projects:<br>
ETH丹佛也是一个让开发者体验使用Sway，并在Fuel上构建的机会。以下是获奖项目的回顾：</p>
<blockquote>
<p>We're excited to announce the winners of the Fuel bounty prize at <a href="https://twitter.com/EthereumDenver?ref_src=twsrc%5Etfw&amp;ref=fuel-labs.ghost.io">@EthereumDenver</a>!<br>
我们很高兴地宣布@EthereumDenver的Fuel赏金奖的获奖者!</p>
<p>🏆 Congratulations to 1st place winner Sway Network (by @swaygangsters), a decentralized, transparent and secure order book built with <a href="https://twitter.com/SwayLang?ref_src=twsrc%5Etfw&amp;ref=fuel-labs.ghost.io">@SwayLang</a> <a href="https://t.co/Imw7qsEV9k?ref=fuel-labs.ghost.io">pic.twitter.com/Imw7qsEV9k</a><br>
🏆 祝贺第一名得主Sway Network（<a href="https://twitter.com/SwayLang?ref_src=twsrc%5Etfw&amp;ref=fuel-labs.ghost.io">@SwayLang</a>），这是一个用@SwayLang构建的去中心化、透明和安全的订单簿 pic.twitter.com/Imw7qsEV9k<br>
— Fuel (@fuel_network) <a href="https://twitter.com/fuel_network/status/1633863056496132101?ref_src=twsrc%5Etfw&amp;ref=fuel-labs.ghost.io">March 9, 2023</a></p>
</blockquote>
<hr>
<figure data-type="image" tabindex="6"><img src="https://fuel-labs.ghost.io/content/images/2023/04/Awesome-Fuel-1.png" alt="" loading="lazy"></figure>
<p>A sample of some of the best content shared on social media by some internal and external Fuel contributors:</p>
<p>由一些内部和外部的Fuel贡献者在社交媒体上分享的一些最佳内容的样本：</p>
<ul>
<li>
<p><strong><a href="https://github.com/edakturk14/fuel-dapp-template?ref=fuel-labs.ghost.io">The Fuel dApp Template</a></strong>  by <a href="https://twitter.com/edatweets_?ref=fuel-labs.ghost.io">Eda</a> and <a href="https://twitter.com/_carletex_?ref=fuel-labs.ghost.io">Carlos</a>: A developer-friendly starter kit for quickly building decentralized applications on Fuel! This template is built using NextJS, TypeScript, Tailwind CSS, Forc, and Sway.<br>
<strong><a href="https://github.com/edakturk14/fuel-dapp-template?ref=fuel-labs.ghost.io">The Fuel dApp 模板</a></strong> 由<a href="https://twitter.com/edatweets_?ref=fuel-labs.ghost.io">Eda</a>和<a href="https://twitter.com/_carletex_?ref=fuel-labs.ghost.io">Carlos</a>编写： 一个方便开发者的入门套件，用于在Fuel上快速建立去中心化应用！这个模板使用NextJS、TypeScript、Tailwind CSS、Forward等技术构建。</p>
</li>
<li>
<p><a href="https://www.youtube.com/watch?v=yEFV4afZvnI&amp;ref=fuel-labs.ghost.io"><strong>Build a DApp on Fuel</strong></a> by <a href="https://twitter.com/schwartzswartz?ref=fuel-labs.ghost.io">Sarah Schwartz</a>: The essentials of what you need to know to get started building a dapp on Fuel.<br>
<a href="https://www.youtube.com/watch?v=yEFV4afZvnI&amp;ref=fuel-labs.ghost.io"><strong>在Fuel上建立一个DApp</strong></a>由<a href="https://twitter.com/schwartzswartz?ref=fuel-labs.ghost.io">Sarah Schwartz</a>提供： 你需要知道的在Fuel上开始构建DApp的基本内容。</p>
</li>
<li>
<p><strong><a href="https://eda.hashnode.dev/building-decentralized-applications-on-fuel?ref=fuel-labs.ghost.io">Building Decentralized Applications on Fuel</a></strong> by <a href="https://twitter.com/edatweets_?ref=fuel-labs.ghost.io">Eda</a> and <a href="https://twitter.com/_carletex_?ref=fuel-labs.ghost.io">Carlos</a>: A Dive into the Fuel dApp Template: Built using NextJS, TypeScript, Tailwind CSS, Forc, and Sway.<br>
<strong><a href="https://eda.hashnode.dev/building-decentralized-applications-on-fuel?ref=fuel-labs.ghost.io">在Fuel上构建去中心化应用</a></strong> 作者：<a href="https://twitter.com/edatweets_?ref=fuel-labs.ghost.io">Eda</a>和<a href="https://twitter.com/_carletex_?ref=fuel-labs.ghost.io">Carlos</a>： 深入了解Fuel的dApp模板： 使用NextJS、TypeScript、Tailwind CSS、Forc和Sway构建。</p>
</li>
<li>
<p><strong><a href="https://jtriley.substack.com/p/fuel-vm-binary-analysis?sd=pf&amp;ref=fuel-labs.ghost.io">FuelVM binary analysis</a></strong> by <a href="https://twitter.com/jtriley_eth?ref=fuel-labs.ghost.io">Jtriley</a>: An article on the binary analysis of Fuel smart contracts. It goes through Sway compilation steps and picks apart the final executable.<br>
<strong><a href="https://jtriley.substack.com/p/fuel-vm-binary-analysis?sd=pf&amp;ref=fuel-labs.ghost.io">FuelVM二进制分析</a></strong> 作者 <a href="https://twitter.com/jtriley_eth?ref=fuel-labs.ghost.io">Jtriley</a>： 一篇关于Fuel智能合约的二进制分析的文章。它通过Sway的编译步骤，挑出了最终的可执行文件。</p>
</li>
<li>
<p><strong>Bridging on Fuel</strong> by <a href="https://twitter.com/Rubenevolent?ref=fuel-labs.ghost.io">Rubyto</a>: A 4 parts handful guide on how bridging on Fuel works behind the scenes: <a href="https://bit.ly/brdge-1?ref=fuel-labs.ghost.io">Part 1</a>, <a href="https://bit.ly/brdge-2?ref=fuel-labs.ghost.io">Part 2</a>, <a href="https://bit.ly/brdge-3?ref=fuel-labs.ghost.io">Part 3</a>, <a href="https://bit.ly/brdge-4?ref=fuel-labs.ghost.io">Part 4</a>.<br>
<strong>Bridging on Fuel</strong> 作者：<a href="https://twitter.com/Rubenevolent?ref=fuel-labs.ghost.io">Rubyto</a>： 一个由四部分组成的关于燃料桥接如何在幕后运作的指南：<a href="https://bit.ly/brdge-1?ref=fuel-labs.ghost.io">第一部分</a>, <a href="https://bit.ly/brdge-2?ref=fuel-labs.ghost.io">第二部分</a>, <a href="https://bit.ly/brdge-3?ref=fuel-labs.ghost.io">第三部分</a>, <a href="https://bit.ly/brdge-4?ref=fuel-labs.ghost.io">第四部分</a>.</p>
</li>
<li>
<p><strong><a href="https://fuel.build/?ref=fuel-labs.ghost.io">Fuel Build</a></strong> by <a href="https://twitter.com/0xYami9?ref=fuel-labs.ghost.io">@0xYami9</a> and <a href="https://twitter.com/0xYuminomizu?ref=fuel-labs.ghost.io">@0xYuminomizu</a>: A community-led ecosystem directory.<br>
<strong><a href="https://fuel.build/?ref=fuel-labs.ghost.io">Fuel Build</a></strong> 作者 <a href="https://twitter.com/0xYami9?ref=fuel-labs.ghost.io">@0xYami9</a>和<a href="https://twitter.com/0xYuminomizu?ref=fuel-labs.ghost.io">@0xYuminomizu</a>： 一个社区主导的生态系统目录。</p>
</li>
<li>
<p><strong><a href="https://messari.io/report/fuel-supercharging-modular-execution?utm_source=twitter_messaricrypto">Supercharging Modular Execution</a></strong> by <a href="https://twitter.com/eshita?ref=fuel-labs.ghost.io">Eshita</a> from <a href="https://twitter.com/MessariCrypto?ref=fuel-labs.ghost.io">Messari</a>: A in-depth look at the Fuel Network, including a deep dive into its architecture and design choices, and potential risks and concerns.<br>
<strong><a href="https://messari.io/report/fuel-supercharging-modular-execution?utm_source=twitter_messaricrypto">Supercharging Modular Execution</a></strong> 作者<a href="https://twitter.com/eshita?ref=fuel-labs.ghost.io">Eshita</a>，来自<a href="https://twitter.com/MessariCrypto?ref=fuel-labs.ghost.io">Messari</a>： 对Fuel网络的深入研究，包括对其架构和设计选择的深入研究，以及潜在的风险和担忧。</p>
</li>
</ul>
<p>Much more awesome Fuel content can be found <strong><a href="https://fuellabs.notion.site/Awesome-Fuel-7b4ca6b262d3414a9968f275cba43fc9?ref=fuel-labs.ghost.io">here</a></strong>.<br>
更多精彩的Fuel内容可以在 <a href="https://fuellabs.notion.site/Awesome-Fuel-7b4ca6b262d3414a9968f275cba43fc9?ref=fuel-labs.ghost.io">这里</a>找到。</p>
<hr>
<figure data-type="image" tabindex="7"><img src="https://fuel-labs.ghost.io/content/images/2023/03/TechnicalUpdates.png" alt="" loading="lazy"></figure>
<h2 id="fuelup"><strong>Fuelup</strong></h2>
<h3 id="fuelup是什么-what-is-fuelup">Fuelup是什么 (What is Fuelup?)</h3>
<blockquote>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> is the official package manager and multiplexer for <a href="https://fuel.network/">Fuel</a> that installs <strong>The Fuel Toolchain</strong> from the official release channels. It enables you to easily install pre-packaged toolchains, keep them up to date or even create custom toolchains and switch between them.</p>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> 是 <a href="https://fuel.network/">Fuel</a> 的官方包管理器和复用器，它从官方发布渠道安装<strong>Fuel工具链 (The Fuel Toolchain)</strong>。它使您能够轻松安装预打包的工具链，使其保持最新状态，甚至创建自定义工具链并在它们之间切换。</p>
<p>Binaries are executed through Fuelup as proxies which allow for flexibility in the execution of tools.</p>
<p>二进制文件通过 Fuelup 作为代理执行，使得工具的执行变得灵活。</p>
</blockquote>
<p>It simplifies building and maintaining Sway applications with <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> and <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> for common platforms.</p>
<blockquote>
<p>它为一般平台使用 <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> 和 <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> 简化了 Sway 应用的构建和维护。</p>
</blockquote>
<ul>
<li>
<p>The fuelup installation script and docs are now all at <a href="https://install.fuel.network/latest/?ref=fuel-labs.ghost.io">https://install.fuel.network/latest</a><br>
fuelup的安装脚本和文档都在<a href="https://install.fuel.network/latest/?ref=fuel-labs.ghost.io">https://install.fuel.network/latest</a>；</p>
</li>
<li>
<p><code>fuelup show</code> shows the <code>fuels-rs</code> SDK version that the release version was tested against <a href="https://github.com/FuelLabs/fuelup/pull/410?ref=fuel-labs.ghost.io">Read more</a><br>
<code>fuelup show</code>显示发布版本所测试的<code>fuels-rs</code> SDK版本<a href="https://github.com/FuelLabs/fuelup/pull/410?ref=fuel-labs.ghost.io">阅读更多</a>；</p>
</li>
<li>
<p><code>fuelup show</code> now shows the <code>fuels-rs</code> version that was used in compatibility tests. This gives users an idea of what <code>fuels</code> version will certainly be compatible with the toolchain;<br>
<code>fuelup show</code>现在显示兼容性测试中使用的<code>fuels-rs</code>版本。这让用户了解到什么版本的<code>fuels</code>肯定会与工具链兼容；</p>
</li>
</ul>
<h2 id="sway">🌴 <strong>Sway</strong></h2>
<h3 id="一般更新-general-updates">一般更新 (General Updates)</h3>
<ul>
<li>Added a new pass manager for the IR optimizer;<br>
为IR优化器增加了一个新的通道管理器；</li>
<li>Introduction of the <code>#[allow(dead_code)]</code> annotation;<br>
引入了<code>#[allow(dead_code)]</code>注解；</li>
<li>Added support for <code>Enum::&lt;T&gt;::Variant</code> syntax;<br>
增加了对<code>Enum::&lt;T&gt;::Variant</code>语法的支持；</li>
<li>Improvement of the performance of the register allocator;<br>
改善了寄存分配器的性能；</li>
<li>Disabled usage of parenthesis in unit enum variants;<br>
禁用了单元枚举变体中小括号的使用；</li>
<li>Added support for supertraits for ABIs;<br>
增加了对ABI的超级特征的支持；</li>
</ul>
<h3 id="错误修复-bug-fixes">错误修复 (Bug Fixes)</h3>
<ul>
<li>Various fixes and improvements to dead code analysis;<br>
对死代码分析进行了各种修正和改进；</li>
<li>Fixed multiple bugs in the type system;<br>
修正了类型系统中的多个错误；</li>
<li>Fixed some issues related to name shadowing rules in Sway;<br>
修正了一些与Sway中名称阴影规则有关的问题；</li>
</ul>
<h3 id="标准库-standard-library">标准库 (Standard Library)</h3>
<ul>
<li>
<p>Extended support for <code>Input::Message</code> type fields in <code>std::inputs</code>;<br>
在<code>std::input</code>中扩展了对<code>Input::Message</code>类型字段的支持；</p>
</li>
<li>
<p>Updated <code>std::storage::get</code> and <code>std::storage::StorageMap::get</code> to return an <code>Option</code>;<br>
更新了<code>std::storage::get</code>和<code>std::storageMap::get</code>以返回一个<code>Option</code>；</p>
</li>
<li>
<p>Introduced <code>__state_clear</code>, <code>std::storage::clear</code>, and <code>std::storage::StorageMap::remove</code>;<br>
引入了<code>__state_clear</code>, <code>std::storage::clear</code>, 和 <code>std::storageMap::remove</code>；</p>
</li>
<li>
<p>Introduced <code>std::storage::StorageBytes</code>;<br>
引入了<code>std::storage::StorageBytes</code>；</p>
</li>
<li>
<p>Added <code>Not</code> trait implementations for <code>U128</code> and <code>U256</code>;<br>
为 <code>U128</code>和 <code>U256</code>增加了 <code>Not</code>特性的实现；</p>
</li>
<li>
<p>Added a <code>TryFrom</code> trait ;<br>
增加了一个`TryFrom'特性；</p>
</li>
</ul>
<h3 id="工具tooling">工具(Tooling)</h3>
<ul>
<li>Added Markdown formatting to item previews in <code>forc doc</code>;<br>
为<code>forc doc</code>中的项目预览增加了Markdown格式；</li>
<li>Added support for inner module doc attributes with <code>#!</code> and <code>//!</code> syntax;<br>
增加了对带有<code>#!</code>和<code>//!</code>语法的内部模块文档属性的支持；</li>
<li>Added syntax highlighting to code blocks in <code>forc doc</code>;<br>
为<code>forc doc</code>中的代码块添加了语法高亮；</li>
<li>Various enhancements to the LSP including collecting more tokens from the language;<br>
对LSP的各种增强，包括从语言中收集更多的标记；</li>
<li>Allow formatting a single file via <code>forc fmt --path</code>;<br>
允许通过<code>forc fmt --path</code>对单个文件进行格式化；</li>
</ul>
<h3 id="forc">Forc</h3>
<ul>
<li>Added a <code>forc-submit</code> plugin command for submitting txs to a given node;<br>
增加了一个<code>forc-submit</code>插件命令，用于向指定节点提交txs；</li>
<li>Added <code>salt</code> flag to <code>forc deploy</code> and a <code>maturity</code> flag to <code>forc deploy</code> and <code>forc run</code>;<br>
为<code>forc deploy</code>增加了<code>salt</code>标志，为<code>forc deploy</code>和<code>forc run</code>增加了<code>maturity</code>标志；</li>
<li>Added a <code>forc build</code> flag to treat warnings as errors;<br>
增加了一个<code>forc build</code>标志，将警告视为错误；</li>
</ul>
<h2 id="fuel核心-fuel-core"><strong>Fuel核心 Fuel Core</strong></h2>
<p><strong>特点 Features:</strong></p>
<ul>
<li>Implementation of a Keygen CLI for configuring nodes;<br>
实现了用于配置节点的Keygen CLI；</li>
<li>Helm charts for multi-node deployments with sentries;<br>
用于多节点部署的Helm图表与岗哨；</li>
<li>Sticky sessions for routing API requests to sentries;<br>
粘性会话用于将API请求路由到岗哨；</li>
<li>Graceful shutdown for all fuel-core components;<br>
所有Fuel核心组件的优雅关闭；</li>
<li>Decoupled API logic from GraphQL resolvers to support alternative RPCs;<br>
将API逻辑与GraphQL解析器解耦，以支持替代的RPC；</li>
<li>Support for TxPointer on inputs;<br>
支持输入的TxPointer；</li>
<li>Retryable messages have been implemented;<br>
已经实现了可重试的消息；</li>
<li>Withdrawal proofs that support periodic commits to L1;<br>
支持定期提交到L1的撤消证明；</li>
<li>Full merklization of contract state, balances, and block headers;<br>
合同状态、余额和块头的完全合并；</li>
<li>Zero-length memory ranges can now pass the ownership check if the position is correct;<br>
如果位置正确，零长度的内存范围现在可以通过所有权检查；</li>
<li>New relative jump opcodes, new <code>CFE</code> instruction and an update to <code>LDC</code> to support position-independent code in the compiler;<br>
新的相对跳转操作码，新的<code>CFE</code>指令和对<code>LDC</code>的更新，进而支持编译器中的独立位置的代码；</li>
</ul>
<p><strong>改进之处 Improvements:</strong></p>
<ul>
<li>Numerous significant database performance improvements;<br>
许多重大的数据库性能改进；</li>
<li>Improved bridging safety with a separate column for message spent status;<br>
改进了跨链桥的安全性，为消息花费的状态设置了单独的列；</li>
<li>Removal of most usages of <code>unsafe</code> with equally performing alternatives in the VM;<br>
在虚拟机中取消了大部分 &quot;unsafe &quot;的使用，采用了性能相同的替代方法；</li>
<li>Removal of recursive bottlenecks in the VM;<br>
消除了虚拟机中的递归瓶颈；</li>
<li><code>ChainID</code> is now utilized during transaction IDs and predicate owner hashing;<br>
<code>ChainID</code>现在在交易ID和谓词所有者散列过程中被使用；</li>
<li><code>$HP</code> now registers points to the first available byte on the heap;<br>
<code>$HP</code>现在注册指向堆上的第一个可用字节；</li>
<li>SMO has been updated to charge from an internal balance in an internal context;<br>
SMO已被更新为在内部环境中从内部平衡中收费；</li>
<li>Improved load-balancing, metrics, log formatting of very large fields, and UTXO pruning;<br>
改进了负载平衡、度量、非常大的字段的日志格式和UTXO修剪；</li>
</ul>
<p><strong>重构 Refactoring:</strong></p>
<ul>
<li>Refactoring of the VM for better unit testability;<br>
重构了虚拟机，以提高单元测试能力；</li>
</ul>
<h2 id="sdks-fuel-ts-fuel-rs"><strong>SDKs (Fuel-TS &amp; Fuel-RS)</strong></h2>
<h3 id="rust-sdk"><strong>🦀 Rust SDK</strong></h3>
<p><strong>特点 Features:</strong></p>
<ul>
<li>Support <code>raw_slice</code> returns from scripts and contracts;<br>
支持来自脚本和合约的<code>raw_slice</code>返回；</li>
<li>Support for custom assets forwarding in contract calls;<br>
支持合约调用中的自定义资产转发；</li>
<li>Support for Sway’s <code>#[payable]</code>;<br>
支持Sway的<code>#[payable]</code>；</li>
<li>Support for Sway’s configurable constants — use the SDK to update constants values with needing to recompile your Sway code;<br>
支持Sway的可配置常量 - 使用SDK来更新常量值，而不需要重新编译你的Sway代码；</li>
<li><code>derive</code>able <code>Parameterize</code> and <code>Tokenizable</code>;<br>
<code>derive</code>able <code>Parameterize</code>和<code>Tokenizable</code>；</li>
<li>New script APIs: <code>ScriptTransaction</code> and <code>CreateTransaction</code>;<br>
新的脚本API： <code>ScriptTransaction</code>和<code>CreateTransaction</code>；</li>
<li>Type path support and resolution of conflicting types;<br>
类型路径支持和解决冲突的类型；</li>
<li><code>Vec</code> as output types for contract methods;<br>
<code>Vec</code>作为合同方法的输出类型；</li>
<li>A new way to filter spendable resources;<br>
一种过滤可花费资源的新方法；</li>
<li>Enable payments with predicates;<br>
启用带有谓词的支付；</li>
<li>Support returning <code>Vec&lt;&gt;</code> types from contracts;<br>
支持从合同中返回<code>Vec&lt;&gt;</code>类型；</li>
<li>Return result from <code>try_from_type_application</code>;<br>
从<code>try_from_type_application</code>返回结果；</li>
<li>Added the latest block time and spendable resources with exclusion;<br>
增加了最新的区块时间和排除可花费的资源；</li>
</ul>
<p><strong>改进 Improvements:</strong></p>
<ul>
<li>Better testability with the new support for <code>assert_eq</code> logs;<br>
通过对<code>assert_eq</code>日志的新支持，提高了可测试性；</li>
<li>Better contract deployment configuration;<br>
更好的合同约部署配置；</li>
<li>Friendlier way to retrieve the latest block time;<br>
更加友好的方式来检索最新的区块时间；</li>
</ul>
<p><strong>错误修正 Bug Fixes:</strong></p>
<ul>
<li>Storage slots have to be sorted in a create tx;<br>
存储槽必须在创建tx时进行排序；</li>
<li>Make <code>load_contract</code> pub;<br>
使<code>load_contract</code>公开；</li>
<li>Coins query no longer returns spent coins;<br>
金币查询不再返回已用的金币；</li>
</ul>
<p><strong>重构 Refactoring:</strong></p>
<ul>
<li><code>fuels</code> wasm-offending packages/reexports hidden behind <code>std</code> flag;<br>
<code>fuels</code> 隐藏在<code>std</code> 标签之后的wasm-offending 包/再输出</li>
<li>Improvement of log decoding and simplification of <code>ParamType</code>;<br>
改进了日志解码，简化了<code>ParamType</code>；</li>
<li>Contract deployment configuration;<br>
合约部署配置；</li>
<li>Removal of the <code>Byte</code> type from the SDK;<br>
从SDK中删除了<code>Byte</code>类型；</li>
<li>Removal of unused file <code>cargo</code>;<br>
删除了未使用的文件<code>cargo</code>；</li>
<li>Reorganization of harness tests;<br>
重新组织了线束测试；</li>
<li>Update of the PR template;<br>
更新PR模板；</li>
</ul>
<p><strong>文档 Documentation:</strong></p>
<ul>
<li>Update docs about vectors;<br>
更新关于向量的文档；</li>
</ul>
<h3 id="typescript-sdk">🧰 TypeScript SDK</h3>
<p><strong>特点 Features:</strong></p>
<ul>
<li>Full support for predicates and script ABI in the new <code>typegen</code>;<br>
在新的 <code>typegen</code>中完全支持谓词和脚本ABI；</li>
<li><code>main</code> argument support for predicates and scripts;<br>
对谓词和脚本的<code>main</code>参数支持；</li>
<li>Add Predicate ABIs support to <code>Typegen</code>;<br>
在 <code>Typegen</code>中添加谓词ABI支持；</li>
<li>Add Script ABIs support to <code>Typegen</code>;<br>
在<code>Typegen</code>中添加脚本ABI支持；</li>
<li>Implementation of vector as output slice;<br>
实现向量作为输出片断；</li>
</ul>
<p><strong>改进之处 Improvements:</strong></p>
<ul>
<li>
<p>Predicates now work similarly to wallets — predicates are now usable to pay for fees and more;<br>
谓词现在的工作方式类似于钱包—谓词现在可以用来支付费用和其他；</p>
</li>
<li>
<p>Switched the documentation engine;<br>
更换了文档引擎；</p>
</li>
<li>
<p>Re-organization of constants throughout the repo;<br>
重新组织了整个Repo中的常量；</p>
</li>
<li>
<p>Standardization of package configurations;<br>
包配置的标准化；</p>
</li>
</ul>
<p><strong>漏洞修复 Bug Fixes:</strong></p>
<ul>
<li>Fixed <code>B512</code> ABI coder and Typegen to expect its correct Sway type;<br>
修正了<code>B512</code>ABI编码器和Typegen，以期待其正确的Sway类型；</li>
</ul>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[身份证明：它是什么以及为什么重要 (PROOF OF PERSONHOOD：What it is and why it’s needed)]]></title>
        <id>https://chainguys.github.io/post/shen-fen-zheng-ming-ta-shi-shi-me-yi-ji-wei-shi-me-chong-yao-proof-of-personhoodwhat-it-is-and-why-its-needed/</id>
        <link href="https://chainguys.github.io/post/shen-fen-zheng-ming-ta-shi-shi-me-yi-ji-wei-shi-me-chong-yao-proof-of-personhoodwhat-it-is-and-why-its-needed/">
        </link>
        <updated>2023-04-14T01:21:33.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://worldcoin-company-website.cdn.prismic.io/worldcoin-company-website/4190ff7b-b039-4b14-975d-628d85470985_proof-of-personhood-what-why-how-worldcoin-can-help-4.svg" alt="" loading="lazy"></figure>
<hr>
<ol>
<li>
<p>The rapid advancement of artificial intelligence has accelerated the need to differentiate between human- and AI-generated content online<br>
人工智能的快速发展加速了区分人类和人工智能产生在线内容的需要。</p>
</li>
<li>
<p>Proof of personhood addresses two of the key considerations presented by the Age of AI: (1) protecting against sybil attacks and (2) minimizing the spread of AI-generated misinformation<br>
人格证明解决了人工智能时代的两个关键问题：(1)免受女巫攻击；(2)尽量减少人工智能产生错误信息的传播。</p>
</li>
<li>
<p>World ID, an open and permissionless identity protocol, acts as a global digital passport and can be used anonymously to prove uniqueness and humanness as well as to selectively disclose credentials issued by other parties<br>
世界身份证是一个开放和无许可的身份协议，作为全球数字护照，可以匿名使用，以证明其独特性和人格，并有选择地披露其他各方颁发的证书。</p>
</li>
<li>
<p>Worldcoin has published in-depth resources to provide more details about <a href="https://worldcoin.org/blog/engineering/humanness-in-the-age-of-ai">proof of personhood</a> and <a href="https://worldcoin.org/blog/announcements/introducing-world-id-and-sdk">World ID</a><br>
世界币已经发布了深度资源，以提供更多关于<a href="https://worldcoin.org/blog/engineering/humanness-in-the-age-of-ai">人格证明</a>和<a href="https://worldcoin.org/blog/announcements/introducing-world-id-and-sdk">世界身份证</a>的细节。</p>
</li>
</ol>
<p>Artificial intelligence is rapidly advancing. As it does, the ability to differentiate between human- and AI-generated content online is going from a novel idea to a necessity.</p>
<p>人工智能正在迅速发展。随着它的发展，区分人类和人工智能产生的在线内容的能力正在从一个新奇的想法变成一种必要。</p>
<p>That’s where proof of personhood comes in.</p>
<p>这就是人格证明的意义所在</p>
<p>In a nutshell, proof of personhood (PoP) is a mechanism that establishes an individual’s humanness and uniqueness. It can be thought of as the first and most fundamental building block in establishing digital identity.</p>
<p>简而言之，人格证明（PoP）是一种确定个人的人性和独特性的机制。它可以被认为是建立数字身份的第一个和最基本的基石。</p>
<figure data-type="image" tabindex="2"><img src="https://worldcoin-company-website.cdn.prismic.io/worldcoin-company-website/0213bfa9-52ef-4735-bb3a-318195e79ec3_humanness-in-the-age-of-ai-32.svg" alt="" loading="lazy"></figure>
<p>The Worldcoin project is initiating <a href="https://worldcoin.org/world-id">World ID</a>, an open and permissionless identity protocol that can be used anonymously to prove uniqueness and humanness as well as to selectively disclose credentials issued by other parties. More on that below, but first let’s look at the challenges that PoP addresses.</p>
<p>世界币项目正在发起<a href="https://worldcoin.org/world-id">World ID</a>，这是一个开放的、无许可的身份协议，可以匿名使用，以证明独特性和人类性，以及选择性地披露其他方发出的证书。下面会有更多的内容，但首先让我们看看PoP所解决的挑战。</p>
<h2 id="为什么需要人格证明why-is-proof-of-personhood-needed">为什么需要人格证明？(Why is proof of personhood needed?)</h2>
<p>Advanced AI can be an empowering tool, but like all emerging technologies, it introduces new and complex considerations. Two of these are:</p>
<p>先进的人工智能可以成为一种授权工具，但像所有新兴技术一样，它引入了新的和复杂的考虑。其中两点是：</p>
<ol>
<li>Limiting the number of accounts each individual can create to protect against online attacks from multiple pseudonymous identities generated by a single attacker (aka <a href="https://en.wikipedia.org/wiki/Sybil_attack#:~:text=A%20Sybil%20attack%20is%20a,gain%20a%20disproportionately%20large%20influence.">sybil attacks</a>)<br>
限制每个人可以创建的账户数量，防止单个攻击者产生的多个假名身份的在线攻击（又称<a href="https://en.wikipedia.org/wiki/Sybil_attack#:~:text=A%20Sybil%20attack%20is%20a,gain%20a%20disproportionately%20large%20influence%E3%80%82">女巫攻击</a></li>
<li>Preventing the dissemination of realistic looking/sounding AI-generated content intended to deceive or <a href="https://openai.com/research/forecasting-misuse">spread disinformation at scale</a><br>
防止传播外观/声音逼真的人工智能生成的内容，造成欺骗或<a href="https://openai.com/research/forecasting-misuse">大规模传播虚假信息</a></li>
</ol>
<p>Proof of personhood addresses both of these. <br>
人格证明解决了这两个问题。</p>
<p>First, PoP provides natural rate limiting through account authentication. This essentially eliminates sybil attacks at any notable scale. Second, it allows for the filtration of content or accounts that have been either confirmed or not confirmed as human, helping address the viral spread of AI-generated disinformation.</p>
<p>首先，PoP通过账户认证提供自然速率限制。这从根本上消除了任何明显规模的女巫攻击。其次，它允许过滤那些已被确认为或未被确认为人类的内容或账户，帮助解决人工智能产生的虚假信息病毒式传播的问题。</p>
<p>PoP should not be seen as a panacea, but instead as a necessary first step in establishing a global network of genuine, unique human identities. If achieved on a large enough scale, the potential social benefits are considerable.</p>
<p>PoP不应被视为万能药，而应被视为建立真正的、独特的人类身份全球网络的必要第一步。如果在足够大的范围内实现，潜在的社会效益十分可观。</p>
<h2 id="世界币如何帮助建立人格证明how-can-worldcoin-help-establish-proof-of-personhood">世界币如何帮助建立人格证明？(How can Worldcoin help establish proof of personhood?)</h2>
<p>Worldcoin recently introduced a privacy-first, decentralized and permissionless identity protocol, known as <a href="https://worldcoin.org/blog/announcements/introducing-world-id-and-sdk">World ID</a>, to help establish PoP on a global scale.</p>
<p>世界币最近推出了一个隐私第一、去中心化和无许可的身份协议，被称为<a href="https://worldcoin.org/blog/announcements/introducing-world-id-and-sdk">World ID</a>，以帮助在全球范围内建立PoP。</p>
<p>In order to build World ID, the teams developing the Worldcoin project first established a proof of personhood mechanism based on a custom biometric imaging device known as <a href="https://worldcoin.org/blog/engineering/opening-orb-look-inside-worldcoin-biometric-imaging-device">the Orb</a>. Once a person has verified their humanness at an Orb, they can receive a unique PoP credential on a compatible digital wallet. The first of these is the <a href="https://worldcoin.org/download-app">World App</a>, built by <a href="https://www.toolsforhumanity.com/">Tools for Humanity</a>, however more will become available as the protocol <a href="https://worldcoin.org/blog/worldcoin/primer-on-decentralization-at-worldcoin">continues to decentralize</a>.</p>
<p>为了建立世界身份证，开发世界币项目的团队首先建立了一个基于定制的生物识别成像设备<a href="https://worldcoin.org/blog/engineering/opening-orb-look-inside-worldcoin-biometric-imaging-device">the Orb</a>的人格证明机制。一旦一个人在Orb上验证了他们的人格，他们就可以在一个兼容的数字钱包上获得一个独特的PoP凭证。其中第一个是<a href="https://worldcoin.org/download-app">世界应用</a>，由<a href="https://www.toolsforhumanity.com/">人类工具</a>建立，然而随着协议<a href="https://worldcoin.org/blog/worldcoin/primer-on-decentralization-at-worldcoin">继续去中心化</a>，更多的应用将变得可用。</p>
<figure data-type="image" tabindex="3"><img src="https://worldcoin-company-website.cdn.prismic.io/worldcoin-company-website/7820773e-cd1f-423e-94a6-3ad3fa83540e_proof-of-personhood-what-why-how-worldcoin-can-help-5.svg" alt="" loading="lazy"></figure>
<p>World ID can be thought of as a global digital passport or identity wallet that lives locally on its holder’s phone and can be used anonymously thanks to zero-knowledge proofs to prove that they are a real and unique person.</p>
<p>世界身份证可以被认为是一个全球数字护照或身份钱包，它生活在持有人的手机上，由于零知识证明，可以匿名使用，以证明他们是一个真实和独特的人。</p>
<p>As the World ID protocol is developed further by the community, it will support any verified credential (at launch, supported verifications include phone number verification for easy access to anyone with a smartphone and Orb iris biometric verification for extreme accuracy).</p>
<p>随着世界身份证协议被社区进一步开发，它将支持任何经过验证的凭证（在推出时，支持的验证包括电话号码验证，以方便任何拥有智能手机的人使用，以及Orb虹膜生物识别验证，以获得极高的准确性）。</p>
<h2 id="了解人格证明的其他资源-additional-resources-for-understanding-proof-of-personhood">了解人格证明的其他资源 (Additional resources for understanding proof of personhood)</h2>
<p>The following blog posts provide more details on PoP, as well as the privacy, decentralization and hardware considerations surrounding it:</p>
<p>以下博文提供了关于PoP的更多细节，以及围绕它的隐私、去中心化和硬件考虑：</p>
<ol>
<li><a href="https://worldcoin.org/blog/engineering/humanness-in-the-age-of-ai">Humanness in the Age of AI</a></li>
<li><a href="https://worldcoin.org/blog/worldcoin/about-entropy-why-irises-beat-fingerprints-faces-proving-personhood">Why irises beat faces and fingerprints for proving personhood</a></li>
<li><a href="https://worldcoin.org/blog/worldcoin/primer-on-decentralization-at-worldcoin">A primer on decentralization at Worldcoin</a></li>
<li><a href="https://worldcoin.org/blog/developers/privacy-deep-dive">Privacy at Worldcoin: A Technical Deep Dive - Part I</a></li>
<li><a href="https://worldcoin.org/blog/worldcoin/understanding-orb-why-worldcoin-uses-biometrics">Understanding the Orb and why Worldcoin uses biometrics</a></li>
<li><a href="https://worldcoin.org/blog/engineering/opening-orb-look-inside-worldcoin-biometric-imaging-device">Opening the Orb: A look inside Worldcoin’s biometric imaging device</a></li>
</ol>
<p>You can also stay up to date on all of the latest Worldcoin announcements, events and information by signing up for the blog newsletter at the bottom of this page or following along on <a href="https://twitter.com/worldcoin">Twitter</a>, <a href="https://discord.gg/worldcoin">Discord</a> and <a href="https://t.me/worldcoin">Telegram</a>.</p>
<p>您还可以通过注册本页底部的博客或在<a href="https://twitter.com/worldcoin">Twitter</a>、<a href="https://discord.gg/worldcoin">Discord</a>和<a href="https://t.me/worldcoin">Telegram</a>上关注所有最新的Worldcoin公告、活动和信息。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AltLayer开放免费试用无代码汇总启动板 (AltLayer opens up a free trial of its no-code rollup launchpad)]]></title>
        <id>https://chainguys.github.io/post/altlayer-kai-fang-mian-fei-shi-yong-wu-dai-ma-hui-zong-qi-dong-ban-altlayer-opens-up-a-free-trial-of-its-no-code-rollup-launchpad/</id>
        <link href="https://chainguys.github.io/post/altlayer-kai-fang-mian-fei-shi-yong-wu-dai-ma-hui-zong-qi-dong-ban-altlayer-opens-up-a-free-trial-of-its-no-code-rollup-launchpad/">
        </link>
        <updated>2023-04-12T04:35:33.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://raas-freetrial.altlayer.io/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd830f8c-5735-49ef-84d0-370d68bc4462%2FUntitled.png?id=9c84f8b3-d01f-4c05-8ea5-7956d317f932&amp;table=block&amp;spaceId=e3667f93-2fbe-4164-a69c-0240c2500e1b&amp;width=2000&amp;userId=&amp;cache=v2" alt="" loading="lazy"></figure>
<ul>
<li>
<p><em>Public launch welcomes all users to deploy their own Layer-2 with AltLayer</em><br>
<em>公开发布欢迎所有用户使用AltLayer部署自己的Layer-2</em>。</p>
</li>
<li>
<p><em>Launchpad integrated with a novel AI tool</em> <strong><em>FlashGPT</em></strong> <em>which helps devs build smart contracts faster on Solidity</em><br>
_Launchpad集成了一个全新的AI工具  <strong>FlashGPT</strong> 它可以帮助开发者在Solidity上更快地构建智能合约。</p>
</li>
</ul>
<p>Following the success of the 100 Flash Layers campaign last month, we have received numerous in-bound requests to <a href="https://dashboard.alt.technology/">open up our <strong>rollup launchpad</strong></a> to all. We quickly jumped to action — and in a few short weeks, we’re delighted to bring this product to you.</p>
<p>继上个月100个Flash Layers活动的成功之后，我们收到了大量的内部请求，希望<a href="https://dashboard.alt.technology/">向所有人开放我们的<strong>rollup launchpad</strong></a>。我们迅速行动起来--很高兴在短短几周内就将这个产品带给你们。</p>
<p>As of today, we’d like to o<a href="https://dashboard.alt.technology/">pen up our no-code rollup launchpad</a> as part of our public launch. With this intuitive launchpad, you can spin up an execution layer across multiple chains with an explorer. Whether you’re a developer, a Web3 entrepreneur, or just an amateur enthusiast — you will be able to launch an application-specific rollup customized to suit any business needs. A bonus is that users can experiment with the disposability features of a ‘flash layer.’ The launchpad includes associated infrastructure such as sequencers, RPC endpoints, a block explorer and a token faucet. Other toolings include Remix IDE, contract generator, and ABI Ninja — which presents an easy to use interface to call any contract deployed on a multitude of chains including rollups launched via the launchpad.</p>
<p>从今天起，我们把无代码汇总启动板（https://dashboard.alt.technology/）作为我们公开发布的一部分。有了这个直观的启动板，你可以用一个浏览器在多个链上启动一个执行层。无论你是一个开发人员，一个Web3企业家，或者只是一个业余爱好者--你将可以启动一个特定应用的汇总，来适应任何业务需求。一个额外的好处是，用户可以试验'闪存层'的可处置性功能。启动板包括相关的基础设施，如序列器、RPC端点、区块浏览器和代币水龙头。其他工具包括Remix IDE、合约生成器和ABI Ninja--它提供了一个易于使用的界面，以调用部署在众多链上的任何合约，包括通过启动板启动的汇总。</p>
<p>All these services are being offered as a part of a rollup-as-a-service package where a user launching the rollup does not need to host or manage any part of the rollup or associated infrastructure. And mostly importantly, users do not need to write a single line of code. And as you will see it yourself, it does not take more than 5 mins to get your own rollup.</p>
<p>所有这些服务都是作为 &quot;汇总即服务 &quot;包的一部分提供的，启动汇总的用户不需要托管或管理汇总的任何部分或相关基础设施。最重要的是，用户不需要编写任何一行代码。正如你自己所看到的，不需要超过5分钟就能获得你自己的汇总。</p>
<p>The launchpad can be accessed by anyone for a two-hour free trial — which gives you plenty of time to deploy a Layer-2 application of your choosing — without the hassle, the build-time or costs!</p>
<p>任何人都可以通过两小时的免费试用来访问launchpad--这给了你足够的时间来部署你所选择的第二层应用--没有麻烦，没有构建时间，也没有成本</p>
<p><strong>Another bonus is that</strong> we’ve integrated our proprietary FlashGPT.</p>
<p>**另一个好处是，**我们已经整合了我们专有的FlashGPT。</p>
<p><em>How this fits into the rollup launchpad</em>: FlashGPT utilizes the power of OpenAI’s GPT language model to generate Solidity smart contracts and deploy them to Layer 1 and Layer 2 solutions (including AltLayer’s Flash Layer, Arbitrum, BNB Chain, Ethereum, Gnosis, Polygon, Polygon zkEVM testnet, Optimism, and scroll alpha testnet). This tool natively integrates into AltLayer’s rollup-as-a-service solution, which makes it possible to deploy the smart contract on any flash layer that gets provisioned by AltLayer.</p>
<p><em>这如何适合于汇总启动板</em>： FlashGPT利用OpenAI的GPT语言模型的力量来生成Solidity智能合约，并将其部署到第1层和第2层解决方案（包括AltLayer的Flash层、Arbitrum、BNB Chain、Ethereum、Gnosis、Polygon、Polygon zkEVM测试网、Optimism和roll alpha测试网）。这个工具原生地集成到AltLayer的rollup-as-a-service解决方案中，这使得在任何由AltLayer提供的闪存层上部署智能合约成为可能。</p>
<p>FlashGPT is suitable for developers as well as for those with little to no coding experience. It allows developers to experiment, innovate and dive deeper into the world of decentralized application development while saving time, capital and developer resources.</p>
<p>FlashGPT适用于开发人员，也适用于那些几乎没有编码经验的人。它允许开发者在节省时间、资金和开发者资源的同时，尝试、创新并深入到去中心化应用开发的世界。</p>
<p>Ready to get your hands dirty?</p>
<p>准备好下场来玩玩了吗？</p>
<ul>
<li>
<p><strong>Try the launchpad now</strong>. <a href="https://dashboard.alt.technology/">https://dashboard.alt.technology/</a><br>
<strong>现在就试试启动板</strong>。<a href="https://dashboard.alt.technology/">https://dashboard.alt.technology/</a></p>
</li>
<li>
<p>Use <a href="https://raas-freetrial.altlayer.io/">our tutorial</a> to get started. It’s completely free and only takes a few minutes!<br>
使用<a href="https://raas-freetrial.altlayer.io/">我们的教程</a>来开始。它是完全免费的，只需要几分钟。</p>
</li>
</ul>
<p>We look forward to hearing about your experience using the launchpad. For questions or to engage with the community, join our <a href="https://discord.gg/altlayer">Discord server</a>. Don’t forget to follow us on <a href="https://twitter.com/alt_layer">Twitter</a> for all updates!</p>
<p>我们期待着听到你使用启动板的经验。如有问题或想与社区互动，请加入我们的<a href="https://discord.gg/altlayer">Discord服务器</a>。不要忘记在<a href="https://twitter.com/alt_layer">Twitter</a>上关注我们的所有更新!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Aleo内容汇总(ENG&CHN)]]></title>
        <id>https://chainguys.github.io/post/aleo-nei-rong-hui-zong-engandchn/</id>
        <link href="https://chainguys.github.io/post/aleo-nei-rong-hui-zong-engandchn/">
        </link>
        <updated>2023-03-29T11:36:33.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://assets-global.website-files.com/5e990b3bae81cf4a03433c58/5f347d008da2e477a3c61fca_Aleo-logo-white-p-500.png" alt="" loading="lazy"></figure>
<h1 id="chainguys"><a href="https://twitter.com/Chainguys">@Chainguys</a>原创 (<a href="https://twitter.com/Chainguys">@Chainguys</a> Original )</h1>
<h2 id="视频短视频-videosshort-videos">视频/短视频 (Videos/Short Videos)</h2>
<p><a href="https://twitter.com/Chainguys/status/1642693247108542466">Aleo简介-A short intro to Aleo</a><br>
<a href="https://twitter.com/Chainguys/status/1640924159730667521">Aleo新人指南:3.融资轮次</a><br>
<a href="https://twitter.com/Chainguys/status/1640197984653549569">Aleo for Beginners:3.Funding Rounds</a><br>
<a href="https://twitter.com/Chainguys/status/1639097802700595200">Aleo新人指南:2.零知识证明-P5</a><br>
<a href="https://twitter.com/Chainguys/status/1638381333528420354">Aleo for Beginners:2.zero-knowledge-P5</a><br>
<a href="https://twitter.com/Chainguys/status/1637655820954476544">Aleo新人指南:2.零知识证明-P4</a><br>
<a href="https://twitter.com/Chainguys/status/1636537884248293378">Aleo for Beginners:2.zero-knowledge-P4</a><br>
<a href="https://twitter.com/Chainguys/status/1635817448346624000">Aleo新人指南:2.零知识证明-P3</a><br>
<a href="https://twitter.com/Chainguys/status/1635109230587019267">Aleo for Beginners:2.zero-knowledge-P3</a>)<br>
<a href="https://twitter.com/Chainguys/status/1633982008908214274">Aleo新人指南:2.零知识证明-P2</a><br>
<a href="https://twitter.com/Chainguys/status/1633321669493243905">Aleo for Beginners:2.zero-knowledge-P2</a><br>
<a href="https://twitter.com/Chainguys/status/1632559040009056256">Aleo新人指南:2.零知识证明-P1</a><br>
<a href="https://twitter.com/Chainguys/status/1631121990257086464">Aleo for Beginners:2.zero-knowledge-P1</a><br>
<a href="https://twitter.com/Chainguys/status/1628581463267610624">Aleo新人指南:1.简介</a><br>
<a href="https://twitter.com/Chainguys/status/1628337503844577281">Aleo for Beginners:1.Introduction</a></p>
<h2 id="推文长推-twitter-threads">推文/长推 (twitter threads)</h2>
<p><a href="https://twitter.com/Chainguys/status/1641644054281613313"> @AleoHQ's key features</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Akord材料合集-CHN&ENG（Akord materials CHN&ENG) Updating]]></title>
        <id>https://chainguys.github.io/post/akord-zhong-wen-cai-liao-he-ji-akord-chinese-materials-updating/</id>
        <link href="https://chainguys.github.io/post/akord-zhong-wen-cai-liao-he-ji-akord-chinese-materials-updating/">
        </link>
        <updated>2023-03-23T08:36:21.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://akord.com/img/akord-logo.svg" alt="" loading="lazy"></figure>
<h1 id="chainguys"><a href="https://twitter.com/Chainguys">@Chainguys</a> 原创 (<a href="https://twitter.com/Chainguys">@Chainguys</a> Original)</h1>
<h2 id="视频videos">视频(Videos)</h2>
<p><a href="https://twitter.com/Chainguys/status/1642754531288023042">Akord简介-Short Intro to Akord</a></p>
<h1 id="官方博文official-blog">官方博文(Official Blog)</h1>
<p><strong>2023:</strong></p>
<h2 id="02-08-gdpr和区块链"><a href="https://chainguys.github.io/post/gdpr-he-qu-kuai-lian-gdpr-and-blockchain/">02-08 GDPR和区块链</a></h2>
<h2 id="01-31-web3存档-the-web3-archive"><a href="https://chainguys.github.io/post/web3-cun-dang-the-web3-archive/">01-31 web3存档 (The web3 archive)</a></h2>
<h2 id="01-30-akordjsarweave-上的隐私-协作和文件管理akordjsprivacy-collaboration-and-file-management-on-arweave"><a href="https://chainguys.github.io/post/akordjsarweave-shang-de-yin-si-xie-zuo-he-wen-jian-guan-li-akordjsprivacy-collaboration-and-file-management-on-arweave/">01-30 AkordJS：Arweave 上的隐私、协作和文件管理(AkordJS：privacy, collaboration and file management on Arweave)</a></h2>
<h2 id="01-06-重塑我们的品牌-rebuilding-our-brand"><a href="https://chainguys.github.io/post/chong-su-wo-men-de-pin-pai-rebuilding-our-brand/">01-06 重塑我们的品牌 (Rebuilding our brand)</a></h2>
<p><strong>2022:</strong></p>
<h2 id="11-26-认识-akord基于区块链的永久存储和发布协议-meet-akordthe-blockchain-based-permanent-storage-and-publishing-protocol"><a href="https://chainguys.github.io/post/ren-shi-akordji-yu-qu-kuai-lian-de-yong-jiu-cun-chu-he-fa-bu-xie-yi-meet-akordthe-blockchain-based-permanent-storage-and-publishing-protocol/">11-26 认识 Akord：基于区块链的永久存储和发布协议 (Meet Akord：the blockchain-based permanent storage and publishing protocol)</a></h2>
<h2 id="10-11-当我们都dedoco我们的文档-when-we-all-dedoco-our-documents"><a href="https://chainguys.github.io/post/dang-wo-men-du-dedoco-wo-men-de-wen-dang-when-we-all-dedoco-our-documents/">10-11 当我们都Dedoco我们的文档 (When we all Dedoco our documents)</a></h2>
<h2 id="10-06-akord应用v2介绍-introducing-the-v2-akord-app"><a href="https://chainguys.github.io/post/akord-ying-yong-v2-jie-shao-introducing-the-v2-akord-app/">10-06 Akord应用V2介绍 (Introducing the V2 Akord app)</a></h2>
<h2 id="09-26-akord协议向所有构建者开源-akord-protocol-open-for-builders"><a href="https://chainguys.github.io/post/akord-xie-yi-xiang-suo-you-gou-jian-zhe-kai-yuan-akord-protocol-open-for-builders/">09-26 Akord协议—向所有构建者开源 (Akord protocol – open for builders)</a></h2>
<h2 id="07-03-akord-x-dedoco-宣布合作-akord-x-dedoco-partnership-announcement"><a href="https://chainguys.github.io/post/akord-x-dedoco-xuan-bu-he-zuo-akord-x-dedoco-partnership-announcement/">07-03 Akord x Dedoco – 宣布合作! (Akord x Dedoco – partnership announcement)</a></h2>
<h2 id="06-24-公共保管库已经到来public-vaults-have-arrived"><a href="https://chainguys.github.io/post/gong-gong-bao-guan-ku-yi-jing-dao-lai-public-vaults-have-arrived/">06-24 公共保管库已经到来！(Public vaults have arrived!)</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[宣布“Beta-3”，Fuel 的第三个公共测试网 (Announcing “Beta-3”, Fuel’s Third Public Testnet)]]></title>
        <id>https://chainguys.github.io/post/xuan-bu-beta-3fuel-de-di-san-ge-gong-gong-ce-shi-wang-announcing-beta-3-fuels-third-public-testnet/</id>
        <link href="https://chainguys.github.io/post/xuan-bu-beta-3fuel-de-di-san-ge-gong-gong-ce-shi-wang-announcing-beta-3-fuels-third-public-testnet/">
        </link>
        <updated>2023-03-20T07:07:35.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2023/02/Announcement_banner_1.png" alt="" loading="lazy"></figure>
<hr>
<p>The new beta-3 testnet brings P2P networking, introducing the ability to run synchronizing full nodes on Fuel.</p>
<p>新的 beta-3 测试网带来了P2P 网络，引入了在 Fuel 上同步运行全节点的能力。</p>
<blockquote>
<p><strong>This article has been translated by the Fuel Ambassadors in <strong><a href="https://mirror.xyz/0x9bCEF7f8E2e73e2384dDaaF003B137c96a08C366/meCplwXsC8bazPX3bENWWHY3Us0xrXjCd_bN6rECbWY?ref=fuel-labs.ghost.io">Russian</a></strong>.</strong><br>
__这篇文章已由Fuel大使翻译成<a href="https://mirror.xyz/0x9bCEF7f8E2e73e2384dDaaF003B137c96a08C366/meCplwXsC8bazPX3bENWWHY3Us0xrXjCd_bN6rECbWY?ref=fuel-labs.ghost__.io">俄语</a></p>
</blockquote>
<p>We are thrilled to announce the launch of the <code>beta-3</code> testnet, adding P2P networking on Fuel. With this third testnet, Fuel enters the later stages of testing and reaches a crucial milestone on its way to mainnet, a modular future that enables true scalability for the Ethereum ecosystem.</p>
<p>我们很高兴地宣布推出 <code>beta-3</code> 测试网，即在 Fuel 上添加 P2P 网络。有了第三个测试网，Fuel 进入了测试的后期阶段，并在通往主网的道路上达到了一个重要的里程碑，这是一个模块化的未来，可以为以太坊生态系统实现真正的可扩展性。</p>
<p>In November, <a href="https://fuel-labs.ghost.io/announcing-beta-2-testnet/">we launched <code>beta-2</code></a>, adding bridging support so developers could experiment with cross-chain dapps on Fuel. We are excited to see a vibrant ecosystem emerge on Fuel, now home to more than <a href="https://fuel.build/?ref=fuel-labs.ghost.io">25+ projects</a>. Since its introduction, <code>beta-2</code> has settled more than 900,000 transactions and seen immense interest from developers, projects and community members.</p>
<p>11 月，<a href="https://fuel-labs.ghost.io/announcing-beta-2-testnet/">我们推出了 <code>beta-2</code></a>，添加了跨链桥支持，方便开发人员在 Fuel 上试验跨链 dapp。我们很高兴看到 Fuel 上出现了一个充满活力的生态系统，现在有超过 <a href="https://fuel.build/?ref=fuel-labs.ghost.io">25 个以上的项目</a>。自推出以来，<code>beta-2</code> 已经结算了超过 900,000 笔交易，并引起了开发人员、项目和社区成员的极大兴趣。</p>
<p>Exciting new possibilities await with <code>beta-3</code>.</p>
<p><code>beta-3</code> 有着令人兴奋的全新可能。</p>
<h2 id="现在fuel上有了p2p网络-p2p-networking-now-on-fuel">现在Fuel上有了P2P网络 (P2P Networking Now on Fuel)</h2>
<p><code>beta-3</code> expands on the features of <code>beta-2</code>, introducing P2P networking and the ability to run synchronizing full nodes. This enables the <code>beta-3</code> APIs to scale up to and reach the level of demand observed in <code>beta-2</code>. In a following testnet, we’ll enable public P2P access so anyone can run local nodes connected to Fuel.</p>
<p><code>beta-3</code> 扩展了 <code>beta-2</code> 的功能，引入了 P2P 网络和同步运行全节点的能力。这使 <code>beta-3</code> API 能够扩展并达到在 <code>beta-2</code> 中被发现的需求水平。在接下来的测试网中，我们将启用公共 P2P 访问，这样任何人都可以运行连接到 Fuel 的本地节点。</p>
<blockquote>
<p><em>Please note that</em> <code>beta-3</code> <em>is not an incentivized testnet. There will be no direct rewards for participation in this network.</em><br>
<em>请注意</em> <code>beta-3</code> <em>不是激励测试网。参与该网络不会有直接奖励。</em></p>
</blockquote>
<hr>
<h2 id="主要功能-key-features">主要功能 (Key Features)</h2>
<p>Below is a full list of key features for the <code>beta-3</code> testnet:</p>
<p>以下是 <code>beta-3</code> 测试网的主要功能的完整列表：</p>
<h3 id="️-区块同步-block-sync">⛓️ 区块同步 (Block Sync)</h3>
<p>Synchronizing full nodes can sync with the Fuel network via P2P networking. This is primarily useful for things like being able to fork mainnet state for contract testing or having a dedicated full node for application indexing purposes. While P2P is enabled, this is currently only for trusted connections that we use for speeding up/scaling the API.</p>
<p>同步全节点可以通过 P2P 网络与 Fuel 网络同步。这主要用于诸如能够为合约测试，分叉主网状态或具有用于应用索引目的的专用完整节点之类的事情。虽然启用了 P2P，但目前仅适用于我们用于加速/扩展 API 的可信连接。</p>
<h3 id="单一共享网络-single-shared-network">🤝 单一共享网络 (Single Shared Network)</h3>
<p><code>beta-3</code> is a shared, public developer- and user-facing testnet. Developers can deploy contracts and users can then interact with those contracts.</p>
<p><code>beta-3</code> 是一个共享的、面向开发人员和用户的公共测试网。开发人员可以部署合约，然后用户可以与这些合约进行交互。</p>
<h3 id="水龙头-faucet">🚰 水龙头 (Faucet)</h3>
<p>Anyone can use the faucet to get some test ETH to deploy or interact with contracts. <a href="https://faucet-beta-3.fuel.network/?ref=fuel-labs.ghost.io">Available here</a>.</p>
<p>任何人都可以使用水龙头获得一些测试 ETH 来部署或与合约交互。 <a href="https://faucet-beta-3.fuel.network/?ref=fuel-labs.ghost.io">可在此处获取</a>。</p>
<h3 id="graphql端点-graphql-endpoint">📃 GraphQL端点 (GraphQL Endpoint)</h3>
<p>The <a href="https://github.com/FuelLabs/fuel-core?ref=fuel-labs.ghost.io">Fuel Core</a> node uses GraphQL instead of JSON RPC. A playground for the public GraphQL endpoint for <code>beta-3</code> is <a href="https://beta-3.fuel.network/playground?ref=fuel-labs.ghost.io">available here</a>.</p>
<p><a href="https://github.com/FuelLabs/fuel-core?ref=fuel-labs.ghost.io">Fuel Core</a> 节点使用 GraphQL 而不是 JSON RPC。 <code>beta-3</code> 的公共 GraphQL 端点的测试场<a href="https://beta-3.fuel.network/playground?ref=fuel-labs.ghost.io">在此处可用</a>。</p>
<h3 id="区块浏览器-block-explorer">🔍 区块浏览器 (Block Explorer)</h3>
<p>A block explorer (still heavily a work-in-progress) is <a href="https://fuellabs.github.io/block-explorer-v2/beta-3/?ref=fuel-labs.ghost.io#/">available here</a>.</p>
<p>区块浏览器（仍在密集开发中）[可在此处获得](https://fuellabs.github.io/block-explorer-v2/beta-3/?ref=fuel-labs.ghost.io# /).</p>
<p><em>If you have any questions (development-related or otherwise), you can join the <a href="https://discord.gg/xfpK4Pe?ref=fuel-labs.ghost.io">Fuel Labs Discord</a> and head to the #questions channel under the Testnet category. Be sure to follow our <a href="https://twitter.com/fuellabs_?ref=fuel-labs.ghost.io">Twitter</a> for updates.</em></p>
<p><em>如果您有任何问题（与开发相关或其他），您可以加入 <a href="https://discord.gg/xfpK4Pe?ref=fuel-labs.ghost.io">Fuel Labs Discord</a> 并前往测试网类别下的#questions 频道。请务必关注我们的 <a href="https://twitter.com/fuellabs_?ref=fuel-labs.ghost.io">Twitter</a> 来获取更新。</em></p>
<hr>
<h2 id="有何更新-whats-new">有何更新 (What's New)</h2>
<h3 id="编译器-compiler">编译器 (Compiler)</h3>
<ul>
<li>The compiler is now able to handle large design more robustly and efficiently due to various backend optimizations that have been introduced, resulting in bytecode size reduction of up to 30%. New features and enhancements have also been introduced such as support for mutable static arrays, the <code>#[payable]</code> annotation, eliminating the need for <code>~</code> to accesses associated functions, the ability to return a <code>Vec</code> from a script, and the ability to pass in predicate data via <code>main()</code> in predicates.<br>
由于引入了各种后端优化，编译器现在能够更稳健、更高效地处理大型设计，从而使字节码大小减少多达 30%。还引入了新功能和增强功能，例如支持可变静态数组、<code>#[payable]</code> 注释、无需使用 <code>~</code> 访问相关函数、从脚本返回 <code>Vec</code> 的能力，以及在谓词中通过 <code>main()</code> 传递谓词数据的能力。</li>
</ul>
<h3 id="客户端-client">🌐 客户端 (Client)</h3>
<ul>
<li>
<p>Block sync support for running local nodes (see key features above)<br>
对运行本地节点的区块同步支持（参见上面的主要特性）</p>
</li>
<li>
<p>Gas metered Predicates - Predicate fees are calculated similarly to scripts, unlocking the ability for standard control flows such as loops or dynamic jumps. Gas used by predicates is deducted from the overall txn gas limit, preventing expensive opcodes from being underpriced.<br>
Gas计量谓词 - 谓词费用的计算与脚本类似，解锁标准控制流的能力，如循环或动态跳转。谓词使用的gas从整个交易(txn)气体限额中扣除，防止低估昂贵的操作码。</p>
</li>
<li>
<p>Revised gas schedule - The vm opcodes are repriced based on a far more accurate benchmarking system. The gas schedule will continue to adjust over time as more features and optimizations are added, and the new pricing framework will make it easier to detect changes and adjust pricing as necessary.<br>
修改后的 gas 时间表 - 虚拟机操作码将根据更准确的基准，测试系统的重定价。随着更多功能和优化的添加，gas 时间表将随着时间的推移不断调整，新的定价框架将使检测变化和按需调整定价变得更加容易。</p>
</li>
<li>
<p>Many new Database optimizations for better API performance.<br>
许多新的数据库优化以获得更好的 API 性能。</p>
</li>
</ul>
<h3 id="工具-tooling">🔧 工具 (Tooling)</h3>
<p><strong><code>forc test</code> highlights</strong><br>
<strong><code>forc test</code>的亮点</strong></p>
<ul>
<li>
<p>You can now use the <code>#[test(should_revert)]</code> attribute to describe a unit test that is expected to revert. This enables testing failure states.<br>
现在你可以使用<code>#[test(should_revert)]</code>属性来描述一个预期会恢复的单元测试。这使得测试失败状态成为可能。</p>
</li>
<li>
<p>Test output now displays the name, file path and line number of failed tests.<br>
测试输出现在显示失败测试的名称、文件路径和行数。</p>
</li>
<li>
<p>Foundations for contract calling in unit tests: When running <code>forc test</code> on a contract project, <code>forc</code> will first build and deploy the contract before building and running the unit tests. This enables early support for contract calling in unit tests.<br>
单元测试中合约调用的基础： 当在一个合约项目上运行<code>forc test</code>时，<code>forc</code>将首先构建和部署合约，然后再构建和运行单元测试。这使得早期单元测试中就支持合约调用。</p>
</li>
</ul>
<p><strong><code>fuelup</code> highlights</strong><br>
<code>fuelup</code>亮点</p>
<ul>
<li>Now supports toolchain overriding with <code>fuel-toolchain.toml</code>. This enables pinning directories and repos to specific <code>fuelup</code> channels and component versions, improving the reproducibility of Fuel projects.<br>
现在支持用<code>fuel-toolchain.toml</code>覆盖工具链。这样就可以把目录和仓库钉在特定的<code>fuelup</code>通道和组件版本上，提高Fuel项目的可重复性。</li>
</ul>
<p><strong><code>forc doc</code> highlights</strong><br>
<code>forc doc</code>的亮点</p>
<ul>
<li>
<p>HTML generated by <code>forc doc</code> now supports improved module navigation.<br>
由<code>forc doc</code>生成的HTML现在支持改进的模块导航。</p>
</li>
<li>
<p>New and improved styling and markdown rendering.<br>
新的和改进的样式和markdown渲染。</p>
</li>
</ul>
<p><strong>Other highlights</strong><br>
其他亮点</p>
<ul>
<li>
<p><code>forc test</code> and <code>forc fmt</code> now support workspaces and will run for each member package.<br>
<code>forc test</code>和<code>forc fmt</code>现在支持工作区，并将为每个成员包运行。</p>
</li>
<li>
<p><code>Forc.toml</code> now supports specifying a <code>salt</code> for contract dependencies.<br>
<code>forc.toml</code>现在支持为合同依赖关系指定`salt'。</p>
</li>
<li>
<p>Added a simple <code>forc tx</code> plugin command for constructing serialized transactions via CLI.<br>
增加了一个简单的<code>forc tx</code>插件命令，用于通过CLI创建序列化交易。</p>
</li>
</ul>
<h3 id="语言服务器-language-server"><strong>🧩</strong> 语言服务器 (Language Server)</h3>
<ul>
<li>
<p>The language server has been optimized to work with multiple projects simultaneously, allowing users to easily switch between projects without interrupting their workflow.<br>
语言服务器已被优化，可以同时与多个项目一起工作，允许用户在不中断工作流程的情况下轻松切换项目。</p>
</li>
<li>
<p>Improved warnings and error diagnostics have been implemented, providing more accurate and detailed information about potential issues.<br>
实施了改进的警告和错误诊断，提供了关于潜在问题的更准确和详细的信息。</p>
</li>
<li>
<p>Code actions have been added for auto-generating an <strong><code>impl</code></strong> block for an <strong><code>abi</code></strong> definition.<br>
增加了代码动作，用于为<code>abi</code><strong>定义自动生成一个</strong><code>impl</code>**区块。</p>
</li>
<li>
<p>Preliminary support for neovim, providing users with even more flexibility in their development environment.<br>
初步支持neovim，为用户的开发环境提供了更多的灵活性。</p>
</li>
</ul>
<h3 id="sdk">SDK</h3>
<ul>
<li>
<p><strong>Rust SDK</strong></p>
<ul>
<li>
<p>Block manipulation, used for testing smart contracts under specific scenarios;<br>
区块操作，用于测试特定场景下的智能合约；</p>
</li>
<li>
<p>Easier testing infrastructure setup: describe your test wallets, contracts, scripts, predicates, and deployments all in a single macro;<br>
更简单的测试基础设施设置：在一个宏中描述你的测试钱包、合约、脚本、谓词和部署；</p>
</li>
<li>
<p>Parsed and human-readable revert errors to make smart contract debugging friendlier;<br>
解析和人类可读的还原错误，使智能合约的调试更加友好；</p>
</li>
<li>
<p>Transaction fees can now be paid using <em>Messages</em>, i.e., bridged assets;<br>
交易费用现在可以使用 <em>Messages</em>，即跨链资产来支付；</p>
</li>
<li>
<p>Predicate data encoder;<br>
谓词数据编码器；</p>
</li>
<li>
<p><em>abigen!</em> macro rework: now supporting multiple contracts, predicates, and scripts all in the same macro invocation;<br>
_abigen!_宏重做：现在支持多个合约、谓词和脚本都在同一个宏调用中；</p>
</li>
<li>
<p>New predicates API;<br>
新的谓词API；</p>
</li>
<li>
<p>Better dependencies importing experience;<br>
更好的依赖关系导入体验；</p>
</li>
</ul>
</li>
<li>
<p><strong>Typescript SDK</strong></p>
<ul>
<li>
<p>Better and more reliable log parsing;<br>
更好、更可靠的日志解析；</p>
</li>
<li>
<p>Overall ergonomics improvements;<br>
全面改善人体工程学；</p>
</li>
<li>
<p>New <em>abi-typegen</em> CLI;<br>
新的_abi-typegen_ CLI.</p>
</li>
<li>
<p>Live documentation rework;<br>
现场文档返工；</p>
</li>
</ul>
</li>
</ul>
<h3 id="前端-front-end"><strong>🔌</strong>  前端 (Front End)</h3>
<ul>
<li><strong>Fuel钱包 (Fuel Wallet)</strong>
<ul>
<li>
<p>Transaction Previews enable a better preview of complex transactions, such as the ones containing multiple operations, like transferring assets to multiple addresses, calling contracts, or doing both simultaneously.<br>
交易预览能够更好地预览复杂的交易，例如包含多种操作的交易，如将资产转移到多个地址，调用合约，或同时进行两种操作。</p>
</li>
<li>
<p>Multi-Account support now is possible to manage multiple addresses inside the Fuel Wallet.<br>
现在可以支持多账户，进而管理燃料钱包内的多个地址。</p>
</li>
<li>
<p>Transaction History lets users see all the transactions made from the Account without leaving the wallet.<br>
交易历史让用户可以在不离开钱包的情况下看到账户的所有交易。</p>
</li>
<li>
<p>New package <em>@fuel-wallet/sdk</em> for Type support. When developing with Fuel Wallet, you can import our TypeScript package to have types of our Wallet and better integration with current projects using Fuel TS SDK.<br>
新的软件包 <em>@fuel-wallet/sdk</em> 用于类型支持。当使用Fuel 钱包开发时，您可以导入我们的TypeScript包，进而拥有我们钱包的类型，并与目前使用Fuel TS SDK的项目更好地整合。</p>
</li>
<li>
<p>Create accounts using Private Key. On specific cases like development, you may need to create a new account using a Private Key not related to the current wallet seed phrase.<br>
使用私钥创建账户。在特殊情况下，如开发，你可能需要使用一个与当前钱包种子短语无关的私钥，来创建一个新的帐户。</p>
</li>
<li>
<p>Add custom assets. Now DApps and Users can add metadata to custom assets on the wallet make possible to have not only the official tokens list from Fuel but customizable assets from third party applications.<br>
添加自定义资产。现在DApps和用户可以添加元数据到钱包上的自定义资产，使得不仅有Fuel官方代币列表，而且有第三方应用的可定制资产。</p>
</li>
</ul>
</li>
</ul>
<h3 id="索引器-indexer">🗃  索引器 (Indexer)</h3>
<ul>
<li>
<p>Combine your compiled Sway contract ABI and GraphQL schema to build indexers that compile to WASM.<br>
结合你编译的ABI和GraphQL模式的Sway合约，建立索引器，编译到WASM。</p>
</li>
<li>
<p>Re-deploy new indexers without re-deploying your contracts.<br>
重新部署新的索引器而不需要重新部署合约。</p>
</li>
<li>
<p>Index as much or as little of FuelVM block information as you'd like.<br>
你可以根据自己的需要，多多少少对FuelVM块的信息进行索引。</p>
</li>
<li>
<p>The <em>forc-index</em> plugin<br>
_forc-index_插件</p>
<ul>
<li>A new Forc plugin used to create, build, and deploy new indexers using a set of simple commands.<br>
一个新的Forc插件，用于使用一组简单的命令创建、构建和部署新的索引器。</li>
</ul>
</li>
<li>
<p>Revamped documentation! (checkout the new Quickstart)<br>
修改了文档! (查看新的快速入门)</p>
</li>
</ul>
<h3 id="应用开发-application-development">应用开发 (Application Development)</h3>
<ul>
<li>
<p>Sway standard library:</p>
<ul>
<li>Support for <a href="http://https//github.com/FuelLabs/sway/blob/master/sway-lib-std/src/low_level_call.sw?ref=fuel-labs.ghost.io">low level calls</a> (ABI unknown at compile time)</li>
<li>New <em>Bytes</em> <a href="http://https//github.com/FuelLabs/sway/blob/master/sway-lib-std/src/bytes.sw?ref=fuel-labs.ghost.io">type</a> to replace vecu8&gt; for untyped / raw data</li>
</ul>
</li>
<li>
<p>Sway标准库：</p>
<ul>
<li>支持<a href="http://https//github.com/FuelLabs/sway/blob/master/sway-lib-std/src/low_level_call.sw?ref=fuel-labs.ghost.io">低级调用</a> (ABI在编译时未知)</li>
<li>新的 <em>Bytes</em><a href="http://https//github.com/FuelLabs/sway/blob/master/sway-lib-std/src/bytes.sw?ref=fuel-labs.ghost.io">类型</a>，取代vecu8&gt;用于未定型/原始数据。</li>
</ul>
</li>
<li>
<p>Sway-libs:</p>
<ul>
<li><a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/fixed_point?ref=fuel-labs.ghost.io">Fixed point</a> and <a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/signed_integers?ref=fuel-labs.ghost.io">signed integer</a> types</li>
<li><a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/ownership?ref=fuel-labs.ghost.io">Ownership</a> library</li>
</ul>
</li>
<li>
<p>Sway-libs：</p>
<ul>
<li><a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/fixed_point?ref=fuel-labs.ghost.io">定点</a> 和 <a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/signed_integers?ref=fuel-labs.ghost.io">有符号整数</a> 类型</li>
<li><a href="http://https//github.com/FuelLabs/sway-libs/tree/master/libs/ownership?ref=fuel-labs.ghost.io">所有权</a>库</li>
</ul>
</li>
</ul>
<h3 id="开发者教育-developer-education">开发者教育 (Developer Education)</h3>
<ul>
<li>We’ve updated and released new resources for developers:<br>
我们为开发者更新并发布了新的资源：</li>
<li><a href="https://fuelbook.fuel.network/master/quickstart/developer-quickstart.html?ref=fuel-labs.ghost.io">Developer Quickstart</a> in Fuel Book (To learn how to build &amp; deploy their first fullstack dapp on Fuel)<br>
Fuel Book中的<a href="https://fuelbook.fuel.network/master/quickstart/developer-quickstart.html?ref=fuel-labs.ghost.io">开发者快速入门</a> (学习如何在Fuel上构建和部署他们的第一个全栈应用程序)</li>
<li><a href="https://forum.fuel.network/?ref=fuel-labs.ghost.io">Discourse</a> to check FAQs, post questions, and get support from community members and Fuel contributors.<br>
<a href="https://forum.fuel.network/?ref=fuel-labs.ghost.io">Discourse</a>查看常见问题，发布问题，并从社区成员和Fuel贡献者那里获得支持。</li>
</ul>
<hr>
<h2 id="开发者体验-for-developers">开发者体验 (For Developers)</h2>
<p>More <code>beta-3</code> documentation is <a href="https://fuelbook.fuel.network/master/networks/beta-3.html?ref=fuel-labs.ghost.io">available here</a>.<br>
更多的 &quot;beta-3 &quot;文件<a href="https://fuelbook.fuel.network/master/networks/beta-3.html?ref=fuel-labs.ghost.io">可在此获得</a>。</p>
<h3 id="水龙头-faucet-2"><strong>🚰 水龙头 (Faucet)</strong></h3>
<ul>
<li>Valid transactions are required to deploy contracts and interact with the network, which require coins. Testnet ETH can be obtained from the <a href="https://faucet-beta-3.fuel.network/?ref=fuel-labs.ghost.io">faucet</a> by completing a captcha.<br>
部署合约和与网络互动需要有效的交易，这需要代币。Testnet ETH可以通过完成验证码从<a href="https://faucet-beta-3.fuel.network/?ref=fuel-labs.ghost.io">faucet</a>获得。</li>
</ul>
<h3 id="钱包wallet"><strong>💰 钱包(Wallet)</strong></h3>
<ul>
<li>A persistent CLI wallet (with binaries for Linux and MacOS) is <a href="https://github.com/FuelLabs/forc-wallet/releases/latest?ref=fuel-labs.ghost.io">available here</a>.<br>
一个持久的CLI钱包（有Linux和MacOS的二进制文件）在<a href="https://github.com/FuelLabs/forc-wallet/releases/latest?ref=fuel-labs.ghost.io">这里提供</a></li>
<li>A web/browser plugin wallet is under active development, <a href="https://github.com/FuelLabs/fuels-wallet?ref=fuel-labs.ghost.io">available here</a>.<br>
一个网络/浏览器插件钱包正在积极开发中，<a href="https://github.com/FuelLabs/fuels-wallet?ref=fuel-labs.ghost.io">可在此获得</a>。</li>
</ul>
<h3 id="️-准备开始-getting-started"><strong>⚡️ 准备开始 (Getting Started)</strong></h3>
<ul>
<li>For an overview of Fuel, take a look at the <a href="https://fuellabs.github.io/fuel-docs/master/index.html?ref=fuel-labs.ghost.io">Fuel documentation</a>.<br>
关于Fuel的概述，请看<a href="https://fuellabs.github.io/fuel-docs/master/index.html?ref=fuel-labs.ghost.io">Fuel文档</a>。</li>
<li>To begin building on Fuel, check out the <a href="https://fuelbook.fuel.network/master/quickstart/developer-quickstart.html?ref=fuel-labs.ghost.io">developer quickstart</a>. This guide provides an end-to-end walkthrough for developers building a dapp on Fuel.<br>
要在Fuel上开始构建，请查看<a href="https://fuelbook.fuel.network/master/quickstart/developer-quickstart.html?ref=fuel-labs.ghost.io">开发者快速入门</a>。本指南为开发者在Fuel上构建dapp提供了一个端到端的指南。</li>
</ul>
<h3 id="智能合约语言-smart-contract-language-sway"><strong>🌴 智能合约语言-Smart Contract Language (Sway)</strong></h3>
<ul>
<li>To begin developing a contract for Fuel, take a look at the <a href="https://fuellabs.github.io/sway/latest?ref=fuel-labs.ghost.io">Sway Book</a>, along with the <a href="https://fuellabs.github.io/fuels-rs/latest/?ref=fuel-labs.ghost.io">Rust SDK</a> and <a href="https://fuellabs.github.io/fuels-ts/?ref=fuel-labs.ghost.io">TypeScript SDK</a>.<br>
要开始在Fuel开发合约，请看一下<a href="https://fuellabs.github.io/sway/latest?ref=fuel-labs.ghost.io">Sway Book</a>，以及<a href="https://fuellabs.github.io/fuels-rs/latest/?ref=fuel-labs.ghost.io">Rust SDK</a>和<a href="https://fuellabs.github.io/fuels-ts/?ref=fuel-labs.ghost.io">TypeScript SDK</a>。</li>
</ul>
<p><em>Note that the <code>beta-3</code> testnet is under active development and may see breaking upgrades and even regenesis events.</em><br>
<em>请注意，&quot;beta-3 &quot;测试网正在积极开发中，可能会出现突破性的升级，甚至是重新创世。</em></p>
<hr>
<h2 id="超越单片链-beyond-monolithic">超越单片链 (Beyond Monolithic)</h2>
<p>Modular blockchain design is quickly becoming the foremost solution to the challenge of scaling blockchains by orders of magnitude. The industry is rapidly moving away from monolithic blockchain designs and towards modular ones.</p>
<p>模块化区块链设计正迅速成为应对数量级扩展区块链挑战的最重要解决方案。该行业正在迅速从单一的区块链设计转向模块化设计。</p>
<p>We believe innovation does not require launching a new L1, but can rather happen at the execution layer. Fuel Labs is leading this charge with <a href="https://www.fuel.network/">Fuel</a>, the fastest modular execution layer.</p>
<p>我们认为创新不需要启动新的 L1，而是可以发生在执行层。 Fuel Labs 以最快的模块化执行层 <a href="https://www.fuel.network/">Fuel</a> 成为行业领先。</p>
<p>Unconstrained by the limitations of the EVM, Fuel approaches scalable execution from a modular-first perspective, allowing for <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">significant improvements over the EVM</a>'s inefficient execution environment and thus enabling maximum decentralization and the highest flexible throughput.</p>
<p>不受 EVM 限制，Fuel 从模块化优先的角度实现可扩展执行，使得 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html"> EVM显着改进</a> 其低效执行环境，从而实现最大程度的去中心化和最高的灵活吞吐量。</p>
<p>With this new movement, we have an opportunity to start fresh and build a fundamentally new generation of blockchains that go <strong>#BeyondMonolithic</strong>.</p>
<p>通过这一新运动，我们有机会重新开始并构建从根本上走向 <strong>#超越单片链</strong> 的新一代区块链。</p>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fuel内幕：23-23年的冬天 (Inside Fuel：Winter 22-23）]]></title>
        <id>https://chainguys.github.io/post/fuel-nei-mu-23-23-nian-de-dong-tian-inside-fuelwinter-22-23/</id>
        <link href="https://chainguys.github.io/post/fuel-nei-mu-23-23-nian-de-dong-tian-inside-fuelwinter-22-23/">
        </link>
        <updated>2023-02-20T14:27:29.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2023/02/Inside-Fuel-Winter-1.png" alt="" loading="lazy"></figure>
<p>The latest news from the fastest modular execution layer.</p>
<p>最快的模块化设计层的最新消息！</p>
<hr>
<p>Welcome to <strong><strong><strong><strong>Inside Fuel</strong></strong></strong></strong>, our review of technical developments and everything happening on the Fuel Network. Take a moment to catch up on all the latest news.<br>
欢迎来到  Fuel内幕，我们对技术发展以及 Fuel 网络上发生的一切进行回顾。欢迎拨冗了解所有最新消息。</p>
<h2 id="fuel新成员-newest-additions-to-fuel">🆕 Fuel新成员 (Newest Additions To Fuel)</h2>
<p>Building the fastest modular execution layer would not be possible without an incredible contributor team. Here are the newest additions to the team this month:</p>
<p>没有令人难以置信的贡献者团队，构建最快的模块化执行层是不可能的。以下是本月团队的最新成员：<br>
<img src="https://fuel-labs.ghost.io/content/images/2023/02/Winter-2023-1.png" alt="" loading="lazy"></p>
<h2 id="新闻-in-the-news">📰 新闻 (In The News)</h2>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2022/06/image.png" alt="" loading="lazy"></figure>
<p>According to the <strong><strong>Rust In Blockchain</strong></strong> <a href="https://rustinblockchain.org/newsletters/rib-newsletter-44/?ref=fuel-labs.ghost.io">monthly review</a>, Fuel is one of the most active Rust-based projects this Winter with <a href="https://github.com/FuelLabs?ref=fuel-labs.ghost.io">Fuel</a>: 548 merged PRs, 406 closed issues, and 256 open issues between December 2022 and January 2023, ranking us in the Top 5 of the most active Rust-based blockchains.</p>
<p>根据 <strong>Rust In Blockchain</strong> <a href="https://rustinblockchain.org/newsletters/rib-newsletter-44/?ref=fuel-labs.ghost.io">月度回顾</a>，Fuel是今年冬天最活跃的基于Rust的项目之一。在2022年12月至2023年1月期间，<a href="https://github.com/FuelLabs?ref=fuel-labs.ghost.io">Fuel</a> 有548个合并的PR，406个关闭的问题，以及256个开放的问题，我们在最活跃的基于Rust的区块链中排名前五。</p>
<h2 id="️-博客和ama-podcasts-amas">🎙️ 博客和AMA (Podcasts &amp; AMAs)</h2>
<p><a href="https://twitter.com/jadler0?ref=fuel-labs.ghost.io">John Adler</a> took part in the <a href="https://www.bankless.com/?ref=fuel-labs.ghost.io"><strong>Bankless</strong></a> Podcast to explain why and how modular blockchains will set the path for the autonomous future.</p>
<p><a href="https://twitter.com/jadler0?ref=fuel-labs.ghost.io">John Adler</a> 参加了 <a href="https://www.bankless.com/?ref=fuel-labs.ghost.io"><strong>Bankless</strong></a> 播客，解释模块化区块链是什么以及如何为自主未来铺平道路。</p>
<figure data-type="image" tabindex="3"><a href="https://youtu.be/ZFbmmWV4kjQ"><img src="" alt="Click to see video 点击查看视频" loading="lazy"></a></figure>
<p>He also joined the <a href="https://open.spotify.com/show/0rGocvZ7oZR6vuy0UHKAON?si=a980953b546743b9&amp;ref=fuel-labs.ghost.io"><strong>OxResearch</strong></a> podcast to explain how Fuel differentiates itself from other rollups.</p>
<p>他还加入了 <a href="https://open.spotify.com/show/0rGocvZ7oZR6vuy0UHKAON?si=a980953b546743b9&amp;ref=fuel-labs.ghost.io"><strong>OxResearch</strong></a> 播客，解释 Fuel 如何与其他汇总区分开来。</p>
<figure data-type="image" tabindex="4"><a href="https://youtu.be/nSMK4jgobNE"><img src="" alt="Click to see video 点击查看视频" loading="lazy"></a></figure>
<h2 id="sway日-sway-day">🌴 Sway日 (Sway Day)</h2>
<p>We hosted the third episode of <strong>Sway Day</strong>, a monthly discussion about all things Sway. This time, we went over all the 2022 development accomplishments and set 2023 expectations with John Adler.</p>
<p>我们主持了<strong>Sway日</strong>的第三部，这是一个关于Sway所有事情的月度讨论。这一次，我们回顾了2022年的所有发展成就，并与John Adler一起设定了2023年的期望。</p>
<p>At the end of 2022, you can remember that:<br>
在2022年年底，你可以记住。</p>
<ul>
<li>
<p>3,168 issues have been filled since the beginning of Sway.<br>
自Sway开始以来，已经覆盖了3168个问题。</p>
</li>
<li>
<p>The <a href="https://github.com/FuelLabs/sway?ref=fuel-labs.ghost.io"><strong>Sway</strong> <strong>repository</strong></a> has grown from 0 to 350+ stars.<br>
<a href="https://github.com/FuelLabs/sway?ref=fuel-labs.ghost.io"><strong>Sway</strong> <strong>repository</strong></a>已经从0发展到350多颗星。</p>
</li>
<li>
<p>Reentrancy analysis is possible directly at the compiler level with Sway:<br>
使用Sway可以直接在编译器层面进行重入分析。</p>
</li>
</ul>
<blockquote>
<p>Reentrancy detection is a critical function in smart contract systems. Reentrancy is the root cause of many DeFi hacks. Let's see how to detect reentrancy in the EVM and comparatively in the FuelVM. The difference is greater than you think 👀</p>
<p>重入检测是智能合约系统中的一个关键功能。重入是许多 DeFi 黑客攻击的根本原因。让我们看看如何在 EVM 和 FuelVM 中检测重入。差距比你想象的要大👀</p>
</blockquote>
<p>1/7<a href="https://t.co/YK1OtBKqJS?ref=fuel-labs.ghost.io">https://t.co/YK1OtBKqJS</a><br>
— Sway (@SwayLang) <a href="https://twitter.com/SwayLang/status/1621210727275970560?ref_src=twsrc%5Etfw&amp;ref=fuel-labs.ghost.io">February 2, 2023</a></p>
<ul>
<li>The <a href="https://github.com/FuelLabs?ref=fuel-labs.ghost.io"><strong>Fuel Labs</strong></a> repository has been in the Top 5 of Rust in Blockchain for an entire year in terms of closed PRs and consistently in the Top 1 in terms of opened/closed issues.</li>
</ul>
<p><a href="https://github.com/FuelLabs?ref=fuel-labs.ghost.io"><strong>Fuel Labs</strong></a>仓库在一整年内，在Rust区块链中的完成PR方面一直处于前5名，在开放/完成问题方面一直处于前1名。</p>
<ul>
<li>
<p>Our well-documented and approachable documentation keeps bringing more and more third-party contributors and builders (currently 25+ projects are building on Fuel).<br>
我们完善的文档和平易近人的文档不断带来越来越多的第三方贡献者和建设者（目前有25个以上的项目在Fuel上构建）。</p>
</li>
<li>
<p>Fuel and Sway have experienced a notable rise in popularity over the past year, marked by a substantial increase in open-source contributions and participation in our Grants Program to build projects on Fuel using Sway.<br>
在过去的一年里，Fuel和Sway的受欢迎程度明显上升，其标志是开源贡献和参与我们的资助计划，来使用Sway在Fuel上构建项目的大幅增加。</p>
</li>
</ul>
<p>In 2023, you can expect:<br>
在2023年，你可以畅想：</p>
<ul>
<li>
<p>A compiler optimization in terms of bytecode size.<br>
在字节码规模方面的编译器优化。</p>
</li>
<li>
<p>More backends will be supported by Sway (i.e. EVM backend is already under development).<br>
更多的后端将被Sway支持（例如EVM后端已经在开发中）。</p>
</li>
<li>
<p>Generic and trait constraints will be improved, abstractions will be a lot more economic and powerful.<br>
通用和特性约束将被改进，抽象将更加经济和强大。</p>
</li>
<li>
<p>More applications to be ported from Solidity/Vyper to Sway.<br>
更多的应用将从Solidity/Vyper移植到Sway。</p>
</li>
<li>
<p>An improvement of the reentrancy analysis at the compiler level.<br>
在编译器层面改进重入分析。</p>
</li>
<li>
<p>Enhanced tooling and language features.<br>
增强的工具和语言特性。</p>
</li>
</ul>
<h2 id="技术更新-technical-updates"><strong>💻 技术更新 (Technical Updates)</strong></h2>
<h2 id="fuelup">Fuelup</h2>
<blockquote>
<p><strong>Fuelup是什么 (What is Fuelup?)</strong></p>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> is the official package manager and multiplexer for <a href="https://fuel.network/">Fuel</a> that installs <strong>The Fuel Toolchain</strong> from the official release channels. It enables you to easily install pre-packaged toolchains, keep them up to date or even create custom toolchains and switch between them.</p>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> 是 <a href="https://fuel.network/">Fuel</a> 的官方包管理器和复用器，它从官方发布渠道安装<strong>Fuel工具链 (The Fuel Toolchain)</strong>。它使您能够轻松安装预打包的工具链，使其保持最新状态，甚至创建自定义工具链并在它们之间切换。</p>
<p>Binaries are executed through Fuelup as proxies which allow for flexibility in the execution of tools.</p>
<p>二进制文件通过 Fuelup 作为代理执行，使得工具的执行变得灵活。</p>
</blockquote>
<p>It simplifies building and maintaining Sway applications with <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> and <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> for common platforms.</p>
<blockquote>
<p>它为一般平台使用 <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> 和 <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> 简化了 Sway 应用的构建和维护。</p>
</blockquote>
<p><a href="https://fuellabs.github.io/fuelup/master/overrides.html?ref=fuel-labs.ghost.io">Support for overriding toolchains</a> added to Fuelup:</p>
<p><a href="https://fuellabs.github.io/fuelup/master/overrides.html?ref=fuel-labs.ghost.io">支持覆盖工具链</a> 添加到 Fuelup：</p>
<p>Developers can specify a specific version of a component in a TOML file (<code>fuel-toolchain.toml</code>) at the root of their Sway project. <code>fuelup</code> will automatically use the specified version when working in that directory.</p>
<p>开发人员可以在其 Sway 项目根目录下的 TOML 文件 (<code>fuel-toolchain.toml</code>) 中指定组件的特定版本。在该目录中工作时，<code>fuelup</code> 将自动使用指定的版本。</p>
<p>The way fuelup handles binaries has also been updated - <code>fuelup</code> now uses a generalized store found in <code>~/.fuelup/store</code> to cache your binary downloads. This means that there will be no more duplicate components of the same versions across different toolchains, and creating a new toolchain with an already downloaded component takes almost no time.</p>
<p>fuelup 处理二进制文件的方式也已更新 - <code>fuelup</code> 现在使用在 <code>~/.fuelup/store</code> 中找到的通用存储来缓存您的二进制下载。这意味着将不再有跨不同工具链的相同版本的重复组件，并且使用已下载的组件创建新工具链几乎不需要时间。</p>
<h2 id="sway应用-sway-applications">Sway应用 (Sway Applications)</h2>
<h4 id="sway应用仓库-the-sway-applications-repository"><a href="https://github.com/FuelLabs/sway-applications?ref=fuel-labs.ghost.io">Sway应用仓库 The Sway Applications Repository</a></h4>
<blockquote>
<p>The purpose of the Sway Applications repository is to demonstrate what can be built with Sway and to promote good development practices.</p>
<p>Sway 应用存储库的目的是演示可以使用 Sway 构建的内容并促进良好的开发实践。</p>
<p>That being said, the repository should be deemed as a living project since the applications will be actively maintained, and thus it is likely that none of them will ever reach their final form!</p>
<p>所以，存储库应该被视为一个活跃的项目，因为应用将得到积极维护，因此它们很可能永远不会达到最终形式！</p>
<p>The repository is young so there isn't anything for anyone to use yet, however, we have lots of applications in development, and lots more planned to be worked on in the near future.</p>
<p>这个存储库还很年轻，所以还没有任何人可以使用，但是，我们有很多应用正在开发中，并且计划在不久的将来进行更多的工作。</p>
<p>So far, the applications are planned to have a smart contract to demonstrate Sway, tests written in Rust to demonstrate the Rust-SDK, and a user interface to demonstrate the use of the Typescript-SDK.</p>
<p>到目前为止，应用计划有一个智能合约来演示 Sway，用 Rust 编写的测试来演示 Rust-SDK，以及一个用户界面来演示 Typescript-SDK 的使用。</p>
<p>This part presents the applications that have gone through some level of scrutiny and have been deemed acceptable to be merged into the master branch.</p>
<p>这部分介绍了经过一定程度审查并被认为可以合并到主分支中的应用。</p>
<p>NOTE<br>
注意</p>
<p>This does not mean that they are complete nor that development has ceased.</p>
<p>这并不意味着它们已经完成，也不意味着开发已经停止。</p>
</blockquote>
<p><a href="https://github.com/FuelLabs/sway-applications/tree/master/fractional-NFT?ref=fuel-labs.ghost.io"><strong>New Fractional NFT application</strong></a>: The Fractional NFT application will lock an NFT into a fractional-NFT(f-NFT) contract and allow users to purchase the newly minted fractionalized tokens. These tokens can then be bought and sold on an AMM or return them to the distribution contract if a buyback is initiated. If all tokens are returned, the admin may unlock the NFT from the f-NFT contract and regain full ownership.</p>
<p><a href="https://github.com/FuelLabs/sway-applications/tree/master/fractional-NFT?ref=fuel-labs.ghost.io"><strong>新的 分割NFT(Fractional) NFT 应用</strong></a>：分割NFT(Fractional) 应用会锁定并将 NFT 转换为分割 NFT（f-NFT）合约，并允许用户购买新铸造的分割代币。然后可以在 AMM 上买卖这些代币，或者如果发起回购，则将它们返还给分发合约。如果返回所有代币，管理员可以从 f-NFT 合约中解锁 NFT 并重新获得完全所有权。</p>
<p><strong><a href="https://github.com/FuelLabs/sway-applications/tree/master/timelock?ref=fuel-labs.ghost.io">New Timelock application</a></strong>: The purpose of a timelock is to restrict the execution of a transaction to some window of time. The transaction usually involves a transfer of funds e.g. via an escrow, vesting schedule, deferred payment, etc. however, it may also be used for valueless execution i.e. calls to a contract to perform computation. The transaction arguments are hashed and stored in a queue awaiting a subsequent call for execution. A user may choose to execute the transaction during the window of time or cancel the transaction by removing it from the queue.</p>
<p><strong><a href="https://github.com/FuelLabs/sway-applications/tree/master/timelock?ref=fuel-labs.ghost.io">新时间锁应用</a></strong>：时间锁的目的是限制交易执行到某个时间窗口。交易通常涉及资金转移，例如通过托管、归属时间表、延期付款等。然而，它也可以用于无价值的执行，即调用合约来执行计算。交易参数被海华并存储在等待后续执行调用的队列中。用户可以选择在时间窗口内执行交易，或者通过将交易从队列中移除，来取消交易。</p>
<h2 id="sway">Sway</h2>
<h3 id="一般更新-general-updates">一般更新 (General Updates)</h3>
<ul>
<li>
<p>Introduction of the Sway reference, a more technical Sway source of documentation;<br>
引入 Sway 参考，这是一种更具技术性的 Sway 文档来源；</p>
</li>
<li>
<p>Introduction of  <code>__smo intrinsic</code>;<br>
<code>__smo intrinsic</code> 的介绍；</p>
</li>
<li>
<p>Start-up of the work on the <strong>EVM</strong> backend;<br>
启动 <strong>EVM</strong> 后端工作；</p>
</li>
<li>
<p>Introduction of <code>configuration-time</code> constants;<br>
引入 <code>configuration-time</code> 常量；</p>
</li>
<li>
<p>Improvement of Error messages for methods called, mismatched ABI methods, improperly used types, and more;<br>
改进了调用方法、不匹配的 ABI 方法、不正确使用的类型等的错误消息；</p>
</li>
<li>
<p>Addition of balance tree and output message effects to CEI analysis;<br>
为CEI分析添加平衡树和输出消息效果；</p>
</li>
<li>
<p>Addition of a better parser recovery for incomplete path expressions/patterns;<br>
为不完整的路径表达式/模式添加更好的解析器恢复；</p>
</li>
</ul>
<p><strong>Bug修复 (Bug fixes):</strong></p>
<ul>
<li>
<p>To trait constraint resolution to allow for the correct trait methods to be found;<br>
特征约束解析将允许找到正确的特征方法；</p>
</li>
<li>
<p>To dead-code-analysis to prevent false reporting dead code;<br>
死码分析，防止误报死码；</p>
</li>
<li>
<p>To prevent stack overflow from infinite type unification;<br>
防止无限类型统一导致堆栈溢出；</p>
</li>
<li>
<p>To type inference to prevent unsound type inference and internal compiler errors;<br>
类型推断以防止不合理的类型推断和内部编译器错误；</p>
</li>
<li>
<p>To calculate missing patterns in nested enum matching in match expressions;<br>
计算匹配表达式中，嵌套枚举匹配中的缺失模式；</p>
</li>
<li>
<p>To block repeated ABI/trait declarations;<br>
阻止重复的 ABI/特征声明；</p>
</li>
<li>
<p>To disable self-parameters for ABI methods;<br>
禁用 ABI 方法的自参数；</p>
</li>
</ul>
<h3 id="标准库更新-standard-library-updates">标准库更新 (Standard Library Updates)</h3>
<ul>
<li>
<p>Introduction of a <strong><code>Byte</code></strong> type;<br>
引入 <strong><code>Byte</code></strong> 类型；</p>
</li>
<li>
<p>Addition of bitwise operations for <code>**u8**</code>, <code>**u16**</code>, <code>**u32**</code>;<br>
为<code>**u8**</code>、<code>**u16**</code>、<code>**u32**</code> 添加了按位运算；</p>
</li>
<li>
<p>Optimization of <code>**U128**</code> and <code>**U256**</code> division;<br>
优化 <code>**U128**</code> 和 <code>**U256**</code> 划分；</p>
</li>
<li>
<p>Remove <code>**std::context::gas**</code> in favor of <code>**std::registers::context_gas()**</code>;<br>
删除<code>**std::context::gas**</code> 以支持<code>**std::registers::context_gas()**</code>；</p>
</li>
<li>
<p>Introduction of low-level call functionality;<br>
引入低级调用功能；<br>
Switch to using the <code>**Bytes**</code> type for the <code>send_message</code> data parameter;<br>
切换到对 <code>send_message</code> 数据参数使用 <code>**Bytes**</code> 类型；</p>
</li>
<li>
<p>Enhance the <code>Result</code> library;<br>
增强 <code>Result</code> 库；</p>
</li>
<li>
<p>Introduction of the <code>Never enum</code>;<br>
引入“永不枚举”；</p>
</li>
</ul>
<h3 id="工具更新-tooling-updates">工具更新 (Tooling Updates)</h3>
<ul>
<li>
<p>Authorization for comma-separated annotations;<br>
逗号分隔注释的授权；</p>
</li>
<li>
<p>Addition of CSS styling, favicon, and  <code>--document-private-items</code> option to <code>forc doc</code>;<br>
添加 CSS 样式、网站图标和 <code>--document-private-items</code> 选项到 <code>forc doc</code>；</p>
</li>
<li>
<p>Introduction of <code>#[test(should_revert)]</code> attribute to indicate a unit test should revert;<br>
引入 <code>#[test(should_revert)]</code> 属性来指示单元测试应该恢复；</p>
</li>
<li>
<p>Allow the LSP to start with partial config;<br>
允许 LSP 以部分配置启动；</p>
</li>
<li>
<p>Addition of LSP option to hide compiler warnings and errors;<br>
添加 LSP 选项来隐藏编译器警告和错误；</p>
</li>
<li>
<p>Addition of the <code>#[payable]</code> annotation to ABI methods;<br>
向 ABI 方法添加<code>#[payable]</code> 注释；</p>
</li>
<li>
<p>Enable the LSP to work with multiple projects simultaneously;<br>
使 LSP 能够同时处理多个项目；</p>
</li>
<li>
<p>Addition of support for calling into contract ABIs from unit tests;<br>
增加了对从单元测试调用合约 ABI 的支持；</p>
</li>
<li>
<p>Addition of an interface for generating links between items &amp; modules in <code>forc doc</code>;<br>
添加一个界面，用于在<code>forc doc</code>中生成项目和模块之间的链接；</p>
</li>
</ul>
<h3 id="forc更新-forc-updates">Forc更新 (Forc Updates)</h3>
<ul>
<li>
<p>Introduction of build flag to print the dead-code-analysis graph;<br>
引入构建标志来打印死代码分析图</p>
</li>
<li>
<p>Introduction of workspace testing feature to forc test;<br>
引入工作区测试功能来进行强制测试；</p>
</li>
<li>
<p>Addition of workspace support for <code>forc clean</code>;<br>
增加了对“forc clean”的工作区支持；</p>
</li>
<li>
<p>Bug fix to prevent an occasional git checkout race when running multiple instances of forc concurrently;<br>
防止在同时运行多个 forc 实例时偶尔出现 git checkout 竞争的错误修复</p>
</li>
<li>
<p>Bug fix to correct executable output for <code>arm64</code> binaries;<br>
更正 <code>arm64</code> 二进制文件的可执行输出的错误修复</p>
</li>
</ul>
<h2 id="fuel核心-fuel-core">Fuel核心 (Fuel Core)</h2>
<ul>
<li>
<p>P2P Block Sync (adds the ability to run syncing full-nodes):</p>
<ul>
<li>Includes the addition of two new services, Synchronization, and Block Importer;</li>
<li>Enables libp2p in the standard fuel-core binary;</li>
</ul>
</li>
<li>
<p>P2P 块同步（添加运行同步全节点的能力）：</p>
<ul>
<li>包括添加两项新服务，同步和区块导入器；</li>
<li>在标准Fuel核心二进制文件中启用 libp2p；</li>
</ul>
</li>
<li>
<p>Ports and Adapters Re-Architecture:</p>
<ul>
<li>Breaks the internals of fuel-core into easily unit-testable and reusable libraries;</li>
<li>Paves the way for alternate implementations such as light clients;</li>
</ul>
</li>
<li>
<p>端口和适配器重新架构：</p>
<ul>
<li>将 fuel-core 的内部分解为易于单元测试和可重用的库；</li>
<li>为轻客户端等替代实现铺平道路；</li>
</ul>
</li>
<li>
<p>Improved DataBase (DB) performance (less cloning);<br>
改进的数据库 (DB) 性能（减少克隆）；</p>
</li>
<li>
<p>Introduction of gas schedule framework &amp; revised gas prices:</p>
<ul>
<li>The new framework allows us to automatically reprice the gas schedule based on benchmark output;</li>
<li>More gas price changes to come as we implement contract state merklization and optimize the DB further;</li>
</ul>
</li>
<li>
<p>引入 gas 计划框架和修改后的 gas 价格：</p>
<ul>
<li>新框架允许我们根据基准输出自动重新定价 gas 时间表；</li>
<li>随着我们实施合约状态 merklization 并进一步优化 DB，将会有更多的 gas 价格变化；</li>
</ul>
</li>
<li>
<p>Gas-metered predicates:</p>
<ul>
<li>Predicates are priced using the standard gas schedule and their execution budget is deducted from the transaction gas limit. Previously they were only priced based on the number of bytes they added to the transaction;</li>
</ul>
</li>
<li>
<p>气体计量谓词：</p>
<ul>
<li>谓词使用标准 gas 计划定价，其执行预算从交易 gas 限额中扣除。以前只根据其添加到交易中的字节数来定价；</li>
</ul>
</li>
<li>
<p>Replacement of the integer logarithm in the VM with Rust std lib impl from 1.67 (Now requires Rust 1.67 to use fuel-core &amp; FueVM);<br>
从 1.67 开始用 Rust std lib impl 替换 VM 中的整数对数（现在需要 Rust 1.67 才能使用 fuel-core 和 FueVM）；</p>
</li>
<li>
<p>Binary MMR for block headers implemented;<br>
实现区块头的二进制 MMR</p>
</li>
<li>
<p>Gas prices are now configurable as part of chainconfig / genesis block;<br>
Gas 价格现在可以作为 chainconfig / genesis 块的一部分进行配置；</p>
</li>
<li>
<p>FuelVM is now a monorepo containing all fuel-based dependencies of the VM;<br>
FuelVM 现在是一个 monorepo，包含 VM 的所有基于Fuel的依赖项；</p>
</li>
<li>
<p>Update of GTF arg constants to match the spec;<br>
更新 GTF arg 常量来匹配规范；</p>
</li>
</ul>
<h2 id="sdks-fuel-ts-fuel-rs">SDKs (Fuel-TS &amp; Fuel-RS)</h2>
<p><strong>Rust SDK:</strong></p>
<ul>
<li>
<p>Easier testing infrastructure setup: describe your test wallets, contracts, scripts, predicates, and deployments all in a single macro;<br>
更简单的测试基础设施设置：在一个宏中描述你的测试钱包、合约、脚本、谓词和部署；</p>
</li>
<li>
<p>Parsed and human-readable revert errors to make smart contract debugging friendlier;<br>
解析和人类可读的恢复错误，使智能合约调试更友好；</p>
</li>
<li>
<p>Transaction fees can now be paid using <code>Messages</code>, i.e., bridged assets;<br>
现在可以使用“消息”（即跨链资产）支付交易费用；</p>
</li>
<li>
<p>Introduction of the Predicate data encoder;<br>
引入谓词数据编码器；</p>
</li>
<li>
<p>Rework of the<code>abigen!</code> macro: now supporting multiple contracts, predicates, and scripts all in the same macro invocation;<br>
<code>abigen!</code> 宏的返工：现在支持同一个宏调用中的多个契约、谓词和脚本；</p>
</li>
<li>
<p>Introduction of the predicates API;<br>
引入谓词 API；</p>
</li>
<li>
<p>Better dependencies importing experience;<br>
更好的依赖项导入体验；</p>
</li>
</ul>
<p><strong>Typescript SDK:</strong></p>
<ul>
<li>
<p>Better and more reliable log parsing;<br>
更好更可靠的日志解析；</p>
</li>
<li>
<p>Overall ergonomics improvements;<br>
整体人体工程学改进；</p>
</li>
<li>
<p>Introduction of <code>abi-typegen</code> CLI;<br>
<code>abi-typegen</code> CLI 的介绍；</p>
</li>
<li>
<p>Live documentation rework;<br>
实时文档返工；</p>
</li>
</ul>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
</feed>