<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chainguys.github.io</id>
    <title>Chainguys&apos;Blog</title>
    <updated>2022-09-26T03:25:21.890Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chainguys.github.io"/>
    <link rel="self" href="https://chainguys.github.io/atom.xml"/>
    <subtitle>A blockchain guy who likes making memes and translating tech articles &lt;/br&gt;All Information NOT Financial Adivice&lt;/br&gt; 一个区块链的老韭菜 &lt;/br&gt;兴趣是做meme和翻译技术文章 &lt;/br&gt;一切均非投资建议</subtitle>
    <logo>https://chainguys.github.io/images/avatar.png</logo>
    <icon>https://chainguys.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Chainguys&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[Altlayer中文材料合集-不断更新中(Altlayer Chinese Materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/altlayer-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-altlayer-chinese-materials-updating/</id>
        <link href="https://chainguys.github.io/post/altlayer-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-altlayer-chinese-materials-updating/">
        </link>
        <updated>2022-09-22T03:31:46.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://cdn-images-1.medium.com/max/980/1*t55z-bhSsloTou3D5JDTAA@2x.png" alt="" loading="lazy"></figure>
<h1 id="blogs">Blogs</h1>
<h2 id="介绍-altlayer第一部分支持定制应用汇总的弹性扩展层-introducing-altlayer-part-ian-elastic-scaling-layer-with-application-tailored-rollups"><a href="https://chainguys.github.io/post/jie-shao-altlayerdi-yi-bu-fen-zhi-chi-ding-zhi-ying-yong-hui-zong-de-dan-xing-kuo-zhan-ceng-introducing-altlayer-part-ian-elastic-scaling-layer-with-application-tailored-rollups/">介绍 AltLayer(第一部分)：支持定制应用汇总的弹性扩展层 Introducing AltLayer (Part I)：An Elastic Scaling Layer with Application-Tailored Rollups</a></h2>
<h2 id="介绍-altlayer第二部分支持定制应用汇总的弹性扩展层-introducing-altlayer-part-iian-elastic-scaling-layer-with-application-tailored-rollups"><a href="https://chainguys.github.io/post/jie-shao-altlayerdi-er-bu-fen-zhi-chi-ding-zhi-ying-yong-hui-zong-de-dan-xing-kuo-zhan-ceng-introducing-altlayer-part-iian-elastic-scaling-layer-with-application-tailored-rollups/">介绍 AltLayer(第二部分)：支持定制应用汇总的弹性扩展层 Introducing AltLayer (Part II)：An Elastic Scaling Layer with Application-Tailored Rollups</a></h2>
<h2 id="nft铸币如何扩展第一部分-nft-minting-made-scalable-part-i"><a href="https://chainguys.github.io/post/nft-zhu-bi-ru-he-kuo-zhan-di-yi-bu-fen-nft-minting-made-scalable-part-i/">NFT铸币如何扩展(第一部分)-NFT Minting Made Scalable (Part I)</a></h2>
<h2 id="nft铸币如何可扩展第二部分-nft-minting-made-scalable-part-ii"><a href="https://chainguys.github.io/post/nft-zhu-bi-ru-he-ke-kuo-zhan-di-er-bu-fen-nft-minting-made-scalable-part-ii">NFT铸币如何可扩展(第二部分)-NFT Minting Made Scalable (Part II)</a></h2>
<h2 id="黑暗森林的社区回合总结前20名已被选出-dark-forests-community-round-concludes-top-20-selected"><a href="https://chainguys.github.io/post/altlayer-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-altlayer-chinese-materials-updating">黑暗森林的社区回合总结，前20名已被选出 (Dark Forest’s Community Round Concludes, Top 20 Selected)</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neon EVM：如何用Remix部署dApps (Neon EVM： How to Deploy dApps Using Remix)]]></title>
        <id>https://chainguys.github.io/post/neon-evmru-he-yong-remix-bu-shu-dapps-neon-evm-how-to-deploy-dapps-using-remix/</id>
        <link href="https://chainguys.github.io/post/neon-evmru-he-yong-remix-bu-shu-dapps-neon-evm-how-to-deploy-dapps-using-remix/">
        </link>
        <updated>2022-09-21T05:12:12.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*EvE99HuqqOmjVqtW0qhJ7A.png" alt="" loading="lazy"></figure>
<hr>
<p>Deploying a decentralized application, or dApp for short, is the final stage of any developer’s process of bringing their vision of a crypto project to reality. Neon’s features as an Ethereum Virtual Machine (EVM) on Solana make it suitable for cheap and simple deployment of dApps written in Solidity. In this article series about dApp deployment, we will illustrate how to deploy a simple “Hello World” dApp using three different deployment tools: Remix, Truffle, and Hardhat.</p>
<p>部署去中心化应用(简称 dApp)，是开发人员将他们的加密项目愿景变为现实的最后阶段。 Neon 作为 Solana 上以太坊虚拟机 (EVM) 的功能，使其适用于以 Solidity 编写的低成本且简单的 dApp 部署。在这个关于 dApp 部署的系列文章中，我们将说明如何使用三种不同的部署工具(Remix、Truffle 和 Hardhat)来部署一个简单的“Hello World”dApp：。</p>
<p>This article will focus on deploying dApps with Remix. <a href="https://remix.ethereum.org/">Remix</a> is an online IDE for Solidity programs and can be used to run code without any local installation. This makes it convenient for deploying dApps from anywhere, so long as the user has the contract source code. However, since it is an online environment, its capacity for supporting large, complex projects is limited. Therefore, Remix should be used primarily for simple code, which can be deployed with ease and requires minimal dependency management.</p>
<p>本文将重点介绍使用 Remix 部署 dApp。 <a href="https://remix.ethereum.org/">Remix</a> 是 Solidity 程序的在线 IDE，无需任何本地安装即可运行代码。这使得从任何地方部署 dApp 变得很方便，只要用户有合约源代码。然而，由于它是一个在线环境，它支持大型、复杂项目的能力是有限的。因此，Remix 主要用于简单的代码，可以轻松部署并且需要最少的依赖管理。</p>
<h2 id="开始之前-before-you-begin">开始之前 Before You Begin</h2>
<p>Before you start the tutorial below, make sure that the following is true:<br>
在开始下面的教程之前，请确保满足以下条件：</p>
<ul>
<li>
<p>MetaMask is installed on your device.<br>
MetaMask 已安装在您的设备上。</p>
</li>
<li>
<p>MetaMask is configured for the Neon EVM.<br>
MetaMask 是为 Neon EVM 配置的。</p>
</li>
</ul>
<p>To install and configure MetaMask, follow <a href="https://docs.neon-labs.org/docs/wallet/metamask_setup#installing-metamask">this guide</a>.<br>
要安装和配置 MetaMask，请参照 <a href="https://docs.neon-labs.org/docs/wallet/metamask_setup#installing-metamask">本指南</a>。</p>
<h2 id="你好世界指南-hello-world-tutorial">“你好，世界”指南 (Hello World Tutorial)</h2>
<p>The following tutorial will explain how to deploy a simple Hello World contract to the Neon Devnet using Remix.</p>
<p>以下教程将解释如何使用 Remix 将简单的 Hello World 合约部署到 Neon Devnet。</p>
<p><strong>Step 1: Create a Simple Smart Contract in Remix</strong><br>
<strong>第 1 步：在 Remix 中创建一个简单的智能合约</strong></p>
<p>To add a smart contract to Remix, go to <a href="https://remix.ethereum.org/">https://remix.ethereum.org</a>, click on the “Create New File” icon, and type “helloWorld.sol” in the field that appears. Then, paste the following code into the empty file and press CTRL+S to save the smart contract file.</p>
<p>要将智能合约添加到 Remix，请转到 <a href="https://remix.ethereum.org/">https://remix.ethereum.org</a>，单击“创建新文件(Create New File)”图标，然后输入“helloWorld.sol ”在出现的字段中。然后，将以下代码粘贴到空文件中，然后按 CTRL+S 保存智能合约文件。</p>
<pre><code>// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.7;

contract helloWorld {

string public text = &quot;Hello World!&quot;;

function callHelloWorld() public view returns (string memory) {

return text;

}

}
</code></pre>
<p>The process should look like in the image below (Fig. 1).<br>
流程如图1所示：</p>
<figure data-type="image" tabindex="2"><img src="https://miro.medium.com/max/1400/0*jhoFdUFpjp--gf3d" alt="" loading="lazy"></figure>
<p>图 1—加载 helloWorld 智能合约 (Fig. 1 — Loading the helloWorld smart contract)</p>
<hr>
<p><strong>Step 2: Compile the Smart Contract</strong><br>
<strong>第 2 步：编译智能合约</strong></p>
<p>Before the smart contract can be deployed, it must first be compiled. To accomplish this, select the “Solidity compiler” tab in the left side menu. The SOLIDITY COMPILER menu will appear.</p>
<p>在部署智能合约之前，必须先对其进行编译。为此，请在左侧菜单中选择“Solidity 编译器(Solidity compiler)”选项卡。将出现 SOLIDITY 编译器菜单。</p>
<p>Click on the Compile helloWorld.sol button to compile the smart contract (Fig. 2).</p>
<p>点击 Compile helloWorld.sol 按钮编译智能合约(图 2)。</p>
<p>If the compilation is successful, a green icon will appear near the Solidity compiler button.</p>
<p>如果编译成功，Solidity 编译器按钮附近会出现一个绿色图标。</p>
<figure data-type="image" tabindex="3"><img src="https://miro.medium.com/max/1400/0*mTH5pyz9-8CjjXR0" alt="" loading="lazy"></figure>
<p>图 2—编译 helloWorld 智能合约 (Fig. 2 — Compiling helloWorld smart contract)</p>
<hr>
<p><strong>Step 3: Connect Remix to MetaMask</strong><br>
<strong>第 3 步：将 Remix 连接到 MetaMask</strong></p>
<p>Interactions between Remix and the Neon EVM are carried out through MetaMask. Before connecting Remix to MetaMask, select “Deploy &amp; run transactions” in the left sidebar menu. The DEPLOY &amp; RUN TRANSACTIONS menu will appear.</p>
<p>Remix 和 Neon EVM 之间的交互是通过 MetaMask 进行的。在将 Remix 连接到 MetaMask 之前，请在左侧边栏菜单中选择“部署并运行交易(Deploy &amp; run transactions)”。 接着部署并运行交易(DEPLOY &amp; RUN TRANSACTIONS)菜单将会出现。</p>
<p>Choose the “Injected Provider — Metamask” environment to connect Remix with an active account in MetaMask (Fig. 3). Make sure that your MetaMask wallet is set to display the Neon Devnet network before you complete this step.</p>
<p>选择“Injected Provider - Metamask”环境以将 Remix 与 MetaMask 中的活动帐户连接起来(图 3)。在完成此步骤之前，请确保您的 MetaMask 钱包已设置为显示 Neon Devnet 网络。</p>
<p>选择“Injected Provider - Metamask”环境，将 Remix 与 MetaMask 中的活动帐户连接起来(图 3)。在完成此步骤之前，请确保您的 MetaMask 钱包已设置为显示 Neon Devnet 网络。</p>
<p>Once you do this, the MetaMask pop-up window should appear. It will display a list of available accounts, if you have multiple accounts. Choose your desired account and click “Next”. Then, click “Connect” to connect to this account.</p>
<p>完成此操作后，应出现 MetaMask 弹出窗口。如果您有多个帐户，它将显示可用帐户列表。选择您想要的帐户，然后单击“下一步(Next)”。然后，单击“连接(Connect)”连接到该帐户。</p>
<figure data-type="image" tabindex="4"><img src="https://miro.medium.com/max/1400/0*zxW9zWG7Y_gEbo3_" alt="" loading="lazy"></figure>
<p>图 3—“Injected Provider” 将 Remix 与 Metamask 中的活动帐户连接起来 (Fig. 3 — “Injected Provider” connects Remix with an active account in Metamask)</p>
<hr>
<p><strong>Step 4: Deploy a Smart Contract on Solana Devnet</strong><br>
<strong>第 4 步：在 Solana Devnet 上部署智能合约</strong></p>
<p>The contract is finally ready to be deployed by clicking the “Deploy” button (Fig. 4).</p>
<p>通过单击“部署(Deploy)”按钮，合约终于可以部署了(图 4)。</p>
<figure data-type="image" tabindex="5"><img src="https://miro.medium.com/max/1400/0*Db3bsSp831RwsoVM" alt="" loading="lazy"></figure>
<p>图 4—部署智能合约 (Fig. 4 — Deploying the smart contract)</p>
<p>MetaMask will send a notification in the form of a pop-up window to confirm the transaction. Click “Confirm” to execute it.</p>
<p>MetaMask 会以弹窗的形式发送通知以确认交易。点击“确认(Confirm)”执行。</p>
<p>If all the above steps have been completed successfully, a green icon will appear near the “Deploy &amp; run transactions” button. The contract’s methods will now be present as buttons under the “Deployed Contracts” section (Fig. 5).</p>
<p>如果上述所有步骤均已成功完成，“部署并运行交易(Deploy &amp; run transactions)”按钮附近将出现一个绿色图标。合约的方法现在将显示为“已部署合约(Deployed Contracts)”部分下的按钮(图 5)。</p>
<figure data-type="image" tabindex="6"><img src="https://miro.medium.com/max/1400/0*Rs0FuXZXZE1km-gy" alt="" loading="lazy"></figure>
<p>图 5—Remix 面板的最终视图 (Fig. 5 — Final view of the Remix panel)</p>
<p>Finally, to obtain the desired ‘Hello World’ functionality, click on the “callHelloWorld” button, which will return the string “Hello World!” (Fig. 6).</p>
<p>最后，要获得所需的“Hello World”功能，请单击“callHelloWorld(callHelloWorld)”按钮，该按钮将返回字符串“Hello World！” (图 6)。</p>
<figure data-type="image" tabindex="7"><img src="https://miro.medium.com/max/1400/0*Jnxs0ejuRk-ArNZ_" alt="" loading="lazy"></figure>
<p>图 6—调用智能合约方法 (Fig. 6 — Calling the smart contract methods)</p>
<h1 id="结论-conclusion">结论 (Conclusion)</h1>
<p>Fortunately for Solidity developers new to using Neon, Remix is a quick and easy solution for contract deployment. It allows this deployment to occur from any device and does not require any specific local installations or settings. However, as it is an online IDE, its security is limited (don’t include any mainnet private keys in your contract code here!) and it will not work well with large projects. Therefore, Remix is best for testing smaller contracts when a quick check is desired.</p>
<p>Remix 是一种快速简便的合约部署解决方案，这对于刚开始使用 Neon 的 Solidity 开发人员来说是幸运的。它允许从任何设备进行部署，并且不需要任何特定的本地安装或设置。然而，由于它是一个在线 IDE，它的安全性是有限的(不要在你的合约代码中包含任何主网私钥！)并且它不适用于大型项目。因此，当需要快速检查时，Remix 最适合测试较小的合约。</p>
<p>Visit our <a href="https://docs.neon-labs.org/docs/developing/deploy_facilities/using_remix">docs</a> for a complete tutorial on using Remix to deploy your dapps.</p>
<p>请访问我们的 <a href="https://docs.neon-labs.org/docs/developing/deploy_facilities/using_remix">文档</a>，获取有关使用 Remix 部署 dapp 的完整教程。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sei中文材料合集-不断更新中(Sei Chinese Materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/sei-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-sei-chinese-materials-updating/</id>
        <link href="https://chainguys.github.io/post/sei-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-sei-chinese-materials-updating/">
        </link>
        <updated>2022-09-19T10:19:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id=""><img src="https://pbs.twimg.com/profile_banners/1515104342906327045/1655924054/1500x500" alt="" loading="lazy"></h2>
<h1 id="blogs">Blogs</h1>
<h2 id="通用目的-vs-特定应用的l1sei处于中间-general-purpose-vs-app-specific-l1ssei-is-in-the-middle"><a href="https://chainguys.github.io/post/tong-yong-mu-de-vs-te-ding-ying-yong-de-l1sei-chu-yu-zhong-jian-general-purpose-vs-app-specific-l1ssei-is-in-the-middle/">通用目的 vs 特定应用的L1：Sei处于中间 (General Purpose vs App Specific L1s：Sei is in the middle)</a></h2>
<h2 id="sei-获得500万美元融资由-multicoin-capital-牵头来构建针对-def-优化的layer1-sei-raises-5m-led-by-multicoin-capital-to-build-the-first-layer-1-blockchain-optimized-for-defi"><a href="https://chainguys.github.io/post/sei-huo-de-500-wan-mei-yuan-rong-zi-you-multicoin-capital-qian-tou-lai-gou-jian-zhen-dui-def-you-hua-de-layer1-sei-raises-dollar5m-led-by-multicoin-capital-to-build-the-first-layer-1-blockchain-optimized-for-defi/">Sei 获得500万美元融资，由 Multicoin Capital 牵头，来构建针对 DeF 优化的layer1 (Sei Raises $5M Led by Multicoin Capital to Build The First Layer 1 Blockchain Optimized for DeFi)</a></h2>
<h2 id="sei-与-axelar-network-合作为-cosmos-上的-defi-启用跨链消息传递-sei-has-partnered-with-axelar-network-to-enable-cross-chain-messaging-for-defi-on-cosmos"><a href="https://chainguys.github.io/post/sei-yu-axelar-network-he-zuo-wei-cosmos-shang-de-defi-qi-yong-kua-lian-xiao-xi-chuan-di-sei-has-partnered-with-axelar-network-to-enable-cross-chain-messaging-for-defi-on-cosmos">Sei 与 Axelar Network 合作，为 Cosmos 上的 DeFi 启用跨链消息传递 (Sei has partnered with Axelar Network to enable cross-chain messaging for DeFi on Cosmos)</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fuel中文材料合集-不断更新中(Fuel Chinese Materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/fuel-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-fuel-chinese-materials-updating/</id>
        <link href="https://chainguys.github.io/post/fuel-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-fuel-chinese-materials-updating/">
        </link>
        <updated>2022-09-18T14:01:56.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/09/Fuel_Trailer_Still_10.jpeg" alt="" loading="lazy"></figure>
<h1 id="项目进展project-update">项目进展(Project Update)</h1>
<h2 id="自2022年夏天以来的项目进展-feul内幕project-update-since-summer-2022-inside-fuel"><a href="https://chainguys.github.io/post/fuel-nei-mu-2022-nian-xia-tian-inside-fuel-summer-2022/">自2022年夏天以来的项目进展-Feul内幕(Project update since Summer 2022-Inside Fuel)</a></h2>
<h2 id="fuel实验室宣布为最快的模块化执行层提供-8000-万美元的支持-fuel-labs-announces-80-million-of-support-for-the-fastest-modular-execution-layer"><a href="https://chainguys.github.io/post/fuel-shi-yan-shi-xuan-bu-wei-zui-kuai-de-mo-kuai-hua-zhi-xing-ceng-ti-gong-8000-wan-mei-yuan-de-zhi-chi-fuel-labs-announces-dollar80-million-of-support-for-the-fastest-modular-execution-layer">Fuel实验室宣布为最快的模块化执行层提供 8000 万美元的支持 (Fuel Labs Announces $80 Million of Support for the Fastest Modular Execution Layer)</a></h2>
<h1 id="2项目简介和关键文章project-introduction-and-key-articals">2.项目简介和关键文章(Project Introduction and key articals)</h1>
<h2 id="介绍beta-1第一个面向开发人员的模块化执行层fuel测试网-introducing-beta-1-the-first-modular-execution-layer-developer-facing-fuel-testnet"><a href="https://chainguys.github.io/post/jie-shao-beta-1di-yi-ge-mian-xiang-kai-fa-ren-yuan-de-mo-kuai-hua-zhi-xing-ceng-fuel-ce-shi-wang-introducing-beta-1-the-first-modular-execution-layer-developer-facing-fuel-testnet">介绍“Beta-1”，第一个面向开发人员的模块化执行层Fuel测试网 (Introducing &quot;Beta-1&quot;, the First Modular Execution Layer Developer-facing Fuel Testnet )</a></h2>
<h2 id="swayswap简介以太坊模块化执行层上的极速-dex-introducing-swayswapa-blazingly-fast-dex-on-ethereums-modular-execution-layer"><a href="https://chainguys.github.io/post/swayswap-jian-jie-yi-tai-fang-mo-kuai-hua-zhi-xing-ceng-shang-de-ji-su-dex-introducing-swayswapa-blazingly-fast-dex-on-ethereums-modular-execution-layer">SwaySwap简介：以太坊模块化执行层上的极速 DEX (Introducing SwaySwap：A Blazingly Fast DEX on Ethereum's Modular Execution Layer)</a></h2>
<h1 id="3其他官方博客翻译-other-official-blogs-translated-into-chinese">3.其他官方博客翻译 (Other Official Blogs Translated into Chinese)</h1>
<p>coming soon</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fuel内幕-2022年的夏天 (Inside Fuel — Summer 2022)]]></title>
        <id>https://chainguys.github.io/post/fuel-nei-mu-2022-nian-xia-tian-inside-fuel-summer-2022/</id>
        <link href="https://chainguys.github.io/post/fuel-nei-mu-2022-nian-xia-tian-inside-fuel-summer-2022/">
        </link>
        <updated>2022-09-15T04:14:49.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/08/blog-banner.png" alt="Inside Fuel — Summer 2022" loading="lazy"></figure>
<blockquote>
<p>Welcome to <strong>Inside Fuel</strong>, our review of the technical developments on the Fuel Network. Take a moment to catch up with all of the latest news.</p>
<p>欢迎来到 <strong>Inside Fuel</strong>，这是我们对 Fuel网络技术发展的回顾。欢迎您拨冗了解所有最新消息。</p>
</blockquote>
<h3 id="fuelup简介-introducing-fuelup">Fuelup简介 (### Introducing Fuelup)</h3>
<hr>
<h4 id="什么是fuelup-what-is-fuelup">什么是Fuelup (What is Fuelup?)</h4>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> is the official package manager and multiplexer for <a href="https://fuel.network/">Fuel</a> that installs <strong>The Fuel Toolchain</strong> from the official release channels. It enables you to easily install pre-packaged toolchains, keep them up to date or even create custom toolchains and switch between them.</p>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> 是 <a href="https://fuel.network/">Fuel</a> 的官方包管理器和复用器，它从官方发布渠道安装<strong>Fuel工具链 (The Fuel Toolchain)</strong>。它使您能够轻松安装预打包的工具链，使其保持最新状态，甚至创建自定义工具链并在它们之间切换。</p>
<p>Binaries are executed through Fuelup as proxies which allow for flexibility in the execution of tools.</p>
<p>二进制文件通过 Fuelup 作为代理执行，使得工具的执行变得灵活。</p>
<p>It simplifies building and maintaining Sway applications with <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> and <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> for common platforms.</p>
<p>它为一般平台使用 <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> 和 <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> 简化了 Sway 应用的构建和维护。</p>
<hr>
<p>Right now, fuelup has the <code>latest</code> toolchain as the only pre-packaged official toolchain. Components in this toolchain are tested for compatibility in our GitHub CI before being updated. For more flexibility at the cost of possible incompatibility or instability, advanced users can specify specific versions of components they want to install and use.</p>
<p>目前，fuelup 拥有 <code>latest</code> 工具链，也是唯一预打包的官方工具链。此工具链中的组件在更新之前在我们的 GitHub CI 中进行了兼容性测试。以可能的不兼容或不稳定为代价，获得了更大的灵活性，高级用户可以指定他们想要安装和使用的特定版本的组件。</p>
<p>Basic usages such as keeping the toolchain or Fuelup up to date can be found <a href="https://fuellabs.github.io/fuelup/master/basics.html">here</a>.</p>
<p>可以在 <a href="https://fuellabs.github.io/fuelup/master/basics.html">此处</a> 找到基本用法，例如使工具链或保持更新 Fuelup 。</p>
<p>For more details on how Fuelup works, as well as usage examples, please refer to <a href="https://fuellabs.github.io/fuelup/master/">The Fuelup Book</a>.</p>
<p>有关 Fuelup 工作原理的更多详细信息以及用例，请参阅 <a href="https://fuellabs.github.io/fuelup/master/">The Fuelup Book</a>。</p>
<blockquote>
<p>Note that Fuelup is still in active development with more features soon to come. Opening issues for any bugs, or suggestions to improve it are welcome.</p>
<p>请注意，Fuelup 仍在积极开发中，即将推出更多功能。欢迎指出任何错误，提出意见或建议。</p>
</blockquote>
<h2 id="swap应用-sway-applications">Swap应用 (Sway Applications)</h2>
<hr>
<h4 id="sway应用存储库-the-sway-applications-repository">Sway应用存储库 (The Sway Applications Repository)</h4>
<p>The purpose of the <a href="https://github.com/FuelLabs/sway-applications">Sway Applications</a> repository is to demonstrate what can be built with <a href="https://github.com/FuelLabs/sway">Sway</a> and to promote good development practices.</p>
<p>Sway 应用存储库的目标是，演示可以使用 Sway 构建什么并激发优秀的开发实践。</p>
<p>That being said, the repository should be deemed as a living project since the applications will be actively maintained, and thus it is likely that none of them will ever reach their final form!</p>
<p>也就是说，存储库应该被视为一个活的项目，因为应用将被积极维护，因此很可能它们都不会达到最终形式/一直更新！</p>
<p>The repository is young so there isn't anything for anyone to use yet, however, we have lots of applications in development, and lots more planned to be worked on in the near future.</p>
<p>存储库还很年轻，所以还没有任何东西可供任何人使用，但是，我们有很多应用正在开发中，并且计划在不久的将来进行更多工作。</p>
<p>So far, the applications are planned to have a smart contract to demonstrate <a href="https://github.com/FuelLabs/sway">Sway</a>, tests written in <a href="https://www.rust-lang.org/">Rust</a> to demonstrate the <a href="https://github.com/FuelLabs/fuels-rs">Rust-SDK</a>, and a user interface to demonstrate the use of the <a href="https://github.com/FuelLabs/fuels-ts">Typescript-SDK</a>.</p>
<p>到目前为止，这些应用计划有一个智能合约来演示 Sway，用 Rust 编写的测试来演示 Rust-SDK，以及一个用户界面来演示 Typescript-SDK 的使用。</p>
<p>That isn't to say that you cannot have a CLI application, a plugin, or any other type of app. Those are simply not in development at the moment.</p>
<p>这并不是说您不能拥有 CLI 应用程序、插件或任何其他类型的应用。只是说这些目前根本不在开发中。</p>
<p>This part presents the applications that have gone through some level of scrutiny and have been deemed acceptable to be merged into the <code>master</code> branch.</p>
<p>这部分介绍了经过一定程度审查并被认为可以合并到主分支中的应用。</p>
<blockquote>
<p><strong>NOTE</strong><br>
This does not mean that they are complete nor that development has ceased.</p>
<p><strong>注意</strong><br>
这并不意味着它们是完整的，也不意味着开发已经停止。</p>
</blockquote>
<hr>
<h3 id="全新的dao智能合约原型-new-dao-smart-contract-prototype">全新的DAO智能合约原型 (New DAO Smart-Contract prototype)</h3>
<hr>
<h4 id="dao是什么-what-is-a-dao">DAO是什么? (What is a DAO?)</h4>
<p>A decentralized autonomous organization (DAO) is akin to an on-chain government where participants are able to cast votes on proposals using some governance token. Various consensus mechanisms may be implemented in order to determine whether a proposal will pass and if that happens then the DAO will begin to operate under the rules of the new proposal.</p>
<p>去中心化自治组织（DAO）类似于链上政府，参与者可以使用一些治理代币对提案进行投票。可以实施各种共识机制来确定提案是否会通过，如果通过，那么 DAO 将开始根据新提案的规则运行。</p>
<hr>
<p>In this implementation, the user deposits governance tokens and receives some number of votes that can be cast and recast on different proposals. They can vote in favor or against proposals and they can transform their votes back into the governance tokens if they wish to withdraw.</p>
<p>在此实施中，用户存入治理代币并获得一定数量的选票，这些选票可以针对不同的提案进行投票和重新投票。他们可以投票赞成或反对提案，如果他们希望撤回，他们可以将投票转换回治理代币。</p>
<ul>
<li>
<p>The smart contract is mostly complete for the basic implementation. There are some issues that need to be worked out but a UI can be started.</p>
<p>智能合约的实施基本完成。有一些问题需要解决，但已经可以启动 UI。</p>
</li>
<li>
<p>The user interface does not currently exist.<br>
用户界面当前还不存在。</p>
</li>
</ul>
<h2 id="更新-updates">更新 (Updates)</h2>
<h3 id="swap更新-sway-updates">Swap更新 (Sway Updates)</h3>
<hr>
<h4 id="什么是swap-what-is-sway">什么是Swap (What is Sway?)</h4>
<p>Sway is a language for writing smart contracts for the <a href="https://github.com/FuelLabs/fuel-specs">Fuel Virtual Machine (FuelVM)</a>, a blazing-fast, blockchain-optimized VM designed for the Fuel blockchain. It is heavily inspired by Rust and aims to bring modern language development and performance to the blockchain ecosystem. Start learning the <a href="https://twitter.com/SwayLang">Sway language</a> today with the <a href="https://fuellabs.github.io/sway/latest/">Sway Book</a> and the <a href="https://www.youtube.com/watch?v=GKNuaFcPaXc">FuelVM Bootcamp</a>.</p>
<p>Sway 是一种用于为 <a href="https://github.com/FuelLabs/fuel-specs">Fuel 虚拟机 (FuelVM)</a> 编写智能合约的语言，这是一种专为 Fuel 区块链设计的超快、区块链优化的虚拟机。它深受 Rust 的启发，旨在为区块链生态系统带来现代语言的开发和性能。现在可以立即开始学习 <a href="https://twitter.com/SwayLang">Sway 语言</a>，使用 <a href="https://fuellabs.github.io/sway/latest/">Sway Book</a> 和 [FuelVM 训练营](https: //www.youtube.com/watch?v=GKNuaFcPaXc)。</p>
<hr>
<h5 id="版本-0145-0210httpsgithubcomfuellabssway-releasestagv0210-已发布-versions-0145-0210-were-released">版本 <a href="https://github.com/FuelLabs/sway/releases/tag/v0.14.5">0.14.5</a> - [0.21.0](https://github.com/FuelLabs/sway /releases/tag/v0.21.0) 已发布 (Versions <a href="https://github.com/FuelLabs/sway/releases/tag/v0.14.5">0.14.5</a> - <a href="https://github.com/FuelLabs/sway/releases/tag/v0.21.0">0.21.0</a> were released)</h5>
<ul>
<li>
<p>The addition of <code>U256</code> , <code>StorageVec</code> and more, in the standard library. These are useful data structures for writing Sway programs! And they also open up the doors for Sway users to implement their own complex data structures;<br>
在标准库中添加了<code>U256</code>、<code>StorageVec</code> 等。这些是编写 Sway 程序的有用数据结构！它们还为 Sway 用户实现自己的复杂数据结构打开了大门；</p>
</li>
<li>
<p>The <code>break</code> and <code>continue</code> statements are now supported;<br>
现在支持 <code>break</code> 和 <code>continue</code> 语句；</p>
</li>
<li>
<p>New <code>swap</code>  method now available on <code>Vec</code>;<br>
新的 <code>swap</code> 方法现在可以在<code>Vec</code> 上使用；</p>
</li>
<li>
<p>New <strong>JSON ABI</strong> format supporting generics has been added;<br>
添加了支持泛型的新 <strong>JSON ABI</strong> 格式；</p>
</li>
<li>
<p>A new minimum forc version field has been added to the <code>Forc.toml</code> manifest;<br>
<code>Forc.toml</code> 清单中添加了一个新的最低强制版本字段；</p>
</li>
<li>
<p>Introducing configuration-time constants in <code>Forc.toml</code>;<br>
在 <code>Forc.toml</code> 中引入配置时间的常量；</p>
</li>
<li>
<p>Bytecode size has been optimized;<br>
字节码大小已优化</p>
</li>
</ul>
<h3 id="fuel核心更新-fuel-core-updates">Fuel核心更新 (Fuel Core Updates)</h3>
<h5 id="版本-091-0101httpsgithubcomfuellabsfuel-core-releasetagv0101-已发布-versions-091-0101-were-released">版本 <a href="https://github.com/FuelLabs/fuel-core/releases/tag/v0.9.1">0.9.1</a> - [0.10.1](https://github.com/FuelLabs/fuel-core/ release/tag/v0.10.1) 已发布 (Versions <a href="https://github.com/FuelLabs/fuel-core/releases/tag/v0.9.1">0.9.1</a> - <a href="https://github.com/FuelLabs/fuel-core/releases/tag/v0.10.1">0.10.1</a> were released)</h5>
<ul>
<li>
<p>New <strong>fuel-debugger CLI</strong> with Automatic Storage Management (ASM) support;<br>
新的 <strong>fuel-debugger CLI</strong> 具有自动存储管理 (ASM) 支持；</p>
</li>
<li>
<p>New VM instructions are now supported:</p>
<ul>
<li><code>GTF</code> - get transaction field;</li>
<li><code>SMO</code> - send message output;</li>
<li><code>JMP/JNE</code> - dynamic jump;</li>
</ul>
<p>现在支持新的 VM 指令：</p>
<ul>
<li><code>GTF</code> - 获取交易字段；</li>
<li><code>SMO</code> - 发送消息输出；</li>
<li><code>JMP/JNE</code> - 动态跳转；</li>
</ul>
</li>
<li>
<p>The Produce Block API is now usable for SDK tests;<br>
Produce Block API 现在可用于 SDK 测试；</p>
</li>
<li>
<p>Integrated Ethereum contract event handling into fuel-core;<br>
将以太坊合约事件处理集成到 fuel-core；</p>
</li>
<li>
<p>Message inputs and outputs in Fuel Core:</p>
<ul>
<li>Message receiving in the Relayer from L1;</li>
<li>TxPool validation of Message inputs;</li>
<li>Block execution message spending validation;</li>
<li>GraphQL APIs for querying available messages to include in a transaction;</li>
</ul>
<p>Fuel Core 中的消息输入和输出：</p>
<ul>
<li>在中继器中从 L1 接收消息；</li>
<li>消息输入的 TxPool 验证；</li>
<li>区块执行消息花费验证；</li>
<li>用于查询包含在交易中的可用消息的 GraphQL API；</li>
</ul>
</li>
<li>
<p>Breaking Transaction format changes:</p>
<ul>
<li>Added TxPointer;</li>
<li>Removed byte_price;</li>
<li>Removed static contracts;</li>
</ul>
<p>打破交易格式的变化：</p>
<ul>
<li>添加了 TxPointer；</li>
<li>删除了 byte_price；</li>
<li>删除了静态合约；</li>
</ul>
</li>
<li>
<p>Integrated latest VM Changes into fuel-core v0.10.x node:</p>
<ul>
<li>Previously implemented opcodes such as <code>JMP</code> &amp; <code>GTF</code> are now available for use in the node;</li>
<li>New <code>TIME</code> opcode to fetch the timestamp on the current block header;</li>
</ul>
<p>将最新的 VM 更改集成到fuel-core v0.10.x 节点中：</p>
<ul>
<li>以前实现的操作码，例如<code>JMP</code>和<code>GTF</code>现在可以在节点中使用；</li>
<li>新的 TIME 操作码来获取当前区块头的时间戳；</li>
</ul>
</li>
</ul>
<h3 id="fuel-rs-rust-sdk-更新-fuel-rs-rust-sdk-updates">Fuel-rs (Rust SDK) 更新 Fuel-rs (Rust SDK) Updates</h3>
<h5 id="版本-0170-0210httpsgithubcomfuellabsfuels-rs-releasetagv0210-已发布-versions-0170-0210-were-released">版本 <a href="https://github.com/FuelLabs/fuels-rs/releases/tag/v0.17.0">0.17.0</a> - [0.21.0](https://github.com/FuelLabs/fuels-rs/ release/tag/v0.21.0) 已发布 (Versions <a href="https://github.com/FuelLabs/fuels-rs/releases/tag/v0.17.0">0.17.0</a> - <a href="https://github.com/FuelLabs/fuels-rs/releases/tag/v0.21.0">0.21.0</a> were released)</h5>
<ul>
<li>
<p>You can now bundle many contract calls into one, with <code>ContractMultiCall</code>, which has been officially released;<br>
现在可以将多个合约调用捆绑为一个，使用正式发布的<code>ContractMultiCall</code>；</p>
</li>
<li>
<p>New feature to directly convert raw bytes into contract-defined types;<br>
直接将原始字节转换为合约定义类型的新功能；</p>
</li>
<li>
<p>New API for manual and automatic storage initialization;<br>
用于手动和自动存储初始化的新 API；</p>
</li>
<li>
<p>New API to manipulate block height, very useful for testing specific conditions between contract calls;<br>
操作区块高度的新 API，对于测试合约调用之间的特定条件非常有用；</p>
</li>
<li>
<p>New API to fetch the contract ID and the wallet used to create a contract instance;<br>
用于获取合约 ID 和用于创建合约实例的钱包新 API；</p>
</li>
<li>
<p><code>Bech32</code> support: all of the internal addresses (<code>ContractId</code>, <code>Address</code>) are now represented as <code>Bech32</code>;<br>
<code>Bech32</code> 支持：所有内部地址（<code>ContractId</code>、<code>Address</code>）现在都表示为``Bech32`；</p>
</li>
<li>
<p>You can now create test wallets with multiple custom assets;<br>
您现在可以创建具有多个自定义资产的测试钱包；</p>
</li>
<li>
<p>You can now generate test nodes with configurable consensus parameters;<br>
您现在可以生成具有可配置的共识参数的测试节点；</p>
</li>
<li>
<p>You can now change the underlying wallet of a contract instance with the new contract API <code>._with_wallet()</code>;<br>
您现在可以使用新的合约 API <code>._with_wallet()</code> 更改合约实例的对应钱包；</p>
</li>
<li>
<p><code>Wallet.get_coins</code> improvement: now you can specify with assets to be returned;<br>
<code>Wallet.get_coins</code> 改进：现在您可以指定要退回的资产；</p>
</li>
<li>
<p>Support for the new <strong>JSON ABI</strong> — generics, <code>Vec</code>, <code>Option</code>, and <code>Result</code> support coming up!<br>
支持新的 <strong>JSON ABI</strong> - 泛型、<code>Vec</code>、<code>Option</code> 和 <code>Result</code> 支持即将推出！</p>
</li>
<li>
<p><code>Wallet</code> is now <code>Wallet</code> for read-only operations that don’t need a private key and <code>WalletUnlocked</code> for read-write operations. This reduces the scope of the default wallet and reduces security risks;</p>
</li>
</ul>
<p><code>Wallet</code> 现在是 <code>Wallet</code> 用于不需要私钥的只读操作和 <code>WalletUnlocked</code> 用于读写操作。这减少了默认钱包的范围，降低了安全风险；</p>
<ul>
<li>Predicates are now supported;<br>
现在支持谓词；</li>
</ul>
<p>For more details, check out the <strong>Rust SDK Book</strong> <a href="https://fuellabs.github.io/fuels-rs/latest/">here</a>.</p>
<p>有关更多详细信息，请查看 <strong>Rust SDK 手册</strong> <a href="https://fuellabs.github.io/fuels-rs/latest/">此处</a>。</p>
<h6 id="fuel-ts-typescript-sdk更新-fuel-ts-typescript-sdk-updates">Fuel-ts (Typescript SDK)更新 Fuel-ts (Typescript SDK) Updates</h6>
<h5 id="版本-0145-0210httpsgithubcomfuellabssway-releasestagv0210-已发布-versions-070-0120-were-released">版本 <a href="https://github.com/FuelLabs/sway/releases/tag/v0.14.5">0.14.5</a> - [0.21.0](https://github.com/FuelLabs/sway /releases/tag/v0.21.0) 已发布 (Versions <a href="https://github.com/FuelLabs/fuels-ts/releases/tag/0.7.0">0.7.0</a> - <a href="https://github.com/FuelLabs/fuels-ts/releases/tag/0.12.0">0.12.0</a> were released)</h5>
<hr>
<ul>
<li>
<p>New way to pass <code>amount</code>/<code>assetId</code> overrides with the new <code>forward</code>;<br>
传递<code>amount</code>/<code>assetId</code> 的新方法被新的<code>forward</code>覆盖；</p>
</li>
<li>
<p>Added contract slots on contract deployments;<br>
在合约部署中添加合约槽；</p>
</li>
<li>
<p>New contract getter on the <code>Provider</code>;<br>
<code>Provider</code> 上的新合约获取器；</p>
</li>
<li>
<p>New balances API have been added;<br>
添加了新的余额 API；</p>
</li>
<li>
<p>New multicall (contract calls bundling) API;<br>
新的多调用（合约调用捆绑）API；</p>
</li>
<li>
<p>Full predicates support;<br>
完整的谓词/判定支持；</p>
</li>
<li>
<p>You can now set the gas for each call;<br>
您现在可以为每次调用设置gas；</p>
</li>
<li>
<p><code>Provider</code> now integrated with query chain information;<br>
<code>Provider</code> 现在与查询链信息集成；</p>
</li>
<li>
<p>Support for generic custom types;<br>
支持通用自定义类型；</p>
</li>
<li>
<p>Support for <code>Option</code> and <code>Result</code>;<br>
支持“选项”和“结果”；</p>
</li>
<li>
<p>Support for the new <strong>JSON ABI</strong> — <code>Vec</code> support is coming up!<br>
支持新的 <strong>JSON ABI</strong> - <code>Vec</code> 支持即将推出！</p>
</li>
<li>
<p>Fixes to the required amount of coins for contract calls;<br>
修正了合约调用所需的代币数量；</p>
</li>
<li>
<p>Automatic storage initialization upon contract deployment;<br>
合约部署时自动初始化存储；</p>
</li>
<li>
<p>Better interface for transaction fee payment;<br>
更好的交易费用支付界面；</p>
</li>
</ul>
<hr>
<h1 id="今天就开始在fuel上构建-start-building-on-fuel-today">今天就开始在Fuel上构建! (Start building on Fuel today)</h1>
<h2 id="使用fuel构建可用的开发资源-developer-resources-for-building-with-fuel">使用Fuel构建可用的开发资源 (Developer Resources for Building with Fuel)</h2>
<ul>
<li>A step-by-step guide to building a full-stack dapp on Fuel can be found <a href="https://github.com/camiinthisthang/fullstack-fuel/blob/main/README.md">here</a><br>
<a href="https://github.com/camiinthisthang/fullstack-fuel/blob/main/README.md">这里</a> 可以找到在 Fuel 上构建全栈 dapp 的分步指南</li>
<li>The <strong>Fuel Book</strong> can be found <a href="https://fuellabs.github.io/fuel-docs/master/index.html">here</a>. It contains everything you need to know about Fuel, from its modular design to its key features.<br>
<strong>Fuel Book</strong> 可以在 <a href="https://fuellabs.github.io/fuel-docs/master/index.html">这里</a> 找到。它包含您需要了解的有关 Fuel 的所有信息，从模块化设计到主要功能。</li>
<li>The <strong>Sway Book</strong> can be found <a href="https://fuellabs.github.io/sway/v0.24.1/">here</a>.<br>
<strong>Sway Book</strong> 可以在 <a href="https://fuellabs.github.io/sway/v0.24.1/">这里</a> 找到。</li>
</ul>
<h2 id="介绍fuel补助计划-introducing-the-fuel-grants-program">介绍Fuel补助计划 (Introducing the Fuel Grants Program)</h2>
<p>The <strong>Fuel Grants program</strong> is a way to support projects building on Fuel. Currently, we are offering generous grants ranging from <strong>10,000 - 150,000 USD</strong> to developers, creators, and new or existing projects to come build on the world's fastest modular execution layer. We welcome all builders with a passion for decentralization, web3, and building the future. We envision an autonomous future, where systems are built to power the next generation of human coordination and cooperation.</p>
<p><strong>Fuel补助计划</strong>是支持以 Fuel 为基础的项目的一种方式。目前，我们向开发人员、创作者以及新的或现有的项目提供 <strong>10,000 - 150,000 美元</strong> 的慷慨赠款，来帮助在世界上最快的模块化执行层上构建。我们欢迎所有对去中心化、web3 和建设未来充满热情的建设者。我们设想一个自治的未来，建立系统来推动下一代人类协调与合作。</p>
<p>Building on Fuel means breaking free from the constraints of monolithic blockchains that have held us back.</p>
<p>以 Fuel 为基础意味着摆脱阻碍我们前进的单一区块链的限制。</p>
<p>To get started applying for a grant, fill out <a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">this form</a>. We’re incredibly excited to launch this program, see more people building on Fuel, and taking the modular pill. If you have any additional questions please feel free to reach out to <a href="mailto:grants@fuel.sh">grants@fuel.sh</a>.</p>
<p>要开始申请资助，请填写 <a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">此表格</a>。我们非常高兴能够启动这个计划，看到更多的人在 Fuel 上构建，并使用模块化服务。如果您有任何其他问题，请随时与 <a href="mailto:grants@fuel.sh">grants@fuel.sh</a> 联系。</p>
<hr>
<h2 id="其他-other">其他 (Other)</h2>
<h3 id="播客和推特空间-podcasts-and-twitter-spaces">播客和推特空间 (Podcasts and Twitter Spaces)</h3>
<h4 id="swayswap-ama">SwaySwap AMA</h4>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2022/09/SwaySwapAMA.png" alt="" loading="lazy"></figure>
<p>In case you missed it, discover <a href="https://fuellabs.github.io/swayswap/"><strong>SwaySwap</strong></a><strong>,</strong> a blazingly fast <strong>DEX</strong> built on the <strong>fastest modular execution layer</strong> with the developers that built it during the <a href="https://twitter.com/i/spaces/1YpJkZZjevEGj">Twitter Space:</a> <em><a href="https://twitter.com/i/spaces/1YpJkZZjevEGj">SwaySwap AMA</a>.</em></p>
<p>怕您错过了，现在请看 <a href="https://fuellabs.github.io/swaywap/"><strong>SwaySwap</strong></a><strong>,</strong> 一个建立在<strong>最快的模块化执行层之上的极快的DEX</strong>  并在 <a href="https://twitter.com/i/spaces/1YpJkZZjevEGj">Twitter Space:</a> <em><a href="https://twitter.com/i/spaces/1YpJkZZjevEGj">SwaySwap AMA</a> 期间与构建它的开发人员交流.</em></p>
<h3 id="新闻-in-the-news">新闻 (In the News)</h3>
<h4 id="️英文内容-english-content">☕ ️英文内容 (English Content)</h4>
<ul>
<li>
<p><strong><a href="https://volt.capital/">Volt Capital</a></strong>:</p>
<ul>
<li><a href="https://volt.capital/blog/modular-blockchains">The Blockchain Modularity report</a></li>
<li>Twitter threads by <a href="https://twitter.com/soona/status/1545177164169023488">Soona</a> and <a href="https://twitter.com/0xAlec/status/1545176941002575872">Alec</a></li>
</ul>
<p><strong><a href="https://volt.capital/">伏特资本</a></strong>:</p>
<ul>
<li><a href="https://volt.capital/blog/modular-blockchains">区块链模块化报告</a></li>
<li><a href="https://twitter.com/soona/status/1545177164169023488">Soona</a> 和 <a href="https://twitter.com/0xAlec/status/1545176941002575872">Alec</a> 的 Twitter 推文</li>
</ul>
</li>
<li>
<p><strong><a href="https://messari.io/research">Messari</a></strong>:</p>
<ul>
<li>Rollups: <a href="https://twitter.com/MessariCrypto/status/1546886351467020288">Execution Through the Modular Lens</a> report from <a href="https://twitter.com/eshita/status/1546911451125649408">Eshita</a></li>
</ul>
</li>
<li>
<p><strong><a href="https://messari.io/research">Messari</a></strong>：<br>
-Rollups：<a href="https://twitter.com/MessariCrypto/status/1546886351467020288">通过模块化镜头执行</a>来自<a href="https://twitter.com/eshita/status/1546911451125649408">Eshita的报告</a></p>
</li>
<li>
<p><strong><a href="https://delphidigital.io/">Delphi Digital</a></strong>:</p>
<ul>
<li><a href="https://twitter.com/Delphi_Digital/status/1551653384972865537">Is Fuel the best Modular Execution Layer?</a> report from <a href="https://twitter.com/CannnGurel">Can Gurel</a></li>
</ul>
<p><strong><a href="https://delphidigital.io/">德尔福数码</a></strong>:</p>
<ul>
<li><a href="https://twitter.com/Delphi_Digital/status/1551653384972865537">Fuel 是最好的模块化执行层吗？</a> 来自 <a href="https://twitter.com/CannnGurel">Can Gurel</a> 的报告</li>
</ul>
</li>
</ul>
<h4 id="土耳其语内容-turkish-content">🇹🇷 土耳其语内容 (Turkish Content)</h4>
<ul>
<li>
<p><strong><a href="https://lytera.io/">Lytera</a></strong>:</p>
<ul>
<li><a href="https://twitter.com/lyteraio/status/1563217274395246592">A New Look at the Execution Layer</a>: Fuel Network report from <a href="https://twitter.com/caner_eth">Caner Budak</a></li>
</ul>
<p><strong><a href="https://lytera.io/">Lytera</a></strong>：</p>
<ul>
<li><a href="https://twitter.com/lyteraio/status/1563217274395246592">执行层的新视角</a>：来自 <a href="https://twitter.com/caner_eth">Caner Budak</a> 的燃料网络报告</li>
</ul>
</li>
</ul>
<h4 id="俄语内容-russian-content">🇷🇺 俄语内容 (Russian Content)</h4>
<ul>
<li><a href="https://medium.com/@balamosha/%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-e7dca0630332">About the Fuel Project</a> report from <a href="https://twitter.com/0xbalamosha">Aryakeri</a> and <a href="https://twitter.com/ntwrkrcrpt">Netwrkcrypt</a><br>
<a href="https://medium.com/@balamosha/%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-e7dca0630332">关于燃料项目</a> 来自 <a href="https://twitter.com/0xbalamosha">Aryakeri</a> 和 <a href="https://twitter.com/ntwrkrcrpt">Netwrkcrypt</a> 的报告</li>
</ul>
<hr>
<figure data-type="image" tabindex="3"><img src="https://fuel-labs.ghost.io/content/images/2022/06/image.png" alt="" loading="lazy"></figure>
<p>According to the <strong>Rust In Blockchain</strong> monthly review (<a href="https://rustinblockchain.org/newsletters/rib-newsletter-38/">July</a> and <a href="https://rustinblockchain.org/newsletters/rib-newsletter-39/">August</a>), Fuel is still one of the most active Rust-based projects this summer. Fuel ranked 5th in July and August 2022, right behind Sui, Aptos, Parity, and Solana, with 225 merged PRs, 203 closed issues, and 142 open issues in July and 253 merged PRs, 193 closed issues, and 139 open issues in August.</p>
<p>根据<strong>Rust In Blockchain</strong> 月度审查（<a href="https://rustinblockchain.org/newsletters/rib-newsletter-38/">7 月</a> 和[8 月](https://rustinblockchain.org/newsletters/rib -newsletter-39/))，Fuel 仍然是今年夏天最活跃的基于 Rust 的项目之一。 Fuel 在 7 月和 2022 年 8 月排名第五，紧随 Sui、Aptos、Parity 和 Solana，7 月份有 225 个合并 PR、203 个已关闭问题和 142 个未解决问题，8 月份有 253 个合并 PR、193 个已关闭问题和 139 个未解决问题.</p>
<hr>
<h3 id="公开展示-public-appearances">公开展示 (Public Appearances)</h3>
<h3 id="ethcc">🇫🇷 EthCC</h3>
<p>We had the opportunity to give several talks during the EthCC in Paris (July 19-21). In case you missed them, here are the replay links below:</p>
<ul>
<li><strong><a href="https://twitter.com/emilyaherbert">Emily Herbert</a></strong>: <em><a href="https://www.youtube.com/watch?v=Zh44cEQDoLc&amp;list=PLUt355rCCNrSL-n6G7vxavNv7AKdrdfkS&amp;t=3s">Developing Smart Contracts in Sway;</a></em></li>
<li><strong><a href="https://twitter.com/jadler0">John Adler</a></strong>: <em><a href="https://www.youtube.com/watch?v=Zq8uwpX39oI">&quot;Always Has Been&quot; (or, &quot;Wait, It's All Resource Pricing?&quot; Part 2)</a></em> in continuation of last year's talk;</li>
<li><strong><a href="https://twitter.com/awleckss">Alex Hansen</a></strong>: <em><a href="https://www.youtube.com/watch?v=Zq8uwpX39oI">A year's progress in Sway, the Smart Contract language for the Fuel VM</a>;</em></li>
</ul>
<p>我们有机会在巴黎的 EthCC（7 月 19 日至 21 日）期间进行了几次会谈。如果您错过了它们，以下是重播链接：</p>
<ul>
<li><strong><a href="https://twitter.com/emilyaherbert">Emily Herbert</a></strong>: <em>[在 Sway 中开发智能合约；](https://www.youtube.com/watch?v=Zh44cEQDoLc&amp;list=PLUt355rCCNrSL-n6G7vxavNv7AKdrdfkS&amp;t =3s)</em></li>
<li><strong><a href="https://twitter.com/jadler0">John Adler</a></strong>：<em><a href="https://www.youtube.com/watch?v=Zq8uwpX39oI">“一直都是”（或者，“等等，这都是资源定价？”第 2 部分）</a></em> 继续去年的谈话；</li>
<li><strong><a href="https://twitter.com/awleckss">Alex Hansen</a></strong>：<em>[Sway 一年的进展，Fuel VM 的智能合约语言](https://www.youtube.com/watch ?v=Zq8uwpX39oI);</em></li>
</ul>
<h3 id="柏林区块链周和-ethberlin-berlin-blockchain-week-ethberlin">🇩🇪 柏林区块链周和 EthBerlin (Berlin Blockchain week &amp; EthBerlin)</h3>
<p>Some of the Fuel contributors will be attending the <a href="https://blockchainweek.berlin/"><strong>Berlin Blockchain week</strong></a> (Sept 12-18) and <a href="https://ethberlin.ooo/"><strong>EthBerlin</strong></a> (Sept 16-18). Come say hi and grab some swag if you're around.</p>
<p>一些 Fuel 贡献者将参加 <a href="https://blockchainweek.berlin/"><strong>柏林区块链周</strong></a>（9 月 12 日至 18 日）和 [<strong>EthBerlin</strong>](https://ethberlin.ooo /)（9 月 16 日至 18 日）。如果你在附近，来打个招呼，拿些东西！</p>
<figure data-type="image" tabindex="4"><img src="https://fuel-labs.ghost.io/content/images/2022/09/image-1.png" alt="" loading="lazy"></figure>
<hr>
<h2 id="关注我们-follow-us">关注我们 (Follow us)</h2>
<p>If you don’t want to miss any update on the Fuel Network, simply follow us and activate the notification bell:</p>
<p>如果您不想错过 Fuel Network 的任何更新，只需关注我们并激活通知铃！</p>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us">关于我们 (About us)</h2>
<p>Fuel is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the FuelVM for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p>Fuel 是模块化区块链堆栈的<strong>最快的执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 FuelVM 是因为它的<strong>卓越的开发人员体验</strong>以及<strong>超越 EVM</strong> 限制的能力。</p>
<h2 id="加入我们-join-us">加入我们 (Join us)</h2>
<p>If you want to join us in this journey, here are our <a href="https://jobs.lever.co/fuellabs">current job openings</a>.</p>
<p>如果您想加入我们的旅程，这里是我们的<a href="https://jobs.lever.co/fuellabs">当前职位空缺</a>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Orderly网络中文材料合集-不断更新中(Orderly Network Chinese Materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/orderly/</id>
        <link href="https://chainguys.github.io/post/orderly/">
        </link>
        <updated>2022-09-13T10:15:02.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*ZT5nhNYmVwErdrZrO81EIA.png" alt="" loading="lazy"></figure>
<h1 id="blogs">Blogs</h1>
<h2 id="orderly-如何构建迄今为止最先进的-defi-基础设施-how-orderly-is-building-the-most-advanced-defi-infrastructure-to-date"><a href="https://chainguys.github.io/post/orderly-ru-he-gou-jian-qi-jin-wei-zhi-zui-xian-jin-de-defi-ji-chu-she-shi-how-orderly-is-building-the-most-advanced-defi-infrastructure-to-date">Orderly 如何构建迄今为止最先进的 DeFi 基础设施 (How Orderly is building the most advanced DeFi infrastructure to date)</a></h2>
<h2 id="orderly网络筹集2000万美元用于构建-defi-基础设施为基于-near-构建的dapp赋能-orderly-network-raises-us20-million-to-build-defi-infrastructure-to-empower-dapps-built-on-near"><a href="https://chainguys.github.io/orderly-wang-luo-chou-ji-2000-wan-mei-yuan-yong-yu-gou-jian-defi-ji-chu-she-shi-wei-ji-yu-near-gou-jian-de-dapp-fu-neng-orderly-network-raises-usdollar20-million-to-build-defi-infrastructure-to-empower-dapps-built-on-near">Orderly网络筹集2000万美元用于构建 DeFi 基础设施，为基于 NEAR 构建的dApp赋能 (Orderly Network Raises US$20 Million to Build DeFi Infrastructure to Empower dApps Built on NEAR)</a></h2>
<h2 id="orderly网络简介an-introduction-to-orderly-network"><a href="https://chainguys.github.io/post/orderly-wang-luo-jian-jie-an-introduction-to-orderly-network">Orderly网络简介(An introduction to Orderly Network)</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[黑暗森林的社区回合总结，前20名已被选出 (Dark Forest’s Community Round Concludes, Top 20 Selected)]]></title>
        <id>https://chainguys.github.io/post/hei-an-sen-lin-de-she-qu-hui-he-zong-jie-qian-20-ming-yi-bei-xuan-chu-dark-forests-community-round-concludes-top-20-selected/</id>
        <link href="https://chainguys.github.io/post/hei-an-sen-lin-de-she-qu-hui-he-zong-jie-qian-20-ming-yi-bei-xuan-chu-dark-forests-community-round-concludes-top-20-selected/">
        </link>
        <updated>2022-09-13T02:24:38.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/0*fqtz_rajICDvqn8O" alt="" loading="lazy"></figure>
<hr>
<ul>
<li>
<p><strong><em>Game-layer alone seamlessly handles over 94K txns per day; txns equivalent to over 90% of daily txns on Optimism and over 60% of daily txns on Arbitrum.</em></strong><br>
<strong><em>游戏层每天可以无缝处理超过 94K 的交易；交易量相当于 Optimism 每日交易量的 90% 以上和 Arbitrum 每日交易量的 60% 以上。</em></strong></p>
</li>
<li>
<p><strong><em>All metrics point to a successful game launch!</em></strong><br>
<strong><em>所有指标都表明游戏发布成功！</em></strong></p>
</li>
</ul>
<p>Dark Forest’s community round wrapped up on a great note as Alters everywhere rallied to embark upon a favourite weekend hobby — space conquest! A huge thank you to all those who signed up and made the time to play; we value your participation and your contributions as an early community member.</p>
<p>黑暗森林的社区活动以精彩的方式结束，各地的 Alters 齐心协力开展周末最喜欢的爱好——太空征服！非常感谢所有注册并抽出时间玩的人；我们重视您作为早期社区成员的参与和贡献。</p>
<p>Let’s take a look at how it went. The community round welcomed 300+ players, around 100 of whom were able to strategise, stay the course and gather up great scores. The highest scorer recorded 747,777,777. The highest number of transactions from a single player was 15,324 while the total game transactions over the two-day period was 189,723.</p>
<p>让我们来看看结果如何。社区回合迎来了 300 多名玩家，其中大约 100 人能够制定策略、坚持到底并获得高分。最高得分手记录为 747,777,777。单人最高交易量为 15,324 笔，而两天内的总游戏交易量为 189,723 笔。</p>
<p>Here’s a snapshot from the game!<br>
这是游戏截图！</p>
<figure data-type="image" tabindex="2"><img src="https://miro.medium.com/max/1400/0*sk7u6fGMC9HMR5pw" alt="" loading="lazy"></figure>
<hr>
<p><strong>前20数据 (Top 20 Leaderboard)</strong></p>
<figure data-type="image" tabindex="3"><img src="https://miro.medium.com/max/1400/1*KcnarU8lKYDkmRSidfIKrQ.png" alt="" loading="lazy"></figure>
<p><strong>事后分析 (Post-Event Analysis)</strong></p>
<p><a href="https://altlayer.io/">Altlayer’s</a> scalability solution in the form of game-dedicated execution layers offers incredible value — it is user and cost-friendly, and is able to process large transaction volumes without any network congestion. This Dark Forest community round captures our value proposition perfectly. The game-layer alone seamlessly handled over 94K transactions per day; txns equivalent to approx 60% of txns on all Arbitrum dApps, and over 90% of all txns on Optimism.</p>
<p><a href="https://altlayer.io/">Altlayer</a> 以游戏专用执行层的形式，提供的可扩展性解决方案展现了令人难以置信的价值——它对用户和成本都很友好，并且能够在没有任何网络拥塞的情况下处理大量交易。黑暗森林社区回合完美地体现了我们的价值主张。仅游戏层每天就可以无缝处理超过 94K 的交易；交易量相当于所有 Arbitrum dApp 上约 60% ，以及 Optimism 上超过 90% 。</p>
<figure data-type="image" tabindex="4"><img src="https://miro.medium.com/max/1400/0*yhC2Sn2m7061efes" alt="" loading="lazy"></figure>
<hr>
<p><strong>为什么在Altlayer上运行游戏? (Why Run Games on AltLayer?)</strong></p>
<p>Most of the blockchain games today have their core game logic off-chain and on-chain transactions are limited to token trades or withdrawals. One of the main reasons for keeping the game logic off-chain is the lack of scalability and poor latency offered by general-purpose blockchain platforms.</p>
<p>当今大多数区块链游戏的核心，其逻辑都在链下，链上交易仅限于代币交易或提款。保持游戏逻辑脱链的主要原因之一是通用区块链平台缺乏可扩展性和低延迟。</p>
<p>In fact, earlier this year, a simple play-to-earn game called <a href="https://thedefiant.io/sunflower-game-causes-polygon-fee-spike">Sunflower Farmers</a> on Polygon PoS became so popular that it started to consume over 40% of the entire blockchain space which in turn resulted in a spike in high gas fees for the gamers as well as for users of other dApps. Therefore, any on-chain game that enjoys some level of popularity should have its own dedicated blockspace to avoid any negative externalities to end users. AltLayer can be a great solution as developers can easily spin off a game-dedicated execution layer that can offer over 2,500 TPS with 1–2 seconds of latency.</p>
<p>事实上，今年早些时候，Polygon PoS 上一款名为 <a href="https://thedefiant.io/sunflower-game-causes-polygon-fee-spike">向日葵农场</a> 的简单赚钱游戏，变得如此流行以至于它开始消耗超过 40% 的区块空间，这反过来导致游戏玩家以及其他 dApp 用户的高额 gas 费用飙升。因此，任何享有一定知名度的链上游戏，都应该有自己的专用区块空间，进而避免对最终用户产生任何负面外部性。 AltLayer可以是一个很好的解决方案，因为开发人员可以轻松地分离出一个游戏专用执行层，该执行层可以提供超过 2,500 TPS 和 1-2 秒的延迟。</p>
<p>Moreover, most indie games have a short lifespan (i.e., usually about a few months) and as soon as the demand among gamers tapers off, it would be ideal to be able to wind up the resources required to maintain the network. AltLayer is uniquely positioned in the market to provide such disposable execution layers and hence can be an ideal solution for game studios looking to build fully on-chain and transparent games.</p>
<p>此外，大多数独立游戏的生命周期都很短(即通常大约几个月)，一旦游戏玩家的需求逐渐减少，最好能够收回维持网络所需的资源。 AltLayer 在市场上具有独特的定位，可提供此类一次性执行层，因此对于希望构建完全链上透明游戏的工作室来说，它是一个理想的解决方案。</p>
<p>AltLayer’s disposable flash layer also allows game developers to settle in-game NFTs (for example artefacts in the case of Dark Forest) to a chain of their choice (e.g. Ethereum) allowing those NFTs to be traded on secondary markets such as OpenSea. Later, once a new round is started or when a new game version is released, those NFTs can be brought back into the game.</p>
<p>AltLayer 的一次性瞬时层，还允许游戏开发者将游戏中的 NFT(例如黑暗森林中的人工制品)结算到他们选择的链(例如以太坊)上，从而允许这些 NFT 在 OpenSea 等二级市场上进行交易。之后，一旦开始新一轮或发布新游戏版本，这些 NFT 就可以带回游戏中。</p>
<p><strong>构建一个游戏专用的执行层 (Building a Gaming-Tailored Execution Layer)</strong></p>
<p>Unlike existing solutions in the market (e.g. Cosmos SDK) that offer one-size-fits-all solution to spin application-chains, AltLayer takes a tailored approach by providing several useful tools, dApps and other infrastructure that come as add-ons with game and NFT-dedicated flash layers.</p>
<p>与市场上现有的，为应用链提供万能解决方案(例如 Cosmos SDK)不同，AltLayer 采用量身定制的方法，提供多种有用的工具、dApp 和其他基础设施作为游戏附加组件和 NFT 专用的瞬时层。</p>
<p>This allows game developers to focus on building the game and not worry about tertiary tools and infrastructure.</p>
<p>这使游戏开发人员可以专注于构建游戏，而不必担心三方工具和基础设施。</p>
<p>For example, in order to provide a seamless experience to end users, flash layers will come together with an in-game NFT marketplace allowing players to trade assets right within the game. As a result, users do not have to leave the game interface and visit a third-party provider such as OpenSea to trade in-game assets. Another interesting feature that we are working on is to provide a safe in-game session wallet to improve UX for crypto-native games like Dark Forest.</p>
<p>例如，为了向最终用户提供无缝体验，瞬时层将与游戏内 NFT 市场相结合，允许玩家在游戏中直接交易资产。因此，用户无需离开游戏界面，访问 OpenSea 等第三方提供商即可交易游戏内资产。我们正在开发的另一个有趣的功能是提供一个安全的游戏内会话钱包，进而改善黑暗森林等加密原生游戏的用户体验。</p>
<p>More to be announced on this in the near future. Stay tuned!</p>
<p>更多信息将在不久的将来公布。敬请关注！</p>
<figure data-type="image" tabindex="5"><img src="https://miro.medium.com/max/1400/0*DugRxjtuMc72RHB-" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Worldcoin中文材料合集-不断更新中(Worldcoin Chinese Materials-Updating)]]></title>
        <id>https://chainguys.github.io/post/worldcoin-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-worldcoin-chinese-materials-updating/</id>
        <link href="https://chainguys.github.io/post/worldcoin-zhong-wen-cai-liao-he-ji-bu-duan-geng-xin-zhong-worldcoin-chinese-materials-updating/">
        </link>
        <updated>2022-09-10T08:13:31.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://worldcoin.org/images/home/hero-bg.svg" alt="" loading="lazy"></figure>
<h1 id="blogs">Blogs</h1>
<h2 id="世界币简介introducing-worldcoin"><a href="https://chainguys.github.io/post/shi-jie-bi-jian-jie-introducing-worldcoin">世界币简介(Introducing Worldcoin)</a></h2>
<h2 id="如何启动-how-the-launch-works"><a href="https://chainguys.github.io/post/ru-he-qi-dong-how-the-launch-works">如何启动? (How the Launch Works)</a></h2>
<h2 id="开源的世界币open-sourcing-worldcoin"><a href="https://chainguys.github.io/post/kai-yuan-de-shi-jie-bi-open-sourcing-worldcoin">开源的世界币(Open Sourcing Worldcoin)</a></h2>
<h2 id="保护隐私的人格证明协议-privacy-preserving-proof-of-personhood-protocol"><a href="https://chainguys.github.io/post/bao-hu-yin-si-de-ren-ge-zheng-ming-xie-yi-privacy-preserving-proof-of-personhood-protocol">保护隐私的人格证明协议 (Privacy-Preserving Proof-of-Personhood Protocol)</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[stETH和可重置代币的一些”毛病“ (stETH and the Hazards of Rebasing Tokens)]]></title>
        <id>https://chainguys.github.io/post/steth-he-ke-chong-zhi-dai-bi-de-yi-xie-mao-bing-and-the-hazards-of-rebasing-tokens/</id>
        <link href="https://chainguys.github.io/post/steth-he-ke-chong-zhi-dai-bi-de-yi-xie-mao-bing-and-the-hazards-of-rebasing-tokens/">
        </link>
        <updated>2022-09-09T05:10:06.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://chainguys.github.io/post/wei-ying-dui-eth-he-bing-euler-yi-jing-zhun-bei-hao-yu-chainlink-ji-cheng-euler-integrates-chainlink-to-get-ready-for-the-merge/">Chainlink was recently integrated with Euler</a> for asset pricing. As mentioned, we at Euler Labs believe this is necessary to protect Euler users during the Ethereum Merge upgrade (although we are still proponents of on-chain pricing like TWAPs wherever possible— see some of our <a href="https://ethresear.ch/t/median-prices-as-alternative-to-twap-an-optimised-proof-of-concept-analysis-and-simulation/12778">recent research</a>).</p>
<p><a href="https://chainguys.github.io/post/wei-ying-dui-eth-he-bing-euler-yi-jing-zhun-bei-hao-yu-chainlink-ji-cheng-euler-integrates-chainlink-to-get-ready-for-the-merge/">Chainlink最近与Euler集成</a> ，用于资产定价。如前所述，我们 Euler Labs 认为这对于在 Ethereum Merge 升级期间保护 Euler 用户是必要的(尽管我们仍然尽可能支持 TWAP 等链上定价 - 请参阅我们的一些 <a href="https://ethresear.ch/t/median-prices-as-alternative-to-twap-an-optimized-proof-of-concept-analysis-and-simulation/12778">最近的研究</a>)。</p>
<p>However, another benefit of Chainlink pricing is to securely support assets that don’t have liquid Uniswap3 pools. One such asset is Lido’s stETH token. This is a token that represents shares of Lido’s staking protocol. In order to maintain price parity with regular ETH as fees are accrued, the stETH contracts implement a daily rebase. This means that once per day the rewards (and slashing, if any) are credited to token holders by proportionally increasing everyone’s balances. This is a very convenient way to distribute rewards but causes many complications in down-stream products like Euler.</p>
<p>然而，Chainlink 定价的另一个好处是安全地支持没有流动性 Uniswap3 池的资产。其中一项资产是 Lido 的 stETH 代币。这是一个代表 Lido 质押协议份额的代币。为了在产生费用时保持与常规 ETH 的价格平价，stETH 合约实施每日 重置。这意味着每天一次，奖励(和削减，如果有的话)按比例增加代币持有者的余额。这是一种非常方便的奖励分配方式，但会给 Euler 等下游产品带来许多复杂性。</p>
<p>If you plan to deposit or borrow stETH on the Euler platform, please read the following article because there are some important points you should be aware of.</p>
<p>如果您打算在 Euler 平台上存入或借入 stETH，请阅读以下文章，因为您应该注意一些要点。</p>
<h2 id="重置和保险库-rebasing-and-vaults">重置和保险库 (Rebasing and Vaults)</h2>
<p>One common issue with rebasing tokens is how they are handled by vault-like systems. For example, consider a contract that accepts an stETH deposit, records how much was deposited, and allows you to withdraw that amount later on. What happens when a rebase occurs? The contract’s balance increases but the record of how much you can withdraw does not, because it’s internal to the contract. So this means that the Lido rewards effectively accrue to the contract, not the depositor. If there is no way to “skim” unaccounted-for tokens out of the contract, then they are irretrievably lost.</p>
<p>可重置代币的一个常见问题是它们如何被类似保险库的系统处理。例如，考虑一个接受 stETH 存款的合约，先记录存入的金额，并允许您稍后提取该金额。发生重置时会发生什么？合约的余额会增加，但你可以提取多少的记录不会增加，因为它是合约内部的。因此，这意味着 Lido 奖励有效地累积到合约，而不是存款人。如果没有办法从合约中“拿出”下落不明的代币，那么它们将无法挽回地丢失。</p>
<p>This is actually the reason that Euler’s eTokens are <strong>not</strong> rebasing. Like Compound’s cTokens, balances don’t update with accrued interest, but are instead exchangeable for a growing amount of underlying tokens. By contrast, AAVE’s aTokens <strong>are</strong> rebasing, which results in the vault issue described above.</p>
<p>这实际上是 Euler 的 eToken <strong>并非</strong> 可重置 的原因。与 Compound 的 cToken 一样，余额不会随着应计利息而更新，而是可以兑换成越来越多的对应/基础代币。相比之下，AAVE 的 aToken <strong>是</strong>  可重置的，这会导致上述保险库问题。</p>
<p>Uniswap3 is another vault-like system. Because of the concentrated liquidity feature, each position’s balances are tracked internally in the contract (as opposed to using the contract address’s balance, like Uniswap2 and others). This is likely one of the reasons there are no liquid Uniswap3 pools for stETH. Although the pools exist, liquidity providers will not earn the Lido fees, which means they will most likely be less profitable than they would be on Curve or Uniswap2.</p>
<p>Uniswap3 是另一个类似保险库的系统。由于集中流动性的特点，每个头寸的余额都在合约内部进行跟踪(而不是使用合约地址的余额，如 Uniswap2 等)。这可能是 stETH 没有流动性 Uniswap3 池的原因之一。尽管存在池，但流动性提供者不会赚取 Lido 费用，这意味着它们的利润很可能低于 Curve 或 Uniswap2 上的利润。</p>
<h2 id="wsteth又如何what-about-wsteth">wstETH又如何？(What about wstETH?)</h2>
<p>wstETH is a “wrapped stETH”. Its purpose is to provide a non-rebasing interface to stETH. Like Euler’s eTokens, wstETH becomes exchangeable for a growing amount of stETH over time (assuming earned rewards are greater than slashing). Because it is non-rebasing, the above issues do not apply.</p>
<p>wstETH 是一个“封装的 stETH”。其目的是为 stETH 提供一个非重置的接口。与 Euler 的 eToken 一样，随着时间的推移，wstETH 可以兑换成越来越多的 stETH(假设获得的奖励大于削减)。因为它是非重置的，所以上述问题不适用。</p>
<p>Euler has supported wstETH for some time, both as a collateral and borrowable asset. Its Oracle rating is currently Low Risk, which means the cost of manipulating its price on Uniswap3 is very high.</p>
<p>无论是作为抵押品还是可借用资产，Euler 支持 wstETH 已经有一段时间了。它的 Oracle 评级目前为低风险，这意味着在 Uniswap3 上操纵其价格的成本非常高。</p>
<p>However, there has been significant demand to also support stETH directly. stETH does have some advantages over wstETH. In particular it can be considered soft-pegged to the value of ETH, and as such is well-suited for use on systems like Curve1.</p>
<p>然而，直接支持 stETH 的需求也很大。 stETH 确实比 wstETH 有一些优势。特别是它可以被认为与 ETH 的价值软挂钩，因此非常适合在像 Curve1 这样的系统上使用。</p>
<h2 id="借入steth-borrowing-steth">借入stETH (Borrowing stETH)</h2>
<p>On AAVE, stETH is supported as a collateral asset, but you cannot borrow it. Certainly its rebasing nature complicates borrowing, but Euler’s governance <a href="https://snapshot.org/#/eulerdao.eth/proposal/0x8d246cae198f742f057e237314c6855768b83994d4a0bbdebf93b34e5ad40212">has voted</a> to support borrowing stETH with a borrow factor of 0.91. At Euler Labs we agree with this decision because we believe that the ability to borrow (and therefore to short sell) an asset is key to a healthy market.</p>
<p>在 AAVE 上，stETH 被支持作为抵押资产，但你不能借用它。当然，它的可重置性质使借贷复杂化，但Euler的治理<a href="https://snapshot.org/#/eulerdao.eth/proposal/0x8d246cae198f742f057e237314c6855768b83994d4a0bbdebf93b34e5ad40212">已投票</a> 支持使用0.091的借贷因子借入stETH。在 Euler Labs，我们同意这一决定，因为我们认为借入(并因此卖空)资产的能力是健康市场的关键。</p>
<p>However, there are some caveats that stETH borrowers should be aware of, which we will describe below.</p>
<p>但是，stETH 借款人应该注意一些警告，我们将在下面描述。</p>
<h2 id="还款的复杂性-complications-with-repay">还款的复杂性 (Complications with Repay)</h2>
<p>If you look into the implementation of the stETH contract, you will see that the way it implements rebasing is by tracking an internal “shares” value for each user, and then converting these shares to and from balances when <code>balanceOf()</code> , <code>transfer()</code>, etc are called. The unfortunate consequence of this is that when converting shares to balances or vice versa, rounding can occur. This means that there are some values for balances that cannot be precisely represented.</p>
<p>如果你查看 stETH 合约的实现，你会发现它实现 可重置 的方式是跟踪每个用户的内部“份额”值，然后在 <code>balanceOf()</code> <code>transfer()</code>等被调用时将这些份额转换为余额。这样做的不幸后果是，当将股份转换为余额或反之亦然时，可能会发生四舍五入。这意味着有些余额值无法精确表示。</p>
<p>For Euler users, this means that repaying stETH loans is slightly more complicated than with other assets. Because of the rounding, when the Euler contract pulls a precise amount from your wallet to repay a loan, it might receive a few wei less than requested, leaving you with a very small amount of “dust” debt. While this isn’t necessarily a problem, it does have some downsides:</p>
<p>对于 Euler 用户来说，这意味着偿还 stETH 贷款比使用其他资产稍微复杂一些。由于四舍五入，当Euler合约从你的钱包中提取一个精确的金额来偿还贷款时，它可能会比要求的少一些 wei，给你留下非常少量的“尘埃”债务。虽然这不一定是问题，但它确实有一些缺点：</p>
<ul>
<li>
<p>You will not be able to exit the stETH market on this sub-account</p>
</li>
<li>
<p>You may not be able to take out any other loans on this sub-account due to <a href="https://docs.euler.finance/developers/getting-started/architecture#sub-accounts">borrow isolation</a></p>
</li>
<li>
<p>You have to keep a small (dust) amount of collateral locked in this sub-account</p>
</li>
<li>
<p>You don’t get the gas refund for setting a storage slot back to exactly 0</p>
</li>
<li>
<p>您将无法在该子账户上退出 stETH 市场</p>
</li>
<li>
<p>由于<a href="https://docs.euler.finance/developers/getting-started/architecture#sub-accounts">借入隔离</a>，您可能无法在此子账户上提取任何其他贷款</p>
</li>
<li>
<p>您必须在此子账户中锁定少量(灰尘)抵押品</p>
</li>
<li>
<p>将存储槽设置回 0 不会获得 gas 退款</p>
</li>
</ul>
<p>Euler Labs is working on a UI-level fix for the Repay action that will automatically get rid of this dust for you. Please follow our discord for updates on this progress.</p>
<p>Euler Labs 正在为还款操作进行 UI 级别的修复，它将自动为您清除这些灰尘。请关注我们的 Discord 以获取有关此进展的最新信息。</p>
<h2 id="交换的复杂性-complications-with-swap">交换的复杂性 (Complications with Swap)</h2>
<p>Unlike many other lending protocols, Euler has a built-in mechanism for Swapping tokens on DEXs like Uniswap3 and others (via 1inch). This is useful for setting up and unwinding leveraged positions with an EOA (non smart-contract) wallet.</p>
<p>与许多其他借贷协议不同，Euler 具有用于在 Uniswap3 等 DEX 上交换代币的内置机制(通过 1inch)。这对于使用 EOA(非智能合约)钱包设置和平仓杠杆头寸很有用。</p>
<p>However, a related problem can occur here as with repay. Currently, when a 1inch swap is requested, our Swap module checks the bought amount returned by 1inch. For rebasing tokens this amount is incorrect, as it is the amount that 1Inch requested to be transferred, not the actual amount that Euler received (which may be less). This can cause the swap to fail.</p>
<p>但是，与还款一样，这里可能会出现相关问题。目前，当请求 1inch 交换时，我们的交换模块会检查 1inch 返回的购买金额。对于可重置代币，这个金额是不正确的，因为它是 1Inch 请求转移的金额，而不是 Euler 收到的实际金额(可能更少)。这可能会导致交换失败。</p>
<p>While our swap module does also support directly swapping with Uniswap3, this is not a good option in this case since (as described above) there are no liquid stETH pools on Uniswap3.</p>
<p>虽然我们的交换模块也支持直接与 Uniswap3 交换，但在这种情况下这不是一个好的选择，因为(如上所述)Uniswap3 上没有流动的 stETH 池。</p>
<p>Euler Labs developers have designed a major improvement to the Swapping architecture (currently under audit) and believe we will have a comprehensive solution to this in the near future.</p>
<p>Euler Labs 开发人员设计了对 Swapping 架构的重大改进(目前正在审核中)，并相信我们将在不久的将来有一个全面的解决方案。</p>
<p>In the mean-time, if you have any issues with, or questions about, swapping, please open a support issue on discord and someone from Euler Labs will help figure out the best solution for your situation.</p>
<p>同时，如果您对交换有任何问题或疑问，请在 discord 上打开支持问题，Euler Labs 的人员将帮助您找出适合您情况的最佳解决方案。</p>
<h2 id="收益窃取攻击-yield-theft-attack">收益窃取攻击 (Yield Theft Attack)</h2>
<p>Since stETH does a daily (as opposed to continuous) rebase, there is another issue to be aware of. While the previous issues only affect borrowers, the following affects depositors (but is a consequence of borrowing).</p>
<p>由于 stETH 每天(而不是连续)进行重置，因此还有另一个问题需要注意。虽然之前的问题只影响借款人，但以下问题会影响存款人(但这是借款的结果)。</p>
<p>When you deposit stETH into Euler, you are earning yield from two separate sources:</p>
<p>当您将 stETH 存入 Euler 时，您将从两个不同的来源获得收益：</p>
<ul>
<li>
<p>The portion of the pool that has been borrowed. The borrowers pay interest according to a special interest rate model. This model starts with the Lido rewards as a base interest rate, and then charges additional interest depending on the utilisation of the pool.</p>
</li>
<li>
<p>The portion of the pool that has not been borrowed. This balance sits in the Euler contract and receives rebasing rewards which are proportionally allocated to stETH depositors.</p>
</li>
<li>
<p>已借用的池部分。借款人根据特殊利率模型支付利息。该模型以 Lido 奖励作为基本利率，然后根据池的利用率收取额外的利息。</p>
</li>
<li>
<p>池中未借用的部分。该余额位于 Euler 合约中，并获得按比例分配给 stETH 存款人的重置奖励。</p>
</li>
</ul>
<p>The intent of the above is to ensure that depositors at least earn the Lido reward that they would by simply holding stETH, and maybe extra depending on the pool’s borrowing activity.</p>
<p>上述内容的目的是确保储户至少能够通过持有 stETH 获得 Lido 奖励，并且可能会根据池的借贷活动获得额外奖励。</p>
<p>However, there is a subtle attack that can be used to steal the daily yield on the rewards for the unborrowed amount. If you knew exactly when the rebasing was to occur, right before the rebase you could borrow the entire amount remaining in the pool, wait for the rebase, and then immediately repay the borrowed amount, pocketing the reward. This can even be done within a single block by sandwiching the transaction that triggers the rebase, in which case you would pay no interest on the borrow.</p>
<p>但是，有一种微妙的攻击可用于窃取未借出金额奖励的每日收益。如果您确切知道重置发生的时间，那么在重置之前，您可以借入池中剩余的全部金额，等待重置，然后立即偿还借入的金额，将奖励收入囊中。这甚至可以通过将触发重置的交易在一个块内完成，在这种情况下，您无需为借款支付利息。</p>
<p>In fact, you could do this for any system that allows you to temporarily withdraw stETH and re-deposit the same amount. For example, you could buy a ton of stETH on Curve right before the rebase, earn the reward, and then sell it back to Curve.</p>
<p>事实上，您可以对任何允许您暂时提取 stETH 并重新存入相同金额的系统执行此操作。例如，您可以在重置之前在 Curve 上购买大量 stETH，获得奖励，然后将其卖回给 Curve。</p>
<p>In general, this attack is only worthwhile if the amount earned is greater than the amount expended in terms of gas and protocol fees.</p>
<p>一般来说，这种攻击只有在赚取的金额大于gas和协议费用的支出时才值得。</p>
<p>While the fees charged by Curve almost certainly offset the profit you would earn, on Euler taking a loan and immediately repaying is free, except for gas. Fortunately, our analysis has shown that this attack will not become profitable until the Euler pool reaches a large TVL.</p>
<p>虽然 Curve 收取的费用几乎肯定会抵消您将获得的利润，不过Euler贷款并立即偿还是免费的，虽然gas除外。幸运的是，我们的分析表明，在Euler池达到较大的 TVL 之前，这种攻击不会变得有利可图。</p>
<p>Euler Labs will soon be proposing an upgrade to governance that allows assets to be configured with a “loan origination” fee, which will charge a very modest fee to borrowers when they initiate a loan. This should ensure that this attack is not possible, no matter the pool size.</p>
<p>Euler Labs 很快将提议对治理进行升级，允许为资产配置“贷款发起”费用，这将在借款人发起贷款时向他们收取非常适中的费用。这应该确保这种攻击是不可能的，无论池大小如何。</p>
<h1 id="关于euler-about-euler">关于Euler (About Euler)</h1>
<p>Euler is a capital-efficient permissionless lending protocol that helps users to earn interest on their crypto assets or hedge against volatile markets without the need for a trusted third-party. Euler features a number of innovations not seen before in DeFi, including permissionless lending markets, reactive interest rates, protected collateral, MEV-resistant liquidations, multi-collateral stability pools, sub-accounts, risk-adjusted loans and much more. For more information, visit <a href="https://www.euler.finance/">euler.finance</a>.</p>
<p>Euler 是一种资本效率高的无许可借贷协议，可帮助用户从其加密资产中赚取利息或对冲波动的市场，而无需受信第三方。 Euler 具有许多在 DeFi 中前所未有的创新，包括无许可的借贷市场、回应性利率、受保护的抵押品、抗 MEV 清算、多抵押品稳定池、子账户、风险调整贷款等等。有关更多信息，请访问 <a href="https://www.euler.finance/">euler.finance</a>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通用目的 vs 特定应用的L1：Sei处于中间 (General Purpose vs App Specific L1s：Sei is in the middle)]]></title>
        <id>https://chainguys.github.io/post/tong-yong-mu-de-vs-te-ding-ying-yong-de-l1sei-chu-yu-zhong-jian-general-purpose-vs-app-specific-l1ssei-is-in-the-middle/</id>
        <link href="https://chainguys.github.io/post/tong-yong-mu-de-vs-te-ding-ying-yong-de-l1sei-chu-yu-zhong-jian-general-purpose-vs-app-specific-l1ssei-is-in-the-middle/">
        </link>
        <updated>2022-09-08T09:58:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id=""><img src="https://blog.seinetwork.io/content/images/size/w2000/2022/09/unnamed-52.png" alt="" loading="lazy"></h2>
<p>In the beginning, Vitalik created Ethereum. Ethereum expanded upon Bitcoin’s revolutionary distributed ledger by enabling smart contracts to be written and executed directly on-chain. This allowed users to have structured interactions, either with one another or with other smart contracts, and allowed for reliable, deterministic behavior. Crypto Twitter, though still in its infancy, gazed upon Ethereum smart contracts and decided they were good.</p>
<p>最开始，Vitalik 创建了以太坊。以太坊通过支持直接在链上编写和执行智能合约，扩展了比特币革命性的分布式账本。这允许用户与彼此或与其他智能合约进行结构化交互，并使得许可靠、确定性的行为成为现实。虽然加密推特仍处于起步阶段，但仍然注视着以太坊智能合约，并认为它们很好。</p>
<p>Being the first bonafide layer 1 gave Ethereum a huge first-mover advantage. An overwhelming majority of dApps and protocols had to build on Ethereum to leverage its liquidity and user base. In the early years of crypto, it was difficult enough to onboard users to Ethereum, the conditions simply were not favorable for new ecosystems. So for nearly half a decade, dApps and protocols were developed on Ethereum because it was the largest, easiest, and perhaps the only option.</p>
<p>作为第一个真正的layer1，以太坊具有巨大的先发优势。绝大多数 dApp 和协议必须建立在以太坊之上，来利用其流动性和用户群体。在加密货币的早期，很难让用户加入以太坊，因为条件根本不利于新的生态系统。但近五年来，dApp 和协议都是在以太坊上开发的，因为它是最大、最简单、也许是唯一的选择。</p>
<p>It wasn’t until 2020 that “Ethereum-killers” like Solana, Avalanche, and Binance Smart Chain (BSC) launched their own L1s to compete for Ethereum’s market share. Ethereum had grown too large to support its network traffic. Rising gas prices and latency concerns forced users and developers to seek L1 to improve user experience.</p>
<p>直到 2020 年，像 Solana、Avalanche 和 Binance Smart Chain (BSC) 这样的“以太坊杀手”才推出了自己的 L1，进而争夺以太坊的市场份额。以太坊已经变得太大，而无法支持其网络流量。不断上涨的 gas 价格和延迟问题，迫使用户和开发人员寻求 L1 以改善用户体验。</p>
<h2 id="什么是通用目的layer1-what-are-general-purpose-layer-1s">什么是通用目的layer1 (What are “General-Purpose Layer 1s”?)</h2>
<p>General-purpose L1s are the Swiss Army Knives of Web3 infrastructure. They are blockchains that are not optimized for any specific application, instead, they allow a variety of decentralized applications to be built on top of them. Examples of general-purpose L1s include Ethereum, Solana, Avalanche, and BSC. These chains allow protocols to share (and compete) for users, liquidity, and blockspace.</p>
<p>通用 L1 是 Web3 基础设施的瑞士军刀。它们是没有针对任何特定应用优化的区块链，相反，它们允许在之上构建各种去中心化应用。通用 L1 的示例包括 Ethereum、Solana、Avalanche 和 BSC。这些链允许协议共享（和竞争）用户、流动性和区块空间。</p>
<h2 id="什么是特定应用layer1-what-are-app-specific-layer-1s">什么是特定应用layer1 (What are “App-Specific Layer 1s”?)</h2>
<p>App-specific L1s are blockchains that have been developed exclusively for one or a few decentralized applications. These L1s can customize every aspect of their tech stack, such as their programming language, development frameworks, and consensus mechanisms to best suit their protocol(s) needs. Cosmos Zones are perfect examples of app-specific L1s. These chains are fully customizable and are completely sovereign within their own chains.</p>
<p>特定应用的 L1 是专门为一个或几个去中心化应用开发的区块链。这些 L1 可以自定义其技术栈的各个方面，例如他们的编程语言、开发框架和共识机制，以最适合他们的协议需求。 Cosmos Zones 是应用特定 L1 的完美示例。这些链是完全可定制的，并且在它们自己的链中是完全主权的。</p>
<h2 id="特定应用layer1很新吗-are-app-specific-l1s-new">特定应用layer1很新吗? (Are app-specific L1s new?)</h2>
<p>The idea of app-specific blockchains has been around for a few years now. However, it has only become widely feasible in the past 2 years thanks to the tech stacks offered by “ecosystems” such as Cosmos and Polkadot. Before their contributions, it was prohibitively complex and labor intensive to build your own L1. Developers would need significant amounts of time and funding to build, market, and interconnect their L1s. New chains would have had to compete with Ethereum and Bitcoin for liquidity in what was essentially a zero-sum game. This made it virtually impossible for any single protocol to attempt to build its own chain.</p>
<p>特定应用的区块链的想法已经存在了几年。然而，由于 Cosmos 和 Polkadot 等“生态系统”提供的技术栈，它在过去 2 年才变得广泛可行。在他们做出贡献之前，构建自己的 L1 非常复杂且劳动密集。开发人员需要大量时间和资金来构建、营销和交互这些 L1。在本质上是零和游戏的情况下，新链将不得不与以太坊和比特币竞争流动性。这使得任何单一协议几乎不可能尝试构建自己的链。</p>
<h2 id="为什么是现在-why-now">为什么是现在 (Why now?)</h2>
<p>With the advent of Cosmos and Polkadot, the process of building a blockchain has been significantly simplified. Dapps building on Cosmos can utilize the Cosmos SDK as their development framework and the Tendermint core as their consensus mechanism. This abstracts a huge amount of complexity from protocol developers, allowing them to focus on the application layer of their chains.</p>
<p>随着 Cosmos 和 Polkadot 的出现，构建区块链的过程已经大大简化。基于 Cosmos 构建的 Dapp 可以使用 Cosmos SDK 作为开发框架，使用 Tendermint 核心作为共识机制。这从协议开发人员那里减少了大量的复杂性，使他们能够专注于其链的应用层。</p>
<p>Another advancement that has significantly propelled the popularity and feasibility of app-specific L1s is the Inter-Blockchain Communication Protocol (IBC). The IBC allows sovereign blockchains within the Cosmos ecosystems to directly communicate and trade assets. This means that users will no longer be limited to the protocols, liquidity, and functionality of just one chain.</p>
<p>另一个显着推动特定应用 L1 的普及和可行的进步，是区块链间通信协议 (IBC)。 IBC 允许 Cosmos 生态系统中的主权区块链直接通信和交易资产。这意味着用户将不再局限于单一链的协议、流动性和功能。</p>
<h2 id="通用目的-l1-和特定应用-l1-之间的差异-differences-between-general-purpose-and-app-specific-l1s">通用目的 L1 和特定应用 L1 之间的差异 (Differences between general-purpose and app-specific L1s)</h2>
<p><strong>Flexibility</strong>: App-specific L1s undoubtedly offer more flexibility than their general-purpose counterparts. Developers can customize the programming language, development framework, consensus mechanisms, and technical specifications of their chains.<br>
<strong>灵活性</strong>：特定应用的 L1 无疑比通用的 L1 提供更大的灵活性。开发者可以自定义其链的编程语言、开发框架、共识机制和技术规范。</p>
<p><strong>Simplicity</strong>: General-purpose blockchains are easier/less labor intensive for new protocols to launch on. While the Cosmos SDK and Tendermint Core abstract networking and consensus for IBC protocols, app-specific L1s still need to source their own validators which can be a difficult and time-consuming process.<br>
<strong>简单</strong>：通用区块链对于启动新协议来说更容易/劳动强度更低。虽然 Cosmos SDK 和 Tendermint Core 为 IBC 协议抽象了网络和共识，但特定应用的 L1 仍然需要获取自己的验证者，这可能是一个困难且耗时的过程。</p>
<p><strong>Performance</strong>: App-specific L1s typically offer better performance on a per-protocol basis. This is a by-product of the flexibility mentioned above. Chains can be optimized for speed, privacy, transaction volume, and much more. Furthermore, app-specific L1s do not need to deal with congestion stemming from “noisy neighbors”. Without having to compete with NFT mints or other protocols means that transaction speed and cost can remain constant for end users.<br>
<strong>性能</strong>：特定应用的 L1 通常在每个协议的基础上提供更好的性能。这是上述灵活性的副产品。链可以针对速度、隐私、交易量等进行优化。此外，特定应用的 L1 不需要处理源自“嘈杂邻居”的拥塞。无需与 NFT铸币或其他协议竞争，这意味着最终用户的交易速度和成本可以保持不变。</p>
<p><strong>Interoperability</strong>: IBC chains benefit from specialized interoperability. However, with bridges and interoperability layers such as Axelar, Multichain, and Synapse growing in popularity, both general purpose and app-specific chains will likely experience similar levels of interoperability.<br>
<strong>可交互性</strong>：IBC 链受益于专门的可交互性性。但是，随着 Axelar、Multichain 和 Synapse 等跨链桥桥和交互层越来越受欢迎，通用链和特定应用链可能会经历相似级别的交互性。</p>
<p><strong>Security</strong>: General-purpose blockchains are more difficult to secure, due to the sheer number of possible interactions between every user and protocol on the chain. It is exceedingly difficult to predict and prevent exploits when user behavior is so varied. In general, app-specific blockchains are easier to audit and secure, due to the smaller number of permitted interactions between users can chains.<br>
<strong>安全性</strong>：通用区块链更难保护，因为链上每个用户和协议之间可能的交互数量众多。当用户行为如此多样时，很难预测和防止漏洞利用。一般来说，特定应用的区块链更容易审计和保护，因为用户与链之间，被允许的交互数量较少。</p>
<p>On a chain level, proof-of-stake general-purpose L1s are more difficult to attack as the sheer amount of capital required is exponentially larger than app-specific chains. However, app-specific L1s may have closed validator sets or entirely novel consensus mechanisms that make them more secure and censorship-resistant.<br>
在链层面上，权益证明类的通用 L1 更难攻击，因为所需的资本数量比特定应用的链大得多。但是，特定应用的 L1 可能具有封闭的验证者或全新的共识机制，使它们更加安全和抗审查。</p>
<h2 id="有中间道路吗is-there-a-middle-ground">有中间道路吗？(Is there a middle ground?)</h2>
<p>As it stands, protocols are still forced to make a difficult decision between building on a general-purpose L1 or creating their own app-specific chain. While most protocols will value the increased performance and flexibility of building their own L1, assembling a validator set and sourcing liquidity for a stand-alone chain can be prohibitively difficult.<br>
就目前而言，协议仍然被迫在构建通用 L1 或创建自己的特定应用链之间做出艰难的决定。虽然大多数协议都重视构建自己的 L1 所提高的性能和灵活性，但为独立链组装验证者和寻找流动性可能非常困难。</p>
<p>As such, even with innovations from the Cosmos and Polkadot teams, many protocols still opt to build on general-purpose chains. Sei has observed that only larger protocols with established user bases, such as dYdX and OKX, are willing to migrate from their “home” chains to Cosmos. These conditions have begun to frame app-specific L1 thesis as a “late game” move instead of an alternative starting point in the eyes of Web3.<br>
因此，即使有 Cosmos 和 Polkadot 团队的创新，许多协议仍然选择建立在通用链上。 Sei 观察到，只有拥有成熟用户群的大型协议，例如 dYdX 和 OKX，才愿意从他们的“家”链迁移到 Cosmos。这些条件已经开始将特定应用的 L1 框架作为“游戏后期”的举措，而不是 Web3 眼中的另一个起点。</p>
<h2 id="sei简介-introducing-sei">Sei简介 (Introducing Sei)</h2>
<p><a href="https://www.seinetwork.io/">Sei</a> is the fastest DeFi L1, the fastest chain to finality in Web3, and it aims to change this perception. <strong>Sei envisions itself as a DeFi-specific L1 instead of an app-specific chain.</strong> This distinction allows Sei to optimize its chain for a class or subset of protocols instead of attempting to create a one-size-fits-all solution.</p>
<p><a href="https://www.seinetwork.io/">Sei</a> 是最快的 DeFi L1，是 Web3 中达到最终态最快的链，它旨在改变上文描述的看法。 <strong>Sei 将自己设想为专门的 DeFi  L1，而不是特定应用的链。</strong> 这种区别使 Sei 可以针对一类或协议子集优化，而不是试图创建一个万能的解决方案.</p>
<p>Sei is a purpose-built L1 that is opening up an entirely new DeFi design space. The team at Sei has thoroughly analyzed the current limitations and pain points of on-chain dApps and protocols to design a true DeFi-specific chain. This novel idea includes optimizations for performance, security, and interoperability.</p>
<p>Sei 是一个专用的 L1，它正在开辟一个全新的 DeFi 设计空间。 Sei 团队彻底分析了当前链上 dApp 和协议的局限性和痛点，进而设计出真正的 DeFi 专用链。这个新颖的想法包括对性能、安全性和交互性的优化。</p>
<p><strong>Performance</strong>: One of Sei’s core improvements over competing L1s is its speed. Sei currently offers the fastest Time To Finality (TTF) in Web3, sitting at approximately 600ms. Simply put, TTF measures the time taken between a transaction being submitted to the transaction being confirmed with a guarantee of irreversibility. TTF is analogous to latency as it measures the time taken for information to go from sender → validator → sender.<br>
<strong>性能</strong>：相对于竞争者 L1 的核心改进之一，就是Sei 的速度。 Sei 目前在 Web3 中提供最快的 最终态生成时间，Time To Finality (TTF)，大约为 600 毫秒。简而言之，TTF 衡量的是从提交交易到确认交易之间所用的时间，并保证不可逆。 TTF 类似于延迟，因为它测量信息从发送者→验证者→发送者所花费的时间。</p>
<p><strong>Security</strong>: Sei maintains a focused validator set, which has been rigorously tested throughout Seinami’s incentivized testnet. Protocols building on Sei will be able to leverage Sei’s validators inste1ad of assembling their own validator set. This alleviates one of the largest blockers for migration to Cosmos. Furthermore, Sei utilizes <a href="https://ethresear.ch/t/mev-auction-auctioning-transaction-ordering-rights-as-a-solution-to-miner-extractable-value/6788">frequent batch auctions</a> to prevent Minimum-Extractable-Value (MEV) from occurring on its chain. Batch auctions are fundamentally less vulnerable to MEV since the ordering of trades within a batch doesn’t affect the price. (<a href="https://coinmarketcap.com/alexandria/glossary/batch-auctions">Source</a>).<br>
<strong>安全性</strong>：Sei 维护着一个专注的验证者集，该验证者集已在 Seinami 的激励测试网中经过严格测试。建立在 Sei 上的协议将能够利用 Sei 的验证者而不是组装自己的验证者集。这缓解了迁移到 Cosmos 的最大障碍之一。此外，Sei 利用 <a href="https://ethresear.ch/t/mev-auction-auctioning-transaction-ordering-rights-as-a-solution-to-miner-extractable-value/6788">频繁的批量拍卖</a> 来防止出现在其链上的最小可提取值 (MEV)。批量拍卖从根本上不太容易受到 MEV 的影响，因为批次内的交易顺序不会影响价格。 （[来源]（https://coinmarketcap.com/alexandria/glossary/batch-auctions））。</p>
<p><strong>Interoperability</strong>: Sei has partnered with Axelar Network to leverage its cross-chain messaging technology. This has enabled Sei to not only bridge assets to and from both IBC and EVM chain, but also to utilize smart contract functionality and logic from all of Axelar’s partners. This allows Sei to interact with users and liquidity from “foreign” chains, greatly expanding the total addressable market for protocols building on Sei.</p>
<p><strong>交互性</strong>：Sei 与 Axelar Network 合作利用其跨链消息传递技术。这使 Sei 不仅能够将资产与 IBC 和 EVM 链连接起来，而且还能够利用 Axelar 所有合作伙伴的智能合约功能和逻辑。这允许 Sei 与来自“外国”链的用户和流动性进行交互，从而极大地扩展了基于 Sei 构建协议的总可寻址市场(规模)。</p>
<p>The goal of Web3 has always been to empower users and developers to interact in optimized and decentralized manners. The current state of the industry prevents new and upcoming protocols to prioritize reach instead of performance. Sei offers a middle ground, where DeFi protocols can build and scale with as few compromises as possible. Sei will unlock an entirely new DeFi design space, enabling existing protocols to grow and novel protocols to be created.</p>
<p>Web3 的目标一直是让用户和开发者，能够以优化和去中心化的方式进行交互。行业的现状阻止了新的和即将推出的协议，优先考虑覆盖范围而不是性能。 Sei 提供了一个中间地带，DeFi 协议可以在尽可能少的妥协的情况下构建和扩展。 Sei 将解锁一个全新的 DeFi 设计空间，使现有协议得以发展并创建新协议。</p>
]]></content>
    </entry>
</feed>