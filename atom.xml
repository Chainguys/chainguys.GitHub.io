<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chainguys.github.io</id>
    <title>Chainguys&apos;Blog</title>
    <updated>2022-11-18T02:55:07.280Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chainguys.github.io"/>
    <link rel="self" href="https://chainguys.github.io/atom.xml"/>
    <subtitle>A blockchain guy who likes making memes and translating tech articles &lt;/br&gt;All Information NOT Financial Adivice&lt;/br&gt; 一个区块链的老韭菜 &lt;/br&gt;兴趣是做meme和翻译技术文章 &lt;/br&gt;一切均非投资建议</subtitle>
    <logo>https://chainguys.github.io/images/avatar.png</logo>
    <icon>https://chainguys.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Chainguys&apos;Blog</rights>
    <entry>
        <title type="html"><![CDATA[Fuel内幕-2022年10月 (Inside Fuel-October 2022)]]></title>
        <id>https://chainguys.github.io/post/fuel-nei-mu-2022-nian-10-yue-inside-fuel-october-2022/</id>
        <link href="https://chainguys.github.io/post/fuel-nei-mu-2022-nian-10-yue-inside-fuel-october-2022/">
        </link>
        <updated>2022-11-17T02:48:47.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/10/blog-banner-2.png" alt="Inside Fuel — October 2022" loading="lazy"></figure>
<p>Welcome to <strong>Inside Fuel</strong>, our review of technical developments and everything happening on the Fuel Network. Take a moment to catch up on all the latest news.</p>
<p>欢迎来到<strong>Fuel内幕</strong>，我们对技术发展和Fuel网络上发生的一切进行回顾。请拨冗了解所有最新消息。</p>
<h2 id="最新入职-newest-additions-to-fuel">最新入职 (Newest Additions To Fuel)</h2>
<p>Building the fastest modular execution layer would not be possible without an incredible contributor team.  Here are the newest additions to the team this month:</p>
<p>没有一个令人难以置信的贡献者团队，不可能建立最快的模块化执行层。  以下是这个月最新入职的同事：</p>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2022/11/October-2.png" alt="" loading="lazy"></figure>
<h2 id="新闻报道-in-the-news">新闻报道 (In The News)</h2>
<figure data-type="image" tabindex="3"><img src="https://fuel-labs.ghost.io/content/images/2022/06/image.png" alt="" loading="lazy"></figure>
<p>According to the <strong>Rust In Blockchain</strong> <a href="https://rustinblockchain.org/newsletters/rib-newsletter-41/">monthly review</a>, Fuel is one of the most active Rust-based projects this October with 316 merged PRs, 236 closed issues, and 143 open issues.  We are ranked fifth right behind Aptos, Parity, Solana, and Sui.</p>
<p>根据<strong>Rust In Blockchain</strong><a href="https://rustinblockchain.org/newsletters/rib-newsletter-41/">月度回顾</a>，Fuel是今年10月最活跃的基于Rust的项目之一，有316个合并的PR，236个关闭的问题，以及143个开放的问题。  我们排名第五，紧随Aptos、Parity、Solana和Sui之后。</p>
<h2 id="️-播客和amas-podcasts-amas">🎙️ 播客和AMAs (Podcasts &amp; AMAs)</h2>
<p><strong>John Adler</strong> gave an <strong>AMA</strong> with <strong>vVv Fund</strong><br>
<strong>John Adler</strong>与<strong>vVv Fund</strong>进行了一次<strong>AMA</strong>。</p>
<p><strong>Camila Ramos</strong> on <strong>Devs Do Something</strong>'s <strong>Podcast</strong><br>
<strong>Camila Ramos</strong>在<strong>Devs Do Something</strong>的播客上发言。</p>
<h2 id="️-工作坊-workshops">⚙️ 工作坊 (Workshops)</h2>
<p><a href="https://youtube.com/watch?v=19tQwOrybzc&amp;t=2442s"><strong>Fullstack Fuel</strong></a>: <em>Writing Smart Contracts in Rust with Sway</em><br>
<a href="https://youtube.com/watch?v=19tQwOrybzc&amp;t=2442s"><strong>Fullstack Fuel</strong></a>: 在Rust中用Sway编写智能合约。</p>
<p><strong><a href="https://youtu.be/_vZaezteYz8">Minority Programmers</a></strong>: <em>Building Smart Contracts on Fuel with Sway</em><br>
<strong><a href="https://youtu.be/_vZaezteYz8">少数派程序员</a></strong>: <em>用Sway在Fuel上构建智能合约</em></p>
<h2 id="sway日-sway-day">🌴 Sway日 (Sway Day)</h2>
<p>We hosted the first edition of <strong>Sway Day</strong>, a monthly discussion about all-things Sway, where we had the chance to have the founders of <a href="https://elix.finance/">Elix Finance</a>, one of the first granted projects on Fuel.</p>
<p>我们举办了第一期<strong>Sway Day</strong>，这是一个关于Sway所有事情的月度讨论，我们有机会请到了<a href="https://elix.finance/">Elix Finance</a>的创始人，这是Fuel上首批授予的项目之一。</p>
<blockquote>
<p>The first episode of Sway Day was a BIG hit 🌴<br>
Special thanks to our guests <a href="https://twitter.com/MauriceWbr?ref_src=twsrc%5Etfw">@MauriceWbr</a> and <a href="https://twitter.com/namakxyz?ref_src=twsrc%5Etfw">@namakxyz</a> from <a href="https://twitter.com/elixfinance?ref_src=twsrc%5Etfw">@elixfinance</a><br>
Some highlights in case you missed it 👇🧵 <a href="https://t.co/ffFZlaJY9Z">https://t.co/ffFZlaJY9Z</a><br>
— Sway (@SwayLang) <a href="https://twitter.com/SwayLang/status/1583478571548278784?ref_src=twsrc%5Etfw">October 21, 2022</a></p>
</blockquote>
<blockquote>
<p>第一期 &quot;Sway Day &quot;是一个巨大的冲击🌴<br>
特别感谢我们的嘉宾<a href="https://twitter.com/MauriceWbr?ref_src=twsrc%5Etfw">@MauriceWbr</a>和 来自<a href="https://twitter.com/elixfinance?ref_src=twsrc%5Etfw">@elixfinance</a>  的<a href="https://twitter.com/namakxyz?ref_src=twsrc%5Etfw">@namakxyz</a></p>
<p>一些亮点，别错过👇🧵 <a href="https://t.co/ffFZlaJY9Z">https://t.co/ffFZlaJY9Z</a></p>
<ul>
<li>Sway (@SwayLang) <a href="https://twitter.com/SwayLang/status/1583478571548278784?ref_src=twsrc%5Etfw">October 21, 2022</a></li>
</ul>
</blockquote>
<h2 id="公开露面-public-appearances">公开露面 (Public Appearances)</h2>
<h3 id="-devcon-波哥大-devcon-bogota">🇨🇴 - Devcon, 波哥大 (Devcon, Bogota)</h3>
<p>We flew to Colombia to attend one of the most significant events of the year, where we participated in various talks:</p>
<p>我们飞往哥伦比亚，参加今年最重要的活动之一，在那里我们参加了各种讲座。</p>
<figure data-type="image" tabindex="4"><img src="https://fuel-labs.ghost.io/content/images/2022/11/image-11.png" alt="" loading="lazy"></figure>
<p>Nick Dodson on a panel about Non-EVM Compatible L2s</p>
<p>Nick Dodson在一个关于非EVM兼容的L2的小组中发言</p>
<ul>
<li>
<p><a href="https://youtu.be/HTFvGjNfBeU">New Paradigms by Non-EVM Compatible L2s ft. Nick Dodson</a></p>
</li>
<li>
<p>Scaling Ethereum with the Fastest Modular Execution Layer, by John Adler</p>
</li>
<li>
<p><a href="https://youtu.be/2HP9MEUa1GQ">Machismo, Remittance, &amp; Inflation: Scaling Ethereum for Widespread Adoption in LATAM, by Camila Ramos</a></p>
</li>
<li>
<p><a href="https://youtu.be/HTFvGjNfBeU">非EVM兼容L2的新范例 作者：Nick Dodson </a></p>
</li>
<li>
<p>用最快的模块化执行层扩展以太坊，作者：John Adler</p>
</li>
<li>
<p><a href="https://youtu.be/2HP9MEUa1GQ">谈到以太坊，我想说的是：&quot;以太坊是一个很好的平台，它能让我们的生活变得更美好。以太坊在拉美地区的广泛采用，作者：Camila Ramos</a></p>
</li>
</ul>
<h2 id="-里斯本-lisbon">🇵🇹 - 里斯本 (Lisbon)</h2>
<p>We participated in various events in Lisbon this month, here is an overview of a few of them:</p>
<p>我们本月在里斯本参加了各种活动，以下是其中一些活动的概述：</p>
<h3 id="trgc圆桌谈话-trgc-panel">TRGC圆桌谈话 (TRGC Panel)</h3>
<p><a href="https://twitter.com/IAmNickDodson">Nick Dodson</a> was on stage during the panel organized by <a href="https://twitter.com/trgcapi"><strong>TRGC</strong></a> intituled: <em>Post Tornado Cash: Can Web3 Ever Be Truly Decentralized?</em> Watch the replay <a href="https://twitter.com/i/broadcasts/1mnxeRDMbbZKX">here</a>.</p>
<p><a href="https://twitter.com/IAmNickDodson">Nick Dodson</a> 在由 <a href="https://twitter.com/trgcapi"><strong>TRGC</strong></a> 组织的小组讨论会上登台演讲：<em>Post Tornado Cash：Web3 能否永远真正去中心化？</em> 观看重播<a href="https://twitter.com/i/broadcasts/1mnxeRDMbbZKX">此处</a>。</p>
<h3 id="eth-里斯本黑客马拉松-eth-lisbon-hackathon">ETH 里斯本黑客马拉松 (ETH Lisbon Hackathon)</h3>
<p>We sponsored ETH Lisbon, a 3 day-long hackathon during which hackers teamed up to build DApps. Read more about the winners <a href="https://fuel-labs.ghost.io/ethlisbon22-recap/"><strong>here</strong></a>.</p>
<p>我们赞助了 ETH Lisbon，这是一个为期 3 天的黑客马拉松，在此期间黑客们组队构建 DApp。在 <a href="https://fuel-labs.ghost.io/ethlisbon22-recap/"><strong>此处</strong></a> 阅读有关获奖者的更多信息。</p>
<figure data-type="image" tabindex="5"><img src="https://fuel-labs.ghost.io/content/images/2022/11/image-7.png" alt="" loading="lazy"></figure>
<h3 id="starknetcc圆桌谈话-starknetcc-panel">StarknetCC圆桌谈话 (StarknetCC panel)</h3>
<p>Nick Dodson participated in a panel during StarknetCC around <em>high-level-languages implementation on top of Rollups</em>, where he explained the reasons and needs for Sway. Read the <a href="https://twitter.com/fuellabs_/status/1587482177645658113?s=20&amp;t=ZRIKD0_geZIYmcw-G6KD_w">TL;DR</a> or watch the full panel replay <a href="https://youtu.be/3UnRIOmkrs8">here</a>.</p>
<p>Nick Dodson 参加了 StarknetCC 期间，围绕 Rollups 之上的高级语言实施的小组讨论，他在会上解释了 Sway 的原因和需求。阅读 <a href="https://twitter.com/fuellabs_/status/1587482177645658113?s=20&amp;t=ZRIKD0_geZIYmcw-G6KD_w">TL;DR</a> 或在<a href="https://youtu.be/3UnRIOmkrs8">此处</a>观看完整的圆桌谈话回放 .</p>
<figure data-type="image" tabindex="6"><img src="https://fuel-labs.ghost.io/content/images/2022/11/image-14.png" alt="" loading="lazy"></figure>
<hr>
<h2 id="技术更新-technical-updates">技术更新 (Technical Updates)</h2>
<h3 id="fuelup">Fuelup</h3>
<h4 id="fuelup是什么-what-is-fuelup">Fuelup是什么 (What is Fuelup?)</h4>
<blockquote>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> is the official package manager and multiplexer for <a href="https://fuel.network/">Fuel</a> that installs <strong>The Fuel Toolchain</strong> from the official release channels. It enables you to easily install pre-packaged toolchains, keep them up to date or even create custom toolchains and switch between them.</p>
<p><a href="https://github.com/FuelLabs/fuelup#installation">Fuelup</a> 是 <a href="https://fuel.network/">Fuel</a> 的官方包管理器和复用器，它从官方发布渠道安装<strong>Fuel工具链 (The Fuel Toolchain)</strong>。它使您能够轻松安装预打包的工具链，使其保持最新状态，甚至创建自定义工具链并在它们之间切换。</p>
<p>Binaries are executed through Fuelup as proxies which allow for flexibility in the execution of tools.</p>
<p>二进制文件通过 Fuelup 作为代理执行，使得工具的执行变得灵活。</p>
</blockquote>
<p>It simplifies building and maintaining Sway applications with <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> and <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> for common platforms.</p>
<blockquote>
<p>它为一般平台使用 <a href="https://github.com/FuelLabs/sway/tree/master/forc">forc</a> 和 <a href="https://github.com/FuelLabs/fuel-core">fuel-core</a> 简化了 Sway 应用的构建和维护。</p>
</blockquote>
<p>The <code>forc-wallet</code> now comes with the toolchain by default, i.e. running <code>fuelup toolchain install latest</code> grabs <code>forc-wallet</code> automatically as well.</p>
<p><code>forc-wallet</code> 现在默认带有工具链，即自动运行 <code>fuelup toolchain install latest</code> grabs <code>forc-wallet</code>。</p>
<hr>
<h2 id="sway">Sway</h2>
<h4 id="sway是什么-what-is-sway">Sway是什么 (What is Sway?)</h4>
<p>Sway is a language for writing smart contracts for the <a href="https://github.com/FuelLabs/fuel-specs">Fuel Virtual Machine (FuelVM)</a>, a blazing-fast, blockchain-optimized VM designed for the Fuel blockchain. It is heavily inspired by Rust and aims to bring modern language development and performance to the blockchain ecosystem. Start learning the <a href="https://twitter.com/SwayLang">Sway language</a> today with the <a href="https://fuellabs.github.io/sway/latest/">Sway Book</a> and the <a href="https://www.youtube.com/watch?v=GKNuaFcPaXc">FuelVM Bootcamp</a>.</p>
<p>Sway 是一种用于为 <a href="https://github.com/FuelLabs/fuel-specs">Fuel 虚拟机 (FuelVM)</a> 编写智能合约的语言，这是一种专为 Fuel 区块链设计的超快、区块链优化的虚拟机。它深受 Rust 的启发，旨在为区块链生态系统带来现代语言开发和性能。立即通过 <a href="https://fuellabs.github.io/sway/latest/">Sway Book</a> 和 [FuelVM Bootcamp](https: //www.youtube.com/watch?v=GKNuaFcPaXc) 来学习吧！</p>
<h3 id="常规更新-general-updates">常规更新 (General Updates)</h3>
<ul>
<li>
<p>New support for generic traits in the type system, allowing the writing of more advanced, composable programs with advanced types;</p>
</li>
<li>
<p>类型系统中对泛型特征的新支持，允许编写更高级、可组合的高级类型程序；</p>
</li>
<li>
<p>Significant improvements to compile times by making optimizations to dead code analysis, Bytecode generation, Type checking, Register allocation, and more;<br>
通过优化死代码分析、字节码生成、类型检查、注册分配等，显着缩短编译时间；</p>
</li>
<li>
<p>New support for <code>asm</code> control flow for previously unsupported cases;<br>
对以前不受支持的情况的 <code>asm</code> 控制流的新支持；</p>
</li>
<li>
<p>A new <code>raw_ptr</code> type and a new <code>**</code> operator;<br>
新的 <code>raw_ptr</code> 类型和新的 <code>**</code> 运算符</p>
</li>
<li>
<p>Rework of method application syntax so that <code>~</code> is no longer needed;<br>
方法应用语法的返工，因此不再需要 <code>~</code> ；</p>
</li>
<li>
<p>New support for adding Turbofish-type arguments (<code>::&lt;T, F&gt;</code>) to method calls;<br>
新支持将 Turbofish 类型的参数 (<code>::&lt;T, F&gt;</code>) 添加到方法调用；</p>
</li>
<li>
<p>An updated way of representing function calls in the compiler backend that helps align the high-level compiler design with our vision of Sway features in the future;<br>
一种在编译器后端表示函数调用的更新方式，有助于使高级编译器设计与我们对未来 Sway 功能的愿景保持一致；</p>
</li>
<li>
<p>Removal of the <code>byte</code> type in favor of using the <code>u8</code> type;<br>
删除 <code>byte</code> 类型来支持使用 <code>u8</code> 类型；</p>
</li>
<li>
<p>Introduce a <code>__revert</code> intrinsic and disallow <code>rvrt</code>, <code>ret</code> and <code>retd</code> in <code>asm</code> blocks;<br>
在 <code>asm</code> 块中引入 <code>__revert</code> 内在函数并禁止使用 <code>rvrt</code>、<code>ret</code> 和 <code>retd</code>；</p>
</li>
<li>
<p>Disallow <code>impl self</code> blocks for <code>Contract</code>;<br>
不允许 <code>impl self</code> 冻结 <code>Contract</code> ；</p>
</li>
<li>
<p>Enable predicate-specific <code>asm</code> checks;<br>
启用谓词特定的<code>asm</code>检查；</p>
</li>
<li>
<p>Detect and disallow multiple methods with the same name;<br>
检测并禁止多个同名方法；</p>
</li>
<li>
<p>Improvements to error recovery during compilation;<br>
改进了编译期间的错误恢复；</p>
</li>
</ul>
<h3 id="标准库更新-standard-library-updates">标准库更新 (Standard Library Updates)</h3>
<ul>
<li>
<p>New function <code>set</code> for the <code>Vec&lt;T&gt;</code> type;<br>
<code>Vec&lt;T&gt;</code> 类型的新函数<code>set</code>；</p>
</li>
<li>
<p>New <code>Root</code>, <code>Logarithm</code>, and <code>BinaryLogarithm</code> traits implemented for <code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code> and <code>U128</code>;<br>
为 u8、u16、u32、u64 和 u128 实现了新的根、对数和二元对数特征；</p>
</li>
<li>
<p>新特征</p>
</li>
<li>
<p>New trait <code>core::ops::Not</code> with method <code>not()</code> to replace the free function <code>core::ops::not(b: bool)</code>;<br>
新特征 <code>core::ops::Not</code> 和方法 <code>not()</code> ，来替换自由函数 <code>core::ops::not(b: bool)</code>；</p>
</li>
<li>
<p>Add <code>StorageMap</code> to the standard library prelude;<br>
将 StorageMap 添加到标准库序曲；</p>
</li>
<li>
<p>Rename <code>transfer_to_output</code> to <code>transfer_to_address</code>;<br>
将 <code>transfer_to_output</code> 重命名为 <code>transfer_to_address</code>；</p>
</li>
<li>
<p>Revamped implementation of <code>send_message</code>;<br>
改进了 <code>send_message</code> 的实现；</p>
</li>
<li>
<p>Remove <code>raw_ptr::addr()</code>;<br>
删除<code>raw_ptr::addr()</code>；</p>
</li>
</ul>
<h3 id="fuel-orchestrator-forc-更新-fuel-orchestrator-forc-updates">Fuel Orchestrator (Forc) 更新-Fuel Orchestrator (Forc) Updates</h3>
<ul>
<li>
<p>New <code>forc-doc</code> plugin for automatically generating documentation from doc comments;<br>
新的 <code>forc-doc</code> 插件，用于从文档评论自动生成文档；</p>
</li>
<li>
<p>Introduce support for <code>[contract-dependencies]</code>  to <code>Forc.toml</code>;<br>
将对<code>[contract-dependencies]</code> 的支持引入<code>Forc.toml</code>；</p>
</li>
<li>
<p>Support for <code>forc-client</code> for signing transactions without <code>stdio</code> prompts;<br>
支持在没有<code>stdio</code> 提示的情况下签署交易的 <code>forc-client</code>；</p>
</li>
<li>
<p>New <code>--silent</code> and <code>--log-level</code> flags;<br>
新的 <code>--silent</code> 和 <code>--log-level</code> 标志；</p>
</li>
</ul>
<h3 id="forc后端-forc-backend">Forc后端 (Forc Backend)</h3>
<ul>
<li>
<p>Better error message when fetching a git dependency failed;<br>
获取 git 依赖项失败时更好的错误消息；</p>
</li>
<li>
<p>Improve how dependencies are fetched when local git sources are available;<br>
改进本地 git 源可用时获取依赖项的方式；</p>
</li>
<li>
<p>Additions to the Sway formatter;<br>
添加了 Sway 格式化程序；</p>
</li>
<li>
<p>Remove Rust integration testing behavior from <code>forc test</code>;<br>
从 <code>forc test</code> 中删除 Rust 集成测试行为；</p>
</li>
<li>
<p>Extract tracing utilities from <code>forc-util</code> into a dedicated <code>forc-tracing</code> plugin;<br>
从<code>forc-util</code>中提取跟踪实用程序到专用的 <code>forc-tracing</code>插件中；</p>
</li>
</ul>
<h3 id="sway语言服务器协议-sway-language-server-protocol-lsp">Sway语言服务器协议- Sway Language Server Protocol (LSP)</h3>
<ul>
<li>
<p>New support for inlay hints for variables;<br>
对变量的嵌入提示的新支持；</p>
</li>
<li>
<p>New support for showing formatted documentation on hover;<br>
新支持在悬停时显示格式化文档；</p>
</li>
<li>
<p>Errors and warnings are now displayed to users inside of their editors;<br>
错误和警告现在会在其编辑器中向用户显示；</p>
</li>
</ul>
<h2 id="fuel核心更新-fuel-core-updates">Fuel核心更新 (Fuel Core Updates)</h2>
<ul>
<li>
<p>Configurable block production modes (instant, interval, hybrid) for Proof of Authority (PoA);<br>
权威证明 (PoA) 的可配置块生产模式（即时、间隔、混合）</p>
</li>
<li>
<p>PoA block signing has been implemented;<br>
已实施 PoA 区块签名；</p>
</li>
<li>
<p>Multi-transaction blocks;<br>
多交易区块；</p>
</li>
<li>
<p>Cross-chain asset bridging to/from ETH;<br>
与 ETH 之间的跨链资产桥接；</p>
</li>
<li>
<p>Coinbase* transactions;<br>
Coinbase* 交易；</p>
</li>
<li>
<p>Generically typed transactions;<br>
一般类型的交易；</p>
</li>
<li>
<p>State opcodes now return whether the storage is unset or zeroed via <code>$rB</code> flag;<br>
状态操作码现在通过 <code>$rB</code> 标志返回存储是未设置还是归零；</p>
</li>
</ul>
<blockquote>
<p>*<strong>Coinbase</strong> refers to the validators paying themselves for processing a block from the transaction fees. Having a coinbase transaction on each block make this process transparent to all users.</p>
<p>*<strong>Coinbase</strong> 指的是验证者为处理一个区块支付自己的交易费用。在每个区块上都有一个 coinbase 交易使这个过程对所有用户透明。</p>
</blockquote>
<h2 id="fuels-rsrust-sdk更新-fuels-rs-rust-sdk-updates">Fuels-rs（Rust SDK）更新 - Fuels-rs (Rust SDK) Updates</h2>
<ul>
<li>
<p>Generate <code>ParamTypes</code> from your JSON ABI <code>TypeApplications</code>;<br>
从您的 JSON ABI <code>TypeApplications</code> 生成<code>ParamTypes</code>；</p>
</li>
<li>
<p>Automatic variable output estimation: no need to guess the variable outputs for your transactions;<br>
自动变量输出估计：无需猜测交易的变量输出；</p>
</li>
<li>
<p>You can now <code>.estimate_tx_dependencies(number_of_tries)</code> do update your transaction with the correct number of variable outputs. The same is coming for contract inputs;<br>
您现在可用 <code>.estimate_tx_dependencies(number_of_tries)</code> ，用正确数量变量输出更新您的交易。合约输入也是如此；</p>
</li>
<li>
<p>Contract instance creation now takes a <code>Bech32ContractId</code>, not a string, improving the type-safety around contract instantiation;<br>
合约实例的创建，现在采用 Bech32ContractId 而不是字符串，从而提高了合约实例化类型的安全性；</p>
</li>
<li>
<p>Notable QoL improvements<br>
显着的QoL质量改善</p>
</li>
<li>
<p>Query the balance from your contract through the <code>contract_instance</code>;<br>
通过 <code>contract_instance</code> 从您的合约中查询余额；</p>
<ul>
<li>
<p>Create <code>Bits256</code> from strings;<br>
从字符串创建 <code>Bits256</code>；</p>
</li>
<li>
<p>Many improvements to the <code>Provider</code> API and many new methods for it;<br>
<code>Provider</code> API 的许多改进和许多新方法；</p>
</li>
</ul>
</li>
</ul>
<h2 id="fuels-tstypescript-sdk更新-fuels-ts-typescript-sdk-updates">Fuels-ts（Typescript SDK）更新 Fuels-ts (Typescript SDK) Updates</h2>
<ul>
<li>
<p>New wallet functionality: vault export;<br>
新的钱包功能：保险库导出；</p>
</li>
<li>
<p>Full support for messages, which will enable bridge communication with the base layer, which is a major upcoming release;<br>
全面支持消息，这将启用与基础层的桥接通信，这是即将发布的主要版本；</p>
</li>
<li>
<p>The wallet now splits into <code>WalletLocked</code> for read-only operations and WalletUnlocked for write operations;<br>
钱包现在分为用于只读操作的 <code>WalletLocked</code> 和用于写入操作的 WalletUnlocked；</p>
</li>
<li>
<p>Automatic variable output estimation;<br>
自动变量输出估计</p>
</li>
</ul>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[“Oh Ottie！” 12月NFT收藏空投：即日起加入白名单！(“Oh Ottie!” NFT Collection Drop in December：Get Whitelisted today!)]]></title>
        <id>https://chainguys.github.io/post/oh-ottie-12-yue-nft-shou-cang-kong-tou-ji-ri-qi-jia-ru-bai-ming-dan-oh-ottie-nft-collection-drop-in-decemberget-whitelisted-today/</id>
        <link href="https://chainguys.github.io/post/oh-ottie-12-yue-nft-shou-cang-kong-tou-ji-ri-qi-jia-ru-bai-ming-dan-oh-ottie-nft-collection-drop-in-decemberget-whitelisted-today/">
        </link>
        <updated>2022-11-07T03:30:28.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*YSjiQ3jrelHE8SmHtSjXyA.png" alt="" loading="lazy"></figure>
<ul>
<li>
<p>Mint Oh Ottie! using native assets bridged from Ethereum, BNB Chain &amp; Polygon<br>
铸币Ottie！使用从以太坊、BNB 链和Polygon跨链原生资产</p>
</li>
<li>
<p>Read Instructions &amp; Whitelist <a href="https://sograph.xyz/space/altlayer/campaign/yVFDYdj1ao">Here</a> from 8 November — 4 December<br>
从 11月8日至12月4日：阅读说明和白名单 [此处]</p>
</li>
</ul>
<hr>
<p>We’ve got some exciting news for you. Following the great feedback we’ve had on our loving mascot Ottie since we introduced him to you all, we’ve decided to release a collection of 2,000 unique Ottie avatars as part of an NFT collection titled <strong>‘<em>Oh Ottie</em>!’</strong></p>
<p>我们有一些让人兴奋的消息要告诉你。自从我们向大家介绍可爱的吉祥物 Ottie 以来，我们收到了很好的反馈，我们决定发布一个包含 2,000 个独特 Ottie 头像的集合，作为 NFT 集合的一部分，标题为 <strong>‘<em>Oh Ottie</em>！’</strong></p>
<p>Each avatar represents Ottie with his different facets — be it hobbies, professions or moods! Each of them will entail special rights and privileges.</p>
<p>每个头像都代表着Ottie的不同方面——无论是爱好、职业还是心情！他们每个人都将有不同的权利和好处。</p>
<p>Similar to the OG Badge Drop, the <strong>Oh Ottie!</strong> mint will showcase Altlayer’s superior flashlayer technology, which enables NFT minting in a gasless manner across EVM and non-EVM chains.</p>
<p>与 OG Badge Drop 类似，<strong>Oh Ottie!</strong> 铸币将展示 Altlayer 卓越的 flashlayer 技术，该技术可以跨 EVM 和非 EVM 链以无gas方式进行 NFT 铸币。</p>
<p>But this time around, we’re taking it to the next level. <strong>Oh Ottie!</strong> NFTs can be minted using native assets bridged from Ethereum, BNB Chain and Polygon, and eventually roll up the assets to Ethereum for trading.</p>
<p>但这一次，我们将其提升到了一个新的水平。 <strong>Oh Ottie！</strong> NFT 可以使用从以太坊、BNB 链和Polygon跨链的原生资产铸币，并最终将资产汇总到以太坊进行交易。</p>
<h2 id="总供应量-total-supply"><strong>总供应量 (Total Supply)</strong></h2>
<p>Of the 2,000 avatars in the <strong>Oh Ottie!</strong> collection:<br>
在 <strong>Oh Ottie!</strong> 系列中的 2,000 个头像中：</p>
<ul>
<li>
<p>1,200 will be minted on our flashlayer at a mint price of 0.08 ETH or equivalent on 9 December<br>
12月9日将在我们的 flashlayer 上以 0.08 ETH 或等值的价格铸币 1,200 个</p>
</li>
<li>
<p>420 will be airdropped to existing OG Badge NFT holders prior to the mint event<br>
420 将在铸币活动之前空投给现有的 OG Badge NFT 持有者</p>
</li>
<li>
<p>180 will be distributed to partner projects and communities for lucky draws before the mint event<br>
180个将在铸币活动前分发给合作项目和社区进行幸运抽奖</p>
</li>
<li>
<p>200 avatars will be specially reserved for future community engagement and partnership usage<br>
200个头像将专门为未来的社区参与和合作伙伴使用而保留</p>
</li>
</ul>
<h2 id="为什么要得到-oh-ottie-nftwhy-get-an-oh-ottie-nft"><strong>为什么要得到 Oh Ottie NFT？Why get an Oh Ottie NFT?</strong></h2>
<p>We’ll be sharing our love for Ottie with our community via online and offline engagement, and social impact activities. Here are some of the privileges for <strong>Oh Ottie!</strong> holders.</p>
<p>我们将通过在线和离线参与，以及社会影响活动与我们的社区分享对 Ottie 的热爱。以下是 <strong>Oh Ottie!</strong> 持有者的一些特权。</p>
<ul>
<li>
<p>Future claim to token/NFT airdrop<br>
未来声索代币/NFT 空投</p>
</li>
<li>
<p>Exclusive access to merchandise and offline events<br>
独家访问商品和线下活动</p>
</li>
<li>
<p>Priority access to testnet validator program<br>
优先访问测试网验证程序</p>
</li>
<li>
<p>AltLayer will represent the community to adopt &amp; sponsor otters in zoos globally including but not limited to Singapore Zoo<br>
AltLayer 将代表社区在全球动物园收养和赞助水獭，包括但不限于新加坡动物园</p>
</li>
</ul>
<h2 id="重要的日子-important-dates"><strong>重要的日子 (Important Dates)</strong></h2>
<ul>
<li>
<p>Whitelisting opens at 18.00 PM SGT on <strong>8 November</strong> and ends on <strong>4 December</strong> at 23.59 PM SGT.<br>
白名单于 <strong>11月8日</strong> 晚上 18:00 SGT 开始，并于<strong>12 月 4 日</strong> 下午 23:59 SGT 结束。</p>
</li>
<li>
<p>On <strong>7 December,</strong> we will publish the how-to-mint guide and open the <strong><em>one-way</em> <em>bridge</em></strong> for you to transfer your ETH, BNB and Matic tokens to our flashlayer.<br>
<strong>12 月 7 日</strong>  我们将发布铸币指南并打开 <strong><em>one-way</em> <em>bridge</em></strong> 供您将您的 ETH、BNB 和 Matic 代币转移到我们的 flashlayer。</p>
</li>
</ul>
<p>Note that there will be only one flashlayer rollup that spans across Ethereum, BNB Chain and Polygon, and supports ETH, BNB and Matic tokens. Users can opt for one or more token types (among ETH, BNB and Matic) to mint, as long as you have sufficient balance of the relevant token on our flashlayer.</p>
<p>请注意，只有一个 flashlayer rollup 跨越以太坊、BNB 链和Polygon，并支持 ETH、BNB 和 Matic 代币。用户可以选择一种或多种代币类型（ETH、BNB 和 Matic）来铸币，只要您在我们的 flashlayer 上有足够的相关代币余额即可。</p>
<p>Also note that you <strong><em>won’t</em></strong> be able to withdraw your bridged token assets on our flashlayer until the mint event is over. Please be mindful of the token amount to bridge for minting.</p>
<p>另请注意，在铸币活动结束之前，您 <strong><em>不能</em></strong>  在我们的 flashlayer 上提取您的跨链代币资产。请注意用于铸币的代币数量。</p>
<h2 id="铸币活动-mint-event"><strong>铸币活动 (Mint Event)</strong></h2>
<p>The mint event lasts for 24 hours and has two parts.</p>
<p>铸币事件持续 24 小时，分为两部分。</p>
<p><strong><em>Part 1 — Private Mint:</em></strong> On 9 December, we’ll start private minting for whitelisted addresses between 12.00 PM — 16.00 PM SGT .<br>
<em>第 1 部分 - 私密铸币：</em>**12 月 9 日，我们将在 12.00 PM - 16.00 PM SGT 之间开始对列入白名单的地址进行私密铸币。</p>
<p><strong><em>Part 2 — Public Mint:</em></strong> Public minting is open for all. It starts at 16.00 PM SGT on 9 December and lasts for the next 20 hours. The one-way bridge will remain open until the mint event is over.<br>
<em>第 2 部分——公开铸币：</em> **公开铸币对所有人开放。它从 12 月 9 日 SGT 下午 16 点开始，持续接下来的 20 个小时。单向跨链桥将保持开放，直到铸币活动结束。</p>
<ul>
<li>
<p>The mint event ends either when all 1,200 avatars are fully minted or when the 24 hour mint period is over.<br>
当所有 1,200 个头像全部铸币完毕或 24 小时铸币期结束时，铸币活动结束。</p>
</li>
<li>
<p>Each wallet address is allowed to mint a maximum of 10 avatars regardless of the token used.<br>
无论使用何种代币，每个钱包地址最多可铸造 10 个头像。</p>
</li>
<li>
<p>Note that only $ETH, $BNB and Matic tokens are supported on our flashlayer. You won’t be able to bridge over other tokens.<br>
请注意，我们的 flashlayer 仅支持 $ETH、 $BNB 和 Matic 代币。您将无法跨越其他代币。</p>
</li>
</ul>
<h2 id="铸币后活动-post-mint-event"><strong>铸币后活动 (Post Mint Event)</strong></h2>
<ul>
<li>
<p>After the end of the mint event, we will automatically bridge all the minted avatars back to Ethereum and all the remaining token assets back to Ethereum, BNB Chain and Polygon via rollup process. You won’t have to bridge your assets back to L1 yourselves.<br>
铸币活动结束后，我们将通过汇总流程，将所有铸币头像自动跨链回以太坊，并将所有剩余的代币资产跨链回以太坊、BNB 链和 Polygon。您不必自己将资产跨链到 L1。</p>
</li>
<li>
<p>Upon receiving your minted avatars on Ethereum mainnet, you will be able to trade the <strong>Oh Ottie!</strong> Collection on Opensea, Looksrare, X2Y2 and Blur, etc<br>
在以太坊主网上收到您铸造的头像后，您将能够在 Opensea、Looksrare、X2Y2 和 Blur 等平台上交易 <strong>Oh Ottie!</strong> 收藏</p>
</li>
</ul>
<h2 id="如何获得空投资格how-can-you-qualify-for-the-airdrop"><strong>如何获得空投资格？(How can you qualify for the airdrop?)</strong></h2>
<p>If you are holders of our existing OG Badge NFTs, you can just sit tight and will automatically receive an airdrop of <strong>Oh Ottie!</strong> avatar prior to our mint event. We will disclose details including snapshot time later.</p>
<p>如果您是我们现有的 OG 徽章 NFT 的持有者，您只需坐好，就会在我们的铸币活动开始前自动收到 <strong>Oh Ottie!</strong> 头像的空投。我们将在稍后披露包括快照时间在内的详细信息。</p>
<h2 id="如何才能有资格参加铸币活动how-can-you-qualify-for-the-mint-event"><strong>如何才能有资格参加铸币活动？(How can you qualify for the mint event?)</strong></h2>
<p>You can increase the odds of getting hold of the <strong>Oh Ottie!</strong> avatars by <strong>joining the whitelisting process.</strong></p>
<p>您可以通过加入白名单流程来增加获得 <strong>Oh Ottie!</strong> 头像的几率。</p>
<p>Please complete the following tasks on <a href="https://sograph.xyz/space/altlayer/campaign/yVFDYdj1ao">this</a> page.</p>
<p>请在 <a href="https://sograph.xyz/space/altlayer/campaign/yVFDYdj1ao">这个</a> 页面上完成以下任务。</p>
<ul>
<li>
<p>Follow <a href="https://twitter.com/alt_layer">Yaoqi Jia</a> on Twitter<br>
在 Twitter 上关注 <a href="https://twitter.com/alt_layer">Yaoqi Jia</a></p>
</li>
<li>
<p>Follow <a href="https://twitter.com/alt_layer">Altlayer</a> on Twitter<br>
在 Twitter 上关注 <a href="https://twitter.com/alt_layer">Altlayer</a></p>
</li>
<li>
<p>Like and Retweet the pinned <strong>Oh Ottie!</strong> <a href="https://twitter.com/alt_layer/status/1589918467377205248">announcement</a><br>
喜欢并转发置顶的****Oh Ottie！** <a href="https://twitter.com/alt_layer/status/1589918467377205248">公告</a></p>
</li>
<li>
<p>Join our <a href="https://discord.gg/altlayer">Discord server</a> and complete the necessary steps<br>
加入我们的 <a href="https://discord.gg/altlayer">Discord 服务器</a> 并完成必要的步骤</p>
</li>
<li>
<p>Connect with your Ethereum wallet address<br>
连接您的以太坊钱包地址</p>
</li>
</ul>
<p>让白名单开始吧！<br>
Let the whitelisting begin!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ETH里斯本活动回顾 (ETH Lisbon Recap)]]></title>
        <id>https://chainguys.github.io/post/eth-li-si-ben-huo-dong-hui-gu-eth-lisbon-recap/</id>
        <link href="https://chainguys.github.io/post/eth-li-si-ben-huo-dong-hui-gu-eth-lisbon-recap/">
        </link>
        <updated>2022-11-04T08:02:12.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/10/EthLisbonRecap-3.png" alt="🇵🇹 — ETH Lisbon Recap" loading="lazy"></figure>
<p>During 3 days (October 28 - 30), hackers from around the world gathered at the Academia das Ciências in Lisbon for hacking. Here is an in-depth look at the winning projects.</p>
<p>在3天内(10 月 28 日至 30 日），来自世界各地的黑客聚集在里斯本的 Academia das Ciências 进行黑客活动。以下是对获奖项目的深入观察。</p>
<hr>
<p>During 3 days (October 28 - 30), hackers from all over the world gathered at the <em>Academia das Ciências</em> in Lisbon for hacking. For this occasion, we sponsored 3 open bounties for bold hackers eager to build on <strong>Fuel</strong> <strong>Beta-1</strong> testnet using <strong>Sway</strong>:</p>
<p>在3天内(10 月 28 日至 30 日），来自世界各地的黑客聚集在里斯本的 Academia das Ciências 进行黑客活动。为此，我们为渴望使用 <strong>Sway</strong> 在 <strong>Fuel</strong> <strong>Beta-1</strong> 测试网上构建的大胆黑客赞助了 3 项公开赏金：</p>
<ul>
<li>🥇 <strong>First Prize 1等奖</strong>  — $3,000</li>
<li>🥈 <strong>Second Prize 2等奖</strong>** — $2,000</li>
<li>🥉 <strong>Third Prize 3等奖</strong>** — $1,000</li>
</ul>
<h2 id="获胜者-the-winners">🏆 获胜者 (The winners)</h2>
<p>Let's go over the winning projects:<br>
让我们一起回顾这些获奖项目</p>
<h3 id="一等奖authsome-first-prize-authsome">🥇 一等奖—Authsome (First Prize — Authsome)</h3>
<p>Authsome implements a multi-signature wallet using the predicate system of the FuelVM and Sway. This wallet is then used as the basis for a pluggable authentication infrastructure, similar to <a href="https://web3auth.io/docs/overview/what-is-web3auth">Web3Auth</a>.</p>
<p>Authsome 使用 FuelVM 和 Sway 的谓词系统实现了一个多签钱包。然后将此钱包用作可插入身份验证基础设施的底层，类似于 <a href="https://web3auth.io/docs/overview/what-is-web3auth">Web3Auth</a>。</p>
<blockquote>
<p>Fuel Predicates<br>
Fuel谓词</p>
<p>Fuel predicates work in a similar way to scripts for pay-to-script-hash (P2SH) transactions in Bitcoin. This offers a number of important advantages over implementing account abstraction on the smart contract layer:</p>
<p>Fuel 谓词的工作方式与比特币中支付-脚本-哈希（P2SH）交易的脚本类似。这给在智能合约层实现账户抽象提供了许多重要的优势。</p>
<ul>
<li>Reduced gas cost, as signature aggregation can be done off-chain and verification can be done as a single step without smart contract function calls;<br>
降低了gas成本，因为签名聚合可以在链外完成，验证可以作为一个单一的步骤完成，不需要调用智能合约函数。</li>
<li>Improved flexibility, because different signature schemes can be swapped in by implementing them as on-chain smart contract libraries and using them in predicates; and<br>
提高了灵活性，因为不同的签名方案可以通过作为链上智能合约库实现进而转换并在谓词中使用而；以及</li>
<li>Minimal state bloat, because predicate byte code is processed once as part of the transaction validation, and then discarded - thus never entering the blockchain state.<br>
最小的状态膨胀，因为谓词字节码作为交易验证的一部分被处理一次，然后被丢弃--因此从未进入区块链状态。</li>
</ul>
</blockquote>
<p>This project leverages the power of account abstraction and multi-signatures to create Web2-like experiences with Web3 custodial properties.</p>
<p>该项目利用帐户抽象和多重签名的力量来创建具有 Web3 托管属性的类似 Web2 的体验。</p>
<p>Check out their demo video below:</p>
<p>在下面查看他们的演示视频：</p>
<iframe width="720" height="540" src="https://www.youtube.com/embed/3CwjZpXR1SM" title="Authsome  ETH Lisbon" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<h3 id="它是如何工作-how-does-it-work">它是如何工作? (How does it work?)</h3>
<p>You first need to log in with an email address and a password of your choice. Authsome will then generate a 2 of 3 addresses multi-signature wallet, which means that you need 2 addresses to execute a transaction or log in to Authsome. Each key will be stored in different places.</p>
<p>你首先需要一个电子邮件和密码登录。然后，Authsome将生成一组2-3个地址的多签钱包，这意味着你需要2个地址来执行交易或登录Authsome。每个密钥将被存储在不同的地方。</p>
<p>Then you're all set to execute blazingly fast payments: You log in with your password to unlock the first key, and the second key is loaded from your browser's local storage.</p>
<p>然后你就可以执行极快的支付了。你用你的密码登录来解锁第一把秘钥，第二把秘钥从你的浏览器的本地存储中加载。</p>
<p>When you confirm your transaction on the Frontend, the DApp will generate a two-signature predicate transaction for each spended UTXO.</p>
<p>当你在前台确认你的交易时，DApp将为每个花费的UTXO生成一个双签名的谓词交易。</p>
<p>The real benefit of this application is that it supports spending multiple UTXOs with distinct predicate data.</p>
<p>这个应用真正的好处是，它支持用不同的谓词数据来花费(影响)多个UTXO。</p>
<p>For more information, check out their <a href="https://github.com/authsome/authsome">GitHub repository</a>.</p>
<p>欲了解更多信息，请查看他们的<a href="https://github.com/authsome/authsome">GitHub仓库</a>。</p>
<h3 id="二等奖fuel价格预言机-second-prize-fuel-price-oracle">🥈 二等奖—Fuel价格预言机 (Second Prize — Fuel Price Oracle)</h3>
<p>Fuel Price Oracle implements a simple ETH - DAI tokens price oracle. This project allows retrieving token prices from the outside world on the Fuel chain with a Sway smart contract.</p>
<p>Fuel价格预言机实现了一个简单的ETH-DAI代币的价格预言机。这个项目允许使用Sway智能合约从外界检索Fuel链上的代币价格。</p>
<p>Check out their demo video below:</p>
<p>请看下面的演示视频:</p>
<iframe width="720" height="540" src="https://www.youtube.com/embed/geJ-aKOZQTU" title="Fuel price oracle (ETH, DAI) demo" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<p>For more information, check out their <a href="https://github.com/chlenc/fuel-price-oracle">GitHub repository</a>.</p>
<p>欲了解更多信息，请查看他们的<a href="https://github.com/chlenc/fuel-price-oracle">GitHub仓库</a>。</p>
<h3 id="三等奖资本家猪-third-prize-capitalist-pigs">🥉 三等奖—资本家猪 (Third Prize — Capitalist Pigs)</h3>
<p>Enter the world of Capitalist Pigs, a Gamify staking for fees in a DeFi project using a set of NFTs.</p>
<p>进入Capitalist Pigs的世界，这是一个使用一套NFTs在DeFi项目中质押产生费用(收益)的Gamify。</p>
<p>Check out their demo video below:</p>
<p>请看下面他们的演示视频</p>
<iframe width="720" height="407" src="https://www.youtube.com/embed/WeVj2tXGa-M" title="Capitalist Pigs - 30 October 2022" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<h3 id="它如何工作-how-does-it-work">它如何工作? (How does it work?)</h3>
<p>First of all, you begin by generating a burner wallet on the upper right corner of the DApp. To start playing, you need to claim a <strong>Pig</strong>, a stakable collectible NFT asset. By staking it, you will earn <strong>Truffles</strong> and <strong>staking fees</strong> represented by <strong>Bacon</strong>. Truffles can be turned into <strong>Piglets</strong>. With those Piglets, you have 2 possibilities: you can either turn them into Pigs or delegate them to existing Pigs to increase their staking fee generation. And this is it, you're a Capitalist Pig! You can check in the lower right corner the evolution of your supply (Pigs, Piglets, Truffles, and Bacon).</p>
<p>首先，你开始在DApp的右上角生成一个燃烧钱包。要开始玩，你需要认领一只<strong>猪</strong>，这是一种可收藏的NFT资产。通过抵押，你将获得<strong>松露</strong>和<strong>培根</strong>代表的<strong>抵押费。松露可以转化为小猪</strong>。对于这些小猪，你有两种可能：你可以把它们变成小猪，或者把它们委托给现有的小猪，来增加它们的产出。就这样，你就是一只资本家猪了！你可以在右下角检查。你可以在右下角检查你的供应（猪、小猪、松露和培根）的演变。</p>
<p>Try it out now <a href="https://capitalistpi.gs/">here</a>.</p>
<p>现在就试试吧<a href="https://capitalistpi.gs/">这里</a>。</p>
<p>For more information, check out their <a href="https://github.com/afsardo/capitalist-pigs">GitHub repository</a>.</p>
<p>欲了解更多信息，请查看他们的<a href="https://github.com/afsardo/capitalist-pigs">GitHub仓库</a>。</p>
<hr>
<h1 id="今天就开始在fuel构建吧-start-building-on-fuel-today">今天就开始在Fuel构建吧! （Start Building On Fuel Today）</h1>
<blockquote>
<p>Building on Fuel means breaking free from the constraints of monolithic blockchains that have held us back.<br>
以 Fuel 为基础意味着摆脱阻碍我们前进的单片区块链的限制。</p>
</blockquote>
<h2 id="fuel的开发人员资源-developer-resources-for-building-with-fuel">Fuel的开发人员资源 (Developer Resources for Building with Fuel)</h2>
<ul>
<li>
<p>A step-by-step guide to building a full-stack dapp on Fuel can be found <a href="https://github.com/camiinthisthang/fullstack-fuel/blob/main/README.md">here</a>.<br>
<a href="https://github.com/camiinthisthang/fullstack-fuel/blob/main/README.md">这里</a> 可以找到在 Fuel 上构建全栈 dapp 的分步指南</p>
</li>
<li>
<p>The <strong>Fuel Book</strong> can be found <a href="https://fuellabs.github.io/fuel-docs/master/index.html">here</a>. It contains everything you need to know about Fuel, from its modular design to its key features.<br>
<strong>Fuel全书</strong> 可以在 <a href="https://fuellabs.github.io/fuel-docs/master/index.html">这里</a> 找到。它包含您需要了解的有关 Fuel 的所有信息，从模块化设计到主要功能。</p>
</li>
<li>
<p>The <strong>Sway Book</strong> can be found <a href="https://fuellabs.github.io/sway/v0.24.1/">here</a>.<br>
<strong>Sway全书</strong> 可以在 <a href="https://fuellabs.github.io/sway/v0.24.1/">这里</a> 找到。</p>
</li>
</ul>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Alpha Venture DAO 和 Sei 携手推动 DeFi 创新 (Alpha Venture DAO and Sei Join Forces to Supercharge DeFi Innovations)]]></title>
        <id>https://chainguys.github.io/post/alpha-venture-dao-he-sei-xi-shou-tui-dong-defi-chuang-xin-alpha-venture-dao-and-sei-join-forces-to-supercharge-defi-innovations/</id>
        <link href="https://chainguys.github.io/post/alpha-venture-dao-he-sei-xi-shou-tui-dong-defi-chuang-xin-alpha-venture-dao-and-sei-join-forces-to-supercharge-defi-innovations/">
        </link>
        <updated>2022-11-03T02:06:15.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://blog.seinetwork.io/content/images/size/w2000/2022/11/FgannAiXEAAUKG7.jpg" alt="Alpha Venture DAO and Sei Join Forces to Supercharge DeFi Innovations" loading="lazy"></figure>
<p><em>Sei brings hands-on mentorship to Alpha Incubate Batch 2, a bespoke DeFi incubation program that serves as your Build Partner</em><br>
<em>Sei 为 Alpha Incubate Batch 2 带来实践指导，作为构建的合作伙伴，这是一个定制的 DeFi 孵化计划。</em></p>
<hr>
<p><a href="https://www.globenewswire.com/Tracker?data=y2KLbsD6XLpIrFf5U4-mTzyCGy_mH4juTq96w1MjUsooERoOgeq_rl_QGb1ckaNm1dxYIbwEsNbtUe7jRLErSg==">Sei</a>, a first sector specific Layer 1 specialized for trading and fastest chain to finality, joins together with <a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlZnbH7O7_d5yvL7PWJicpjPB87KfR1qeWUGGH6ToQi2NQB4M7BzHOCsMJrDfbKX6lMsPVyIIJs_l8LCh-be03QU=">Alpha Venture DAO</a>, a renowned Web 3.0 venture builder, to deliver the most competitive incubation program, ‘<a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlSOe2M-i9XQdUEgwX3S6PoEmC2-4Y54KEX-SUxWZqjRcb-f7v9DXEDNLHA6gbIqTg5WgDsOIOWy-EMtrUv2bc_TAUi7jSwfu5Bsheu7ZRs_o"><strong>Alpha Incubate Batch 2</strong></a>’ to DeFi builders. We collaborate to give innovators with hands-on mentorship experience in creating simple, secure, scalable dApps on Sei and to accelerate the growth of DeFi projects.</p>
<p><a href="https://www.globenewswire.com/Tracker?data=y2KLbsD6XLpIrFf5U4-mTzyCGy_mH4juTq96w1MjUsooERoOgeq_rl_QGb1ckaNm1dxYIbwEsNbtUe7jRLErSg==">Sei</a>是第一个专门用于交易的特定layer1，也是最快完成交易的链条，它与<a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlZnbH7O7_d5yvL7PWJicpjPB87KfR1qeWUGGH6ToQi2NQB4M7BzHOCsMJrDfbKX6lMsPVyIIJs_l8LCh-be03QU=">Alpha Venture DAO</a>，一个著名的Web 3.0风投建设者联合起来，向DeFi建设者提供最具竞争力的孵化计划，&quot;<a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlSOe2M-i9XQdUEgwX3S6PoEmC2-4Y54KEX-SUxWZqjRcb-f7v9DXEDNLHA6gbIqTg5WgDsOIOWy-EMtrUv2bc_TAUi7jSwfu5Bsheu7ZRs_o"><strong>Alpha Incubate Batch</strong></a>。我们的合作是为了给创新者提供在Sei上创建简单、安全、可扩展dApps的实践指导经验，并加速DeFi项目的发展。</p>
<p><strong>Alpha Incubate Batch 2</strong> is a 12-week DeFi-focused program that provides guidance, resources and support to innovative startups. We analyze each project 1 by 1 to find their areas of need and pair them with top-tier investors, operators, and founders who provide advice on strategy and the steps that incubatees should take to get to their milestones and move from 0 to 1 through the program. In short, successful candidates will receive personalized actionable steps specific to their sector and stage. These bespoke mentorships will be led by mentors from the <strong>Alpha Network</strong>, such as investors and operators from <strong>The Spartan Group, Nansen, 1Kx, Parafi Capital,</strong> and many others, including <strong>Sei</strong>.</p>
<p><strong>Alpha Incubate Batch 2</strong>是一个为期12周，以DeFi为重点的项目，给予创新创业公司指导、资源和支持。我们对每个项目进行逐一分析，找到其需求领域，并将他们与顶级投资者、运营商和创始人配对，由他们提供战略建议和被孵化者的未来行动，进而助力其达到里程碑，并通过该项目从0到1。简而言之，成功的候选人将收到针对其行业和阶段的个性化可实操指导。这些定制的指导将由来自<strong>Alpha网络的导师领导，例如来自</strong>斯巴达集团、南森、1Kx、Parafi资本<strong>和许多其他公司的投资者和经营者，包括</strong>Sei。</p>
<p>Sei has one of the most well-rounded ecosystems fully equipped to support DeFi projects to success.  The chain emphasizes reliability, security and high throughput above all else, enabling an entirely new echelon of ultra-high performance DeFi products built on top. By exploring the new design space in between app-chains and general purpose Layer 1's, Sei has carefully selected for a unique set of tradeoffs that make its Layer 1 the optimal environment for DEXs. In this program, projects will have the opportunity to get personalized mentorship from Sei and tap into a community of industry experts that will help them raise funds from top-tier investors hand-selected by Alpha Venture DAO after the Demo Day. Moreover, startups will also be fast tracked to be considered for grants from Sei, receive marketing support, and many more perks that builders can leverage. With the addition of Sei to our ecosystem, we hope to incubate the next generation of disruptive DeFi innovations that raise the standard for all DeFi projects, and move towards mass-adoption.</p>
<p>Sei拥有最全面的生态系统之一，完全有能力支持DeFi项目取得成功。Sei链强调可靠性、安全性和高吞吐量，使建立在上面的超高性能DeFi产品形成了一个全新的梯队。通过探索介于应用链和通用layer1之间的新设计空间，Sei已经精心选择了一套独特的折衷方案，使其layer1成为DEX的最佳环境。在这批孵化中，参与的项目将有机会得到Sei的个性化指导，并进入一个行业专家社区，帮助他们在演示日之后从Alpha Venture DAO精心挑选的顶级投资者那里筹集资金。此外，初创企业还将被快速考虑获得Sei的资助，获得营销支持，以及更多建设者可以利用的福利。随着Sei加入我们的生态系统，我们希望孵化下一代颠覆性的DeFi创新，提高所有DeFi项目的标准，并朝着大规模普及的方向发展。</p>
<p>The application window is now open until <strong>November 27, 2022 at 11:59pm UTC.</strong> Builders can apply <a href="https://www.globenewswire.com/Tracker?data=E2Osx27KvG8nMdskMAYYT1BJBamM--APtD6c4ZFSYH_X_DgWiBGMC5rWA3nQZUJ8Q9t9UEn7XG27m1l-OvgXtQ==">here</a> to join the Alpha Incubate Batch 2 program.</p>
<p>申请窗口现在开放，直到2022年11月27日11:59pm UTC。**建设者可以申请<a href="https://www.globenewswire.com/Tracker?data=E2Osx27KvG8nMdskMAYYT1BJBamM--APtD6c4ZFSYH_X_DgWiBGMC5rWA3nQZUJ8Q9t9UEn7XG27m1l-OvgXtQ==">这里</a>加入Alpha孵化器第二批项目。</p>
<p><em>Any questions regarding the application process can be directed to <a href="https://www.globenewswire.com/Tracker?data=zHKtHbT12Ubg3VrSoR7_odM8iyClz90d6iiN-KegNk3ub_LNBVFYqoV_dC9nX0Xn_-LTGSZEm1kUgTMv3FcFEkGofgvxR44-4lLpc7XRFuuZkyOkl3Xe77WimLdIEP43">here</a>.<br>
任何关于申请过程的问题都可以直接联系<a href="https://www.globenewswire.com/Tracker?data=zHKtHbT12Ubg3VrSoR7_odM8iyClz90d6iiN-KegNk3ub_LNBVFYqoV_dC9nX0Xn_-LTGSZEm1kUgTMv3FcFEkGofgvxR44-4lLpc7XRFuuZkyOkl3Xe77WimLdIEP43">这里</a>。</em></p>
<p>&quot;We are confident that our partnership with Sei will bring immense value to Web 3.0 builders through the Alpha Incubate Batch 2,” said Tascha Punyaneramitdee, Project Lead and Co-founder of Alpha Venture DAO. “Given Sei is one of the most user-friendly layer-1 blockchains that also provides tools and tutorials to help builders easily onboard and get started, and especially with the direct mentorship from Sei through the Alpha Incubate program that is tailored for each of our incubatees, this will definitely accelerate the growth of DeFi projects that are of high-quality.”</p>
<p>&quot;我们相信，我们与Sei的合作将通过Alpha Incubate Batch 2为Web 3.0建设者带来巨大的价值，&quot;Alpha Venture DAO的项目负责人和联合创始人Tascha Punyaneramitdee说。&quot;鉴于Sei是最方便用户的layer1区块链之一，还提供工具和教程，帮助建设者轻松上手，尤其是通过Alpha Incubate项目，Sei为我们每个孵化者量身定做的直接指导，这肯定会加速高质量的DeFi项目的发展。&quot;</p>
<p>“We are thrilled to join the most competitive incubation program through our partnership with Alpha Venture DAO, helping to accelerate Web 3.0 startups exploring the rapidly growing DeFi design space,” said Dan Edlebeck, Head of Ecosystem at Sei. “Alpha Incubate Batch 2 will deliver multiple exciting, scalable dApps through this cohort. I'm interested to see which DeFi applications are born and expand the Sei ecosystem leveraging Batch 2 program mentors' expertise, network, and long-term support.”</p>
<p>&quot;我们很高兴通过与Alpha Venture DAO的合作加入最具竞争力的孵化计划，帮助加速Web 3.0初创企业探索快速增长的DeFi设计领域，&quot;Sei公司生态系统主管Dan Edlebeck说。&quot;Alpha Incubate Batch 2将通过这批孵化提供多个令人兴奋、可扩展的dApps。我有兴趣看到哪些DeFi应用的诞生，并利用第2批(Batch 2)项目导师的专业知识、网络和长期支持来扩大Sei生态系统。&quot;</p>
<p><strong>关于Alpha Venture DAO (About Alpha Venture DAO)</strong></p>
<p><a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlbUrMwDByHLqoU3774qnIjLx28lGvJt-y6U0eW_9Hwtp-8vCgl9xq4k3jUizpCAgGFiCpCBonhl91FnAc1d4NCo=">Alpha Venture DAO</a> is a community-driven venture builder that builds and incubates Web 3.0 decentralized applications (dApp). Alpha Venture DAO is the team behind Alpha Homora, the top leveraged yield farming protocol that was ranked in the Top 10 DeFi protocol. Its vision is to become a multi-chain dApp ecosystem. By being a part of Alpha Venture DAO, anyone can build, contribute, and own Web 3.0 innovation. Builders now have a complete ecosystem to bootstrap their Web 3.0 projects.</p>
<p><a href="https://www.globenewswire.com/Tracker?data=b8zfepe181ZtyeY-2vcAlbUrMwDByHLqoU3774qnIjLx28lGvJt-y6U0eW_9Hwtp-8vCgl9xq4k3jUizpCAgGFiCpCBonhl91FnAc1d4NCo=">Alpha Venture DAO</a>是一个社区驱动的风险构建者，建立和孵化Web 3.0去中心化应用（dApp）。Alpha Venture DAO是Alpha Homora背后的团队，Alpha Homora是顶级的杠杆收益协议，曾被列入Top 10 DeFi协议。它的愿景是成为一个多链dApp生态系统。通过成为Alpha Venture DAO的一部分，任何人都可以建立、贡献和拥有Web 3.0创新。建设者现在有一个完整的生态系统来引导他们的Web 3.0项目。</p>
<p>Website 网站: <a href="https://www.globenewswire.com/Tracker?data=Fc_qTlMjBtPItlJk_BZn2M8I0zhCE4EsSlNppUbSzDuIafQHBdVS8d4QXfejE92mSORE_BhWGOhCMOObA04G_9z_t1YyjjqqVF4B9U6XGO4=">https://alphaventuredao.io/</a></p>
<p>Twitter 推特: <a href="https://www.globenewswire.com/Tracker?data=Fc_qTlMjBtPItlJk_BZn2FrjeM8HAk3Wo4FTRPnOSZT9MRrBftRs6zPBvLpGX827yhVDfMbieN7IGN3NPi62I91MoABUsKRjU16eGTYTQgDZHu5X9fTy-h90mrPeMjL6">https://twitter.com/alphaventuredao</a></p>
<p><strong>关于Sei (About Sei)</strong></p>
<p><a href="https://www.globenewswire.com/Tracker?data=Y-8Un8RH5mFnkKszqYslY6PIVrSCqoODNgmiHPATJISGpUxOXyQyHg285vdYOiPasBsALorE2VpjOrOVRWUJBQ==">Sei</a> serves as plumbing for the future financial system - infrastructure to support capital markets, starting with exchanges. As the first Layer 1 specialized for trading, Sei is the fastest chain to finality, optimizing every layer of its stack to give exchanges an unfair advantage. Exchanges are the killer app of crypto, but current Layer 1s hold them back. Most L1s fall into two extremes, general purpose and app-specific. Sei unlocks a new design space in between as a sector-specific L1. There are currently 60+ teams from Solana, Polkadot, Terra, and NEAR building on top of Sei going into mainnet launch. Sei is backed by Multicoin, Delphi, Tangent, and several MMs like Hudson River Trading, GSR.</p>
<p><a href="https://www.globenewswire.com/Tracker?data=Y-8Un8RH5mFnkKszqYslY6PIVrSCqoODNgmiHPATJISGpUxOXyQyHg285vdYOiPasBsALorE2VpjOrOVRWUJBQ==">Sei</a>作为未来金融系统的管道--支持资本市场的基础设施，从交易所开始。作为第一个专门用于交易的layer1，Sei是实现终态最快的链条，优化其技术栈的每一层，使交易所具有无可比拟的优势。交易所是加密货币的杀手级应用，但目前的layer1却阻碍了其发展。大多数L1属于两个极端，即通用型和特定应用型。Sei作为特定场景的L1，在两者之间解锁了一个新的设计空间。目前有60多个来自Solana、Polkadot、Terra和NEAR的团队在Sei的基础上进行建设，准备进入主网发布。Sei得到了Multicoin、Delphi、Tangent和几个MM的支持，如Hudson River Trading、GSR。</p>
<p>Follow Sei 关注Sei: <a href="https://www.globenewswire.com/Tracker?data=gJV1aps37SgJXrYurIhxNFLNIzjD7uwlWlWi7904kMBwDRWJ_IPig4-covnDFjykmv0MqykIoFPGzQQollUtgA==">Twitter</a> | <a href="https://www.globenewswire.com/Tracker?data=8NshhCUvF7cs4fWULYbggxVffsazGYDW1kd_umJSRI-yJqZqUFZCY845mn0zQ8HVEuUkTEeFQz4A9FTE0qBzyA==">Discord</a> | <a href="https://www.globenewswire.com/Tracker?data=gC7edtvYm2bed_6lTKfcyF4yQrhSt92ssqpESw6Dw3sz9OL6cp4R3-DUa209J4_jW-BQkRqVLfYn36-PExAeZQ==">Telegram</a> | <a href="https://www.globenewswire.com/Tracker?data=c5Z9k80VYenqHkiocr46Eyd55foNuU7j1urr2KSsZqR3S91fgZITgml7_03m0NwGshqrBs9XgklklcKduSHZJw==">Website</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[试播回顾!Alt View 欢迎来自以太坊基金会的 Barnabé Monnot, 看看我们都聊了什么? (Pilot recap! Alt View welcomed Barnabé Monnot from the Ethereum Foundation and here’s everything we chatted about)]]></title>
        <id>https://chainguys.github.io/post/shi-bo-hui-gu-alt-view-huan-ying-lai-zi-yi-tai-fang-ji-jin-hui-de-barnabe-monnot-kan-kan-wo-men-du-liao-liao-shi-me-pilot-recap-alt-view-welcomed-barnabe-monnot-from-the-ethereum-foundation-and-heres-everything-we-chatted-about/</id>
        <link href="https://chainguys.github.io/post/shi-bo-hui-gu-alt-view-huan-ying-lai-zi-yi-tai-fang-ji-jin-hui-de-barnabe-monnot-kan-kan-wo-men-du-liao-liao-shi-me-pilot-recap-alt-view-welcomed-barnabe-monnot-from-the-ethereum-foundation-and-heres-everything-we-chatted-about/">
        </link>
        <updated>2022-11-01T11:55:19.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*49kLlkhgxO0PF8EKRajiQA.png" alt="" loading="lazy"></figure>
<p>We kick off our Youtube show Alternative View or ‘Alt View’ this week! A no fuss, knowledge-focussed content channel for all things crypto, blockchain, L2s, scalability, Web3 and more, we will be hosting numerous industry leaders and researchers who are at the top of their game. For our pilot episode, we were honoured to have <a href="https://barnabemonnot.com/">Barnabé Monnot</a> from the Robust Incentives Group (RIG), Ethereum Foundation. His research expertise spans game theory, like large systems, crypto economics, and also decentralised systems. Here’s a quick summary on what he had to say on the subject of rollups, PBS, MEV, and the general state of L2s today.</p>
<p>我们本周开始了 Youtube 节目 Alternative View 或“Alt View”！对于加密、区块链、L2、扩容、Web3 等所有事物，我们将提供一个简单、以知识为中心的内容频道，我们将接待众多处于行业领先地位的行业领导者和研究人员。至于试播集，我们很荣幸邀请到来自以太坊基金会稳健激励小组 (RIG) 的 <a href="https://barnabemonnot.com/">Barnabé Monnot</a>。他的研究专长涵盖博弈论，如大型系统、加密经济学以及去中心化系统。以下是关于他在以下内容的快速总结：对汇总、PBS、MEV 和今天 L2 一般状态不得不说的话。</p>
<p>Catch the <a href="https://www.youtube.com/watch?v=viJqYMi6DMo">full episode</a> on our Youtube channel. Don’t forget to hit Subscribe!</p>
<p>我们的 Youtube 频道上可以观看 <a href="https://www.youtube.com/watch?v=viJqYMi6DMo">完整剧集</a>。不要忘记点击订阅！</p>
<p><strong>Summary</strong><br>
总结</p>
<ul>
<li>
<p><a href="https://barnabemonnot.com/">Barnabé</a> first touched upon proposal builder separation (PBS), a design philosophy for protocol. The idea behind it is that in block construction (<em>the roles that validators today have in the system of making blocks</em>) there are specialised aspects, which can potentially be done by people rather than the validators themselves.<br>
<a href="https://barnabemonnot.com/">Barnabé</a> 首先谈到了提案构建器分离 (PBS)，这是一种协议的设计理念。其背后的想法是，在区块构建中（<em>如今验证者在制作区块的系统中所扮演的角色</em>）有一些专门的方面，这些方面可能由(众)人而不是验证者自己来完成。</p>
</li>
<li>
<p>He explained: “<em>We can outsource bouts of block construction to players or to entities that are not necessarily part of the protocol. And the rationale behind the scenes, but do you have these filter things that intervene in block construction, you always ensure that block verification, so the fact that the data, so even full nodes that are not participating in the consensus, they are still able to verify the work. Verification remains cheap</em>.” Specialised parts of block construction are done by actors who have maybe better resources or better knowledge of how to do it.<br>
他解释说：“<em>我们可以将区块构建外包给玩家或不一定是协议一部分的实体。幕后的道理，是你有没有这些过滤器介入区块构建的东西，(如果)你总是确保区块验证，所以数据的事实(是)，即使是不参与共识的全节点，他们仍然能够来验证工作。验证仍然很便宜</em>。”区块构建的专门部分由可能拥有更好资源或更了解如何操作的参与者完成。</p>
</li>
<li>
<p>There are many ways to formalise PBS. Question is, what is the best way to do it? Most of PBS is done out of protocols. But when you see that the protocol starts depending so heavily on a third party network, but the protocol doesn’t necessarily have a view into it, there should be considerations about whether some of it can be brought back into the protocol. However, one must exercise caution before bringing too much into the protocol first as making changes to a protocol can be complicated.<br>
有很多方法可以使 PBS 形式化。问题是，最好的方法是什么？大部分 PBS 都是在协议之外完成的。但是当你看到协议开始严重依赖第三方网络，但协议不一定对其有态度时，应该考虑是否可以将其中的一部分带回协议中。但是，在对协议进行过多更改之前，必须谨慎行事，因为对协议进行更改可能会很复杂。</p>
</li>
<li>
<p><strong><em>MEV (Maximal extractable value) and PBS:</em></strong> Our guest stated that MEV is a deep reason why we are getting to PBS in a more formalised way. He explained: “MEV is when you send a transaction, as a user, sometimes your transaction exposes more value that can be captured. For instance, if you do a trade, there might be a possible arbitrage after your trade. And so people will see your transaction, they really want to be the next transaction, so that they can capture that arbitrage. And so to to extract any value, you need, kind of two things you need first, knowledge, so information that this is a strategy that I can deploy and capture the value. And the second thing, which is I would say, not necessary, but it’s kind of ultimate power is to be the proposer.” The power really lies in the hands of the proposer.<br>
<em><strong>MEV（最大可提取值）和 PBS</strong></em>  我们的客人表示，MEV 是我们以更正式方式进入 PBS 的深层原因。他解释说：“MEV 是当您发送交易时，作为用户，有时您的交易会暴露更多可捕获的价值(被别人截胡)。例如，如果您进行(可能存在套利)的交易，别人会看到你的交易，那他们真的很想成为下一笔交易，这样就可以抓住套利。因此，要提取任何价值，您首先需要两件事，即知识，这是我可以部署和获取价值的策略的信息。第二件事，我会说，没有必要，但它是一种终极权力，就是成为提议者/提案人。”权力真正掌握在提议者的手中。</p>
</li>
<li>
<p><strong><em>Outsourcing for a fairer market?</em></strong> <a href="https://barnabemonnot.com/">Barnabé</a> noted that PBS might have a positive impact, if you are able to outsource and provide a fair market for everyone, when everybody kind of has the same return, there is no economies of scale. But you have to be very sophisticated to be a good builder, However, a common problem within this is the principal-agent problem — the idea that you’re outsourcing things to someone, that person might not share the same value function, as you’re saying, we might not want to make the block the way you would have made. So both good because you get more, but also bad because your preferences as a proposer might not be shared by the builder. One has to make a trade off between providing censorship resistance to the network and getting the best value block.<br>
<em><strong>为更公平的市场而外包？</strong></em> <a href="https://barnabemonnot.com/">Barnabé</a> 指出，如果能够外包并为每个人提供公平的市场，当每个人收益率都差别不大，没有规模经济时，PBS 可能会产生积极影响的收益。但是您必须非常成熟才能成为一名优秀的建设者，其中的一个常见问题是委托代理问题-您将事物外包给某人的想法，该人可能与您共享相同的价值函数，意思是，我们可能不想按照您的方式生成区块。因此，这既是好事，因为你得到了更多，但也不好，因为你作为提议者的偏好可能不会被建造者分享。人们必须在为网络提供审查阻力和获得最佳价值区块之间做出权衡。</p>
</li>
<li>
<p><strong><em>Let’s talk rollups! Where is there value in using rollups?</em></strong> When you could get savings in rollups, this motivates the end users to transact and use the solutions more. In terms of value inflow, one must understand how rollups derive economic value before they use it in their operations. Roll up operators need to pay for their full nodes, <em>or</em> they need to pay for when they have to make proofs. Basically, there are many ways value can get distributed through the chain pipeline.<br>
<strong><em>让我们谈谈汇总！使用汇总有什么价值？</em></strong> 当您可以在使用汇总时获得储蓄，这会激励最终用户进行交易并更多地使用解决方案。在价值流入方面，必须了解，汇总如何在将其用于运营之前获得经济价值。 R汇总运营商需要为他们的完整节点付费，或者他们需要在必须制作证明时付费。基本上，价值可以通过多种方式通过链式管道进行分配。</p>
</li>
<li>
<p><strong>Where are L2 scaling solutions at right now?</strong> According to <a href="https://barnabemonnot.com/">Barnabé</a>, we’re not exactly where we thought we would be maybe a year ago. There’s definitely been a lot more adoption for rollups than previously. Perhaps we had higher expectations of where the market would be. For instance, during the development cycles that went into making the merge happen, which is like a very complicated update. In reality it takes a lot longer to get things into production, especially elements that involve a huge piece of engineering. This is clear for instance when you see Bedrock for Optimism, Nitro for Arbitrum, which differentiate from each other and address different parts of the market and not just the EVM. But it will come to fruition eventually, even if a little later than expected.<br>
<strong>目前 L2 扩展解决方案在哪里？</strong> 根据 <a href="https://barnabemonnot.com/">Barnabé</a> 的说法，我们可能并不与一年前的预期完全一致。与以前相比，汇总的采用肯定要多得多。也许我们对市场的位置有更高的期望。例如，在进行合并的开发周期中，这就像一个非常复杂的更新。实际上，将产品投入生产需要更长的时间，尤其是涉及大量工程的元素。例如，当您看到 Optimism 的 Bedrock 和 Arbitrum 的 Nitro 时，这一点就很清楚，它们相互区分并针对市场的不同部分，而不仅仅是 EVM。但它最终会实现，即使比预期晚一点。</p>
</li>
<li>
<p><a href="https://barnabemonnot.com/"><strong>Barnabé</strong></a><strong>’s Advice to Listeners:</strong> He says imposter syndrome is real and never goes away. Don’t let that keep you from building and innovating and learning in this space! Don’t feel scared and try to find something that speaks to you. There’s a lot of things that nobody really understands, or even knows about. So. So generally, people are just kind of happy to talk about it. So ask questions, and to try and make sense of it. Together.<br>
<a href="https://barnabemonnot.com/"><strong>Barnabé</strong></a> <strong>对听众的忠告：</strong> 他说冒充者综合征(译者注：冒充者综合症Impostor syndrome，又称自我能力否定倾向，是指个体按照客观标准评价为已经获得了成功或取得成就，但是其本人却认为这是不可能的，他们没有能力取得成功，感觉是在欺骗他人，并且害怕被他人发现此欺骗行为的一种现象-解释来自网络)是真实存在的，并且永远不会消失。不要让这阻止您在这个空间中构建、创新和学习！不要感到害怕，试着找到对你说话的东西。有很多事情没有人真正了解，甚至不知道。所以。所以一般来说，人们只是乐于谈论它。所以提出问题，并尝试理解它。让我一路同行！</p>
</li>
</ul>
<p>Thanks Barnabe for being such a fantastic guest. As mentioned above, please follow our Youtube channel to watch all upcoming episodes (we’ve got some great guests lined up!)</p>
<p>感谢 Barnabe 成为如此出色的客人。如上所述，请关注我们的 Youtube 频道观看所有即将播出的剧集（我们有一些很棒的嘉宾排队！）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[模块化执行的案例(第二部分) The Case for Modular Execution (Part 2)]]></title>
        <id>https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-er-bu-fen-the-case-for-modular-execution-part-2/</id>
        <link href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-er-bu-fen-the-case-for-modular-execution-part-2/">
        </link>
        <updated>2022-10-27T05:32:47.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://fuel-labs.ghost.io/content/images/size/w2000/2022/10/BlogPost3-V1.png" alt="The Case for Modular Execution (Part 2)" loading="lazy"></figure>
<p>How modular execution layers can achieve scalability by optimizing for efficient computation.<br>
模块化执行层如何通过优化高效计算，来实现可扩展性。</p>
<hr>
<h2 id="模块化执行的案例-the-case-for-modular-execution">模块化执行的案例 (The Case for Modular Execution)</h2>
<p>Modular architecture will enable blockchains to <a href="https://fuel-labs.ghost.io/beyond-monolithic-the-modular-blockchain-paradigm/">scale by orders of magnitude</a>. As a core part of the modular stack, execution layers are in a stage of rapid innovation.</p>
<p>模块化架构将使区块链能够<a href="https://fuel-labs.ghost.io/beyond-monolithic-the-modular-blockchain-paradigm/">按数量级扩展</a>。作为模块化技术栈的核心部分，执行层正处于快速创新的阶段。</p>
<p><strong>Fuel is building the fastest execution layer for the modular blockchain stack.</strong> In <a href="https://fuel-labs.ghost.io/the-case-for-modular-execution-part-1/">Part 1</a> we explored how modular execution layers enable scalability by decoupling computation from verification.</p>
<p><strong>Fuel 正在为模块化区块链技术栈构建最快的执行层。</strong> 在 <a href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/">第一部分</a>我们探索了模块化执行层如何通过将计算与验证解耦来实现可扩展性。</p>
<p><a href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/">模块化执行的案例(第一部分) The Case for Modular Execution (Part 1)</a></p>
<figure data-type="image" tabindex="2"><img src="https://fuel-labs.ghost.io/content/images/2022/10/the-case-for-modular-execution-part-1.png" alt="" loading="lazy"></figure>
<p>We also touched on a second core benefit which enables modular execution layers to scale by orders of magnitude more than their monolithic counterparts:</p>
<p>我们还谈到了第二个核心优势，它使模块化执行层能够比其单片执行层扩展几个数量级：</p>
<blockquote>
<p><em><strong>Monolithic chains are locked into inefficient technologies when it comes to the speed and variety of computation they can support. On the other hand, modular execution layers can be specifically designed to optimize for efficient computation.</strong></em></p>
<p><em><strong>单片链在它们可以支持的计算速度和多样性方面被锁定在低效的技术中。另一方面，模块化执行层可以专门设计用于优化高效计算。</strong></em></p>
</blockquote>
<p>This post explores this second core benefit, with a specific focus on how Fuel is revolutionizing the way blockchains handle computation.</p>
<p>这篇文章探讨了第二个核心优势，特别关注 Fuel 如何彻底改变区块链处理计算的方式。</p>
<hr>
<h2 id="单片链layer1迭代的挑战-monolithic-chains-the-challenge-of-iterating-on-layer-1s">单片链：Layer1迭代的挑战 (Monolithic Chains: The Challenge of Iterating on Layer-1s)</h2>
<p><em>Monolithic chains are locked into inefficient technologies when it comes to the speed and variety of computation they can support.</em></p>
<p><em>单片链在其可以支持的计算速度和多样性方面，被锁定在低效的技术中。</em></p>
<p>When blockchains were first conceived of, there was a single use case in mind: digital cash. The Bitcoin blockchain was designed to optimize for this one narrow use case.</p>
<p>首次构想区块链时，脑海中只有一个用例：数字现金。比特币区块链旨在优化这一狭窄用例。</p>
<p>Soon after the launch of Bitcoin, people started to realize the potential of blockchains for use cases far beyond money. The narrative quickly shifted from “distributed ledger” to “distributed computer”. The Bitcoin community attempted to support this use case through <a href="https://en.wikipedia.org/wiki/Colored_Coins">colored coins</a>, but it was clear that it was not versatile enough to truly support trustless distributed computing; it was locked into its original use case. A new architecture was required.</p>
<p>比特币推出后不久，人们开始意识到区块链远超金钱用例的潜力。叙事迅速从“分布式账本”转变为“分布式计算机”。比特币社区试图通过 <a href="https://en.wikipedia.org/wiki/Colored_Coins">色彩币</a> 来支持这个用例，但很明显它的通用性不足以真正支持去信任分布式计算；它被锁定在其原始用例中。(我们)需要一种新的架构。</p>
<p>Recognizing this problem, the creators of Ethereum set out to build a blockchain which could support a distributed Turing-complete virtual machine: the Ethereum Virtual Machine (EVM). With the launch of Ethereum in 2015, blockchains had evolved to support arbitrary computation in a trustless environment. Now, anyone could build and launch a computer program (smart contract) and have it run on a distributed computer.</p>
<p>认识到这个问题，以太坊的创建者着手构建一个可以支持分布式图灵完备虚拟机的区块链：以太坊虚拟机(EVM)。随着 2015 年以太坊的推出，区块链已经发展到支持去信任环境中的任意计算。现在，任何人都可以构建和启动一个计算机程序(智能合约)并让它在分布式计算机上运行。</p>
<p>Ethereum was conceived of less than half a decade after the concept of blockchains came into existence. In the 7 years since Ethereum launched, new concepts have been invented which represent an even greater leap forward than the progress Ethereum made over Bitcoin. But like Bitcoin, the Ethereum blockchain is mostly locked into the core architecture it launched with.</p>
<p>以太坊是在区块链概念出现后不到五年的时间构思出来的。自以太坊推出以来的 7 年里，人们发明了新概念，这代表了以太坊相对比特币所取得进步的更大飞跃。但就像比特币一样，以太坊区块链大多被锁定在它推出的核心架构中。</p>
<p><em><strong>For every improvement that has been made to the Ethereum blockchain and the EVM over the years, there are many more potential innovations that cannot be implemented due to the need to maintain backward compatibility.</strong></em></p>
<p><em><strong>对于多年来对以太坊区块链和 EVM 所做的每一项改进，由于需要保持向后兼容性，还有许多潜在的创新无法实施。</strong></em></p>
<p>As a result, the blockchain community has continued funding, building, and launching new blockchains every time a new innovation is hatched. Countless new layer-1 blockchains have launched on the promise of iterating on the concept of trustless distributed computing, but they all run into the same challenge: it’s hard (and often impossible) to upgrade blockchains to support new functionalities and improvements.</p>
<p>因此，每次孵化出新创新时，区块链社区都会继续资助、构建和推出新的区块链。无数新的Layer1区块链已经推出，承诺迭代去信任分布式计算的概念，但它们都遇到了同样的挑战：升级区块链来支持新功能和改进是困难的(而且通常是不可能的)。</p>
<p>And so the cycle continues, where we continue to see new blockchains launching with piecemeal improvements over their predecessors. In the process, we are left with an ecosystem of mostly incompatible blockchains, with ever-increasing fragmentation of liquidity, funding, user experience, and developer-mindshare. Meanwhile, the energy that could be spent on true innovation is instead directed toward getting attention from investors, developers, and end-users.</p>
<p>所以这个循环还在继续，我们也继续看到新区块链推出，对它们的前辈进行零碎的改进。在这个过程中，我们留下了一个由大部分不兼容的区块链组成的生态系统，流动性、资金、用户体验和开发者的思想份额越来越分散。与此同时，可以花在真正创新上的精力反而被用于吸引投资者、开发商和最终用户的关注。</p>
<p>Competition is healthy and necessary for a thriving ecosystem. But this competition is happening at the wrong level.</p>
<p>竞争对于繁荣的生态系统是健康的和必要的。但这场竞争发生在错误的层面。</p>
<p><strong>The modular blockchain paradigm promises to solve this problem.</strong> Because each layer in the modular stack is independent of the others, innovation can happen on one layer without a complete overhaul of the entire stack. Execution layers can compete on execution. Data availability layers can compete on data availability. Every layer can optimize for its intended purpose without breaking backward compatibility.</p>
<p><strong>模块化区块链范式有望解决这个问题。</strong> 由于模块化技术栈中的每一层都独立于其他层，因此创新可以发生在一个单独层上，而无需对整个技术栈进行彻底检修。执行层可以竞争执行。数据可用性层可以在数据可用性上竞争。每一层都可以针对其预期目的进行优化，而不会破坏向后兼容性。</p>
<p>Shared settlement layers enable liquidity to be pooled in one place, so new execution layers can be built without fragmenting liquidity or adding friction to the end-user experience. Natively enabled trust-minimized bridging means the community can reduce the resources spent on interoperability efforts and instead focus them on exploring meaningful innovations.</p>
<p>共享结算层可以将流动性集中在一个地方，因此可以构建新的执行层，而不会分散流动性或增加最终用户体验的摩擦。原生支持的信任最小化桥接意味着社区可以减少在交互性工作上花费的资源，而是将它们集中在探索有意义的创新上。</p>
<p>With the advent of the modular stack, we can move away from a disparate ecosystem of L1s competing on vanity metrics, and toward a more cohesive, interoperable, upgradeable stack.</p>
<p>随着模块化技术栈的出现，我们可以摆脱在虚荣指标上竞争的不同的 L1 生态系统，而转向更具凝聚力、可交互、可升级的技术栈。</p>
<hr>
<h2 id="模块化执行超越-evm-modular-execution-moving-beyond-the-evm">模块化执行：超越 EVM (Modular Execution: Moving Beyond the EVM)</h2>
<p>Despite the plethora of layer-1 blockchains promising improvements over the EVM's original design, its first-mover advantage enabled the EVM to gain a foothold as the &quot;default&quot; runtime environment in the blockchain ecosystem. Smart contract development became synonymous with Solidity (the EVM's programming language), which has captured the majority of would-be blockchain developers. Because of this, most execution layers currently under development are EVM-based rollups.</p>
<p>尽管有过多的Layer1区块链有望对 EVM 的原始设计进行改进，但其先发优势使 EVM 作为区块链生态系统中的“默认”运行时环境获得了立足点。智能合约开发成为 Solidity(EVM 的编程语言)的代名词，它吸引了大多数潜在的区块链开发人员。因此，目前正在开发的大多数执行层都是基于 EVM 的汇总。</p>
<p>There is a good reason for this: using the EVM enables rollups to tap into a market of existing applications written in Solidity, as well as a large cohort of end-users who are already familiar with those applications. The EVM is a great tool for seeding a new ecosystem, as it already has such a large share of the developer market.</p>
<p>这有一个很好的理由：使用 EVM 使汇总能够进入使用 Solidity 编写的现有应用程序的市场，以及已经熟悉这些应用程序的大量最终用户。 EVM 是播种新生态系统的绝佳工具，因为它已经在开发者市场占有如此大的份额。</p>
<p>However, as we already explored, the need to maintain backward compatibility means that the EVM has been unable to adopt many innovations. In addition, the core design of the EVM is optimized for a monolithic chain, not a modular stack.</p>
<p>然而，正如我们已经探讨过的，保持向后兼容性的需要意味着 EVM 无法采用许多创新。此外，EVM 的核心设计针对单片链而非模块化技术栈进行了优化。</p>
<p><strong>Just some limitations of the EVM include:</strong><br>
<strong>EVM 的一些限制包括：</strong></p>
<ul>
<li>
<p><strong>Sequential Execution</strong> - The EVM does not support parallel transaction execution, making it much less computationally efficient than other VM designs.<br>
<strong>顺序执行</strong> - EVM 不支持并行交易执行，使其计算效率低于其他 VM 设计。</p>
</li>
<li>
<p><strong>Fraud Proofs</strong> - Ethereum’s account-based model means generating and executing fraud proofs on EVM chains is extremely costly and inefficient, making it sub-optimal for modular execution layers.<br>
<strong>欺诈证明</strong> - 以太坊基于账户的模型意味着在 EVM 链上生成和执行欺诈证明的成本极高且效率低下，因此对于模块化执行层来说并非最优。</p>
</li>
<li>
<p><strong>Solidity</strong> - The most popular programming language for the EVM, Solidity, is notorious for providing a poor developer experience, and is designed in a way that makes it difficult to write secure smart contracts.<br>
<strong>Solidity</strong> - EVM 最流行的编程语言 Solidity 因提供糟糕的开发者体验而声名狼藉，并且其设计方式使得编写安全的智能合约变得困难.</p>
</li>
</ul>
<hr>
<h2 id="fuel优化的模块化执行-fuel-optimized-for-modular-execution">Fuel：优化的模块化执行 (Fuel: Optimized for Modular Execution)</h2>
<p>The advent of modularism means that execution layers can leverage Ethereum’s liquidity and security without being restricted by the limitations of the EVM.</p>
<p>模块化的出现意味着执行层可以利用以太坊的流动性和安全性，而不受 EVM 的限制。</p>
<figure data-type="image" tabindex="3"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-23.png" alt="" loading="lazy"></figure>
<p>By adopting new and improved VM design principles, modular execution layers can specifically optimize for efficient &amp; scalable computation, superior developer experience, and maximum security.</p>
<p>通过采用全新和改进的 VM 设计原则，模块化执行层可以专门针对高效和可扩展计算、卓越的开发者体验和最大的安全性进行优化。</p>
<p>Fuel is taking advantage of this new design space to build <a href="https://www.fuel.network/">the fastest modular execution layer</a>.</p>
<p>Fuel 正在利用这个新的设计空间来构建 <a href="https://www.fuel.network/">最快的模块化执行层</a>。</p>
<h3 id="fuel虚拟机-fuelvm">Fuel虚拟机 (FuelVM)</h3>
<p>One of the core innovations of Fuel is a <strong>completely new virtual machine, the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a></strong>. The advent of execution layers built on Ethereum presents a new opportunity to improve on past VM designs, unconstrained by the need to be backward compatible.</p>
<p>Fuel 的核心创新之一是<strong>全新的虚拟机，<a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a></strong>。基于以太坊构建的执行层的出现，为改进过去的 VM 设计提供了新的机会，不受向后兼容需求的限制。</p>
<p>While the EVM’s slow transaction execution may have been sufficient in a pre-modular world where bandwidth was the core bottleneck, improvements made within the new modular stack (including on L1 Ethereum) mean that computational throughput is becoming the primary constraint when it comes to scaling.</p>
<p>虽然在带宽是核心瓶颈的前模块化世界中，EVM 的缓慢交易执行可能已经足够，但在新的模块化技术栈(包括 L1 以太坊)中所做的改进意味着计算吞吐量正在成为扩展时的主要限制.</p>
<p>In anticipation of this new paradigm, <strong>the FuelVM is designed to optimize for fast transaction execution</strong>. Taking learnings from the EVM, Solana, WASM, Bitcoin, and Cosmos, the FuelVM is designed to reduce wasteful processing of traditional blockchain virtual machine architectures, while vastly increasing the potential design space for developers.</p>
<p>出于对这种新范式的预期，<strong>FuelVM 旨在优化快速交易执行</strong>。 FuelVM 借鉴了 EVM、Solana、WASM、比特币和 Cosmos，旨在减少传统区块链虚拟机架构的浪费处理，同时极大地增加开发人员的潜在设计空间。</p>
<p>The FuelVM adopts many innovations that have been suggested and supported by the EVM community, but couldn't be implemented due to the need to maintain backward compatibility. Just a few examples are highlighted below (<a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html#eips-implemented-in-fuel">see here for the full list</a>).</p>
<p>FuelVM 采用了许多 EVM 社区已经建议和支持的创新，但由于需要保持向后兼容性而无法实施。下面仅突出显示了几个示例(<a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html#eips-implemented-in-fuel">完整列表请参见此处</a>)。</p>
<figure data-type="image" tabindex="4"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-24.png" alt="" loading="lazy"></figure>
<p><em>These are just a few examples of EIPs which were ultimately rejected for the EVM due to backward compatibility issues, but have been implemented in Fuel (source:</em> <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html#eips-implemented-in-fuel"><em>Fuel</em></a><em>)</em><br>
<em>这些只是 EIP 的几个示例，由于向后兼容性问题最终被 EVM 拒绝，但已在 Fuel 中实现(来源：</em> [<em>Fuel</em>](https://fuellabs.github.io/fuel-docs/master /vs-evm.html#eips-implemented-in-fuel)<em>)</em></p>
<h3 id="用sway和force实现的高级devex-superior-devex-with-sway-and-forc">用Sway和Force实现的高级DevEx (Superior DevEx with Sway and Forc)</h3>
<p>The Fuel protocol was designed with developer experience at the forefront. <strong>The FuelVM has been built alongside its companion language, <a href="https://fuellabs.github.io/fuel-docs/master/sway-language.html">Sway</a></strong>: a Rust-based domain-specific language designed specifically to leverage a blockchain VM. Unlike Solidity, which was developed after the creation of the EVM, Sway has been created from the ground up to have convenient and efficient ops built-in. By basing Sway on Rust, Fuel makes smart contract development safer and more performant through the use of strong static analysis and compiler feedback.</p>
<p>Fuel 协议的设计凝结最前沿的开发人员经验。 <strong>FuelVM 是与它的配套语言 <a href="https://fuellabs.github.io/fuel-docs/master/sway-language.html">Sway</a> 一起构建的</strong>：一种基于 Rust 设计的特定领域语言，专门来使用区块链虚拟机。与在创建 EVM 之后开发的 Solidity 不同，Sway 是从头开始创建的，内置了方便高效的操作。通过基于 Rust 的 Sway，Fuel 通过使用强大的静态分析和编译器反馈使智能合约开发更安全、更高效。</p>
<p>From a tooling perspective, <strong>Fuel improves on the EVM ecosystem with the <a href="https://fuellabs.github.io/fuel-docs/master/fuel-toolchain.html">Forc toolchain</a></strong>. With Forc, developers can get everything they need to start creating Sway applications for the Fuel VM with a single toolchain. Fuel takes a curated, &quot;batteries-included&quot;-yet-modular approach to providing tooling, with a comprehensive, standardized, canonical set of tools that covers not only the lower levels of the stack (like protocol and VM implementations), but also the higher levels (such as package management, editor support, common-use plugins, and much more).</p>
<p>从工具的角度来看，<strong>Fuel 通过 <a href="https://fuellabs.github.io/fuel-docs/master/fuel-toolchain.html">Forc 工具链</a></strong> 改进了 EVM 生态系统。借助 Forc，开发人员可以使用单个工具链获得开始为 Fuel VM 创建 Sway 应用所需的一切。 Fuel 采用精心策划的“包含电池”但模块化的方法来提供工具，具有全面、标准化、规范的工具集，不仅涵盖技术栈的较低级别(如协议和 VM 实现)，也包括更高级别(例如包管理、编辑器支持、常用插件等等)。</p>
<p>Fuel’s developer environment retains the benefits of smart contract languages like Solidity while adopting the paradigms introduced in the Rust tooling ecosystem, making the learning curve for Sway easily manageable for all levels of developer experience.</p>
<p>Fuel 的开发人员环境保留了 Solidity 等智能合约语言的优势，同时采用了 Rust 工具生态系统中引入的范式，使 Sway 的学习曲线易于管理，适合所有级别的开发人员体验。</p>
<h3 id="并行交易执行-parallel-transaction-execution">并行交易执行 (Parallel Transaction Execution)</h3>
<p>The ability to execute transactions in parallel is a highly desirable property, especially as modern processors become increasingly multi-threaded. As such, it was a core consideration when designing the Fuel protocol.</p>
<p>并行执行交易的能力是一个非常理想的属性，尤其是在现代处理器变得越来越多线程的情况下。因此，这是设计 Fuel 协议时的核心考虑因素。</p>
<p>Parallel transaction execution requires the ability to determine and handle <a href="https://en.wikipedia.org/wiki/Parallel_computing#Dependencies">dependencies</a> between transactions. In order to avoid overlap when processing the transactions on separate cores, the shared state that may be touched by each transaction needs to be identified upfront (via “access lists”), so transactions can be partitioned into sets which don’t have any possible interactions with one another.</p>
<p>并行交易执行需要能够确定和处理交易之间的<a href="https://en.wikipedia.org/wiki/Parallel_computing#Dependencies">依赖项</a>。为了避免在不同核上处理交易时发生重叠，需要预先识别每个交易可能涉及的共享状态(通过“访问列表”)，因此可以将交易划分为没有任何可能彼此互动的集合。</p>
<p>Because of the constraints of its account-based design, Ethereum is not able to support these access lists, so is forced to process transactions sequentially (i.e. one after the other). <a href="https://github.com/ethereum/EIPs/issues/648">EIP-648</a> proposed the addition of access lists to Ethereum, but this has never been implemented due to other inefficiencies it would introduce.</p>
<p>因为其基于帐户的设计的限制，以太坊无法支持这些访问列表，因此被迫按顺序处理交易(即一个接一个)。 <a href="https://github.com/ethereum/EIPs/issues/648">EIP-648</a> 提议向以太坊添加访问列表，但由于它会引入其他类型的低效率，所以这从未实施过。</p>
<p>Learning from this limitation, Fuel has implemented <a href="https://fuellabs.github.io/fuel-docs/master/technology/parallel_tx_execution.html#state-access-lists-and-utxos">strict state access lists</a> in the form of a UTXO model, giving it the ability to use multiple CPU threads and cores that are typically idle in single-threaded blockchains. As a result, <strong>Fuel can execute transactions in parallel</strong>, delivering far more compute, state accesses, and transactional throughput than its single-threaded counterparts.</p>
<p>从这个限制中吸取教训，Fuel 实施了形同UTXO 模型的 <a href="https://fuellabs.github.io/fuel-docs/master/technology/parallel_tx_execution.html#state-access-lists-and-utxos">严格的状态访问列表</a> ，使其能够使用通常在单线程区块链中空闲的多个 CPU 线程和内核。因此，**Fuel 可以并行执行交易，提供比单线程更多的计算、状态访问和交易吞吐量。</p>
<figure data-type="image" tabindex="5"><img src="https://lh5.googleusercontent.com/3XJEoCTGhPZl6T44ob4P2bAYrHi-TqggBsNYVCpegu5WSh5upC6kxrAZR6r-ErgSk69TwYmH6ex4hysI4-EoHZGZ1lSdB6-rcdRJpsbbYVipnjNHQPIyZqcvvOwrOfHVaa8pWd-9pHi0pKOwH1lDpDYsrt1K0kFInV7tq51t6ZfpZiBAd7mJC7IOgg" alt="" loading="lazy"></figure>
<p><em>Fuel’s support for parallel transaction execution means validators can maximize efficiency by using all of their hardware (source:</em> <a href="https://fuellabs.github.io/fuel-docs/master/why-fuel.html#parallel-execution"><em>Fuel</em></a><em>)</em><br>
<em>Fuel 对并行交易执行的支持意味着验证者可以通过使用其所有的硬件来最大化效率(来源：</em> <a href="https://fuellabs.github.io/fuel-docs/master/why-fuel.html#parallel-execution"><em>Fuel</em></a><em>)</em></p>
<p>As well as providing efficiency optimizations, <strong>the ability to process multiple transactions in parallel allows for security improvements</strong>, as it enables transaction throughput to scale without a comparable increase in the resource requirements to verify those transactions. This reduces the barrier for running a full node, leading to a more decentralized network of verifiers.</p>
<p>除了提供效率优化外，<strong>并行处理多个交易的能力还可以提高安全性</strong>，因为它可以扩展交易吞吐量，而不会增加用于验证这些交易的资源需求。这降低了运行完整节点的障碍，从而导致验证者网络更加分散。</p>
<h3 id="为欺诈证明而优化-optimized-for-fraud-proofs">为欺诈证明而优化 (Optimized for Fraud Proofs)</h3>
<p>Fraud proofs are a core technology in the modular blockchain stack. In <a href="https://fuel-labs.ghost.io/the-case-for-modular-execution-part-1/">Part 1</a>, we explored how modular execution layers can leverage fraud proofs to enable trust-minimized light clients, allowing for security under the assumption that only a single honest full node is available.</p>
<p>欺诈证明是模块化区块链技术栈中的核心技术。在 <a href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/">第一部分</a> 中，我们探讨了模块化执行层如何利用欺诈证明来启用信任最小化的轻客户端，在只有一个诚实的全节点可用的假设下确保安全性。</p>
<figure data-type="image" tabindex="6"><img src="https://fuel-labs.ghost.io/content/images/2022/10/image-25.png" alt="" loading="lazy"></figure>
<p><em>Fraud proofs enable trust-minimized light clients which rely on a single honest minority, giving them much greater security guarantees than monolithic light clients (source:</em> <a href="https://fuel-labs.ghost.io/the-case-for-modular-execution-part-1/"><em>Fuel</em></a><em>)</em><br>
<em>欺诈证明使信任最小化的轻客户端依赖于一个诚实的少数，为他们提供比单体轻客户端更大的安全保证(来源：</em> [<em>Fuel</em>](https://fuel-labs.ghost.io/the-case- for-modular-execution-part-1/)<em>)</em></p>
<p>With trust-minimized light clients and shared settlement &amp; data availability layers, it is possible to build trust-minimized bridges between modular execution layers, something which is impossible to achieve between L1s. This allows for the experimentation with and deployment of new blockchain designs without fragmenting security or liquidity.</p>
<p>通过信任最小化的轻客户端和共享结算和数据可用性层，可以在模块化执行层之间建立信任最小化的桥接，这是 L1 之间无法实现的。这允许在不破坏安全性或流动性的情况下试验和部署新的区块链设计。</p>
<p>Because of the benefits fraud proofs provide, <strong>Fuel was designed and built specifically to be fraud-provable</strong> in a low-cost, efficient manner.</p>
<p>由于欺诈证明提供的好处，<strong>Fuel 被设计和产出专门的低成本和高效的方式证明欺诈</strong>。</p>
<p>Whereas Ethereum’s account-based model means that the cost of constructing fraud proofs for it is unbound, Fuel optimizes for fraud proofs by using the UTXO model. <a href="https://fuellabs.github.io/fuel-docs/master/technology/fraud_proofs.html">UTXO fraud proofs</a> achieve efficiency by simply requiring each spend of a UTXO to &quot;point&quot; to the creation of the UTXO, without having to refer to a global state tree. Proving that either a) the pointer is invalid, or b) whatever is being pointed to doesn't match whatever is being spent, is sufficient for exhaustively proving fraud.</p>
<p>以太坊基于账户的模型意味着为其构建欺诈证明的成本是无限的，而 Fuel 通过使用 UTXO 模型来优化欺诈证明。 <a href="https://fuellabs.github.io/fuel-docs/master/technology/fraud_proofs.html">UTXO 欺诈证明</a> 通过简单地要求 UTXO 的每笔支出“指向”UTXO 的创建来实现效率，无需强制参考全局状态树。证明 a) 指针无效，或 b) 所指向的内容与所花费的内容不匹配，足以彻底证明欺诈。</p>
<p>As an added benefit, the <a href="https://github.com/FuelLabs/fuel-specs/blob/master/specs/vm/instruction_set.md">FuelVM instruction set</a> is designed to be fraud-provable within the EVM. This means Fuel can use Ethereum as a settlement layer, leveraging its deep liquidity and large user base while remaining unconstrained by the limitations of the EVM.</p>
<p>还有一个额外的好处，<a href="https://github.com/FuelLabs/fuel-specs/blob/master/specs/vm/instruction_set.md">FuelVM 指令集</a> 被设计在 EVM 中进行欺诈证明。这意味着 Fuel 可以使用以太坊作为结算层，利用其深厚的流动性和庞大的用户群，同时不受 EVM 的限制。</p>
<h3 id="其他益处-other-benefits">其他益处 (Other Benefits)</h3>
<p>On top of the above points, Fuel has implemented a number of other improvements, including:<br>
除了上述几点之外，Fuel 还实施了许多其他改进，包括：</p>
<ul>
<li>Support for multiple native assets  支持多种原生资产</li>
<li>Native account abstraction &amp; predicates  原生支持帐户抽象和谓词</li>
<li>Multi-dimensional resource pricing  本机帐户抽象和谓词</li>
<li>Sequencer decentralization  序列器去中心化</li>
</ul>
<p>An explanation of these improvements is out of scope for this article, but Blockchain Capital provides an excellent <a href="https://medium.com/blockchain-capital-blog/exploring-the-fuelvm-86cf9ccdc159">deep dive into these additional benefits</a>.</p>
<p>对这些改进的解释超出了本文的范围，但 Blockchain Capital 提供了出色报告，告诉大家 <a href="https://chainguys.github.io/post/tan-suo-fuel-xu-ni-ji-fuelvm-exploring-the-fuelvm/">深入了解这些额外好处</a> .</p>
<hr>
<h2 id="结论-summary">结论 (Summary)</h2>
<ul>
<li>
<p>The monolithic paradigm leads to an ecosystem of incompatible L1s competing on vanity metrics, fragmenting liquidity, funding, and developer-mindshare. Fuel adopts the premise that <strong>innovation does not require launching a new L1, but can happen at the execution layer</strong>.<br>
单片范式导致不兼容的 L1 生态系统在虚荣的指标上竞争、分散流动性、资金和开发者的思想份额。 Fuel 采用的前提是<strong>创新不需要启动新的 L1，但可以发生在执行层</strong></p>
</li>
<li>
<p>Modular architecture enables MELs such as Fuel to focus on efficient computation without worrying about backward compatibility. Faster computation not only leads to higher throughput, but also makes running validators more efficient, improving decentralization. This enables Fuel to contribute to Ethereum’s scalability without being held back by the inefficiencies of the EVM.<br>
模块化架构使诸如 Fuel 之类的 MEL 能够专注于高效计算，而无需担心向后兼容性。更快的计算不仅可以带来更高的吞吐量，还可以让运行验证器的效率更高，从而增强去中心化。这使 Fuel 能够为以太坊的扩容做出贡献，而不会因 EVM 的低效而受阻。</p>
</li>
<li>
<p>Execution layers that use the EVM can capitalize on the existing ecosystem of Solidity applications and developers, but fail to make the most of the design space offered by the modular stack. Fuel is leveraging this new design space with the FuelVM, designed from the ground up to be fraud-provable and to provide the best developer experience.<br>
使用 EVM 的执行层可以利用现有的 Solidity 应用和开发人员生态系统，但无法充分利用模块化技术栈提供的设计空间。 Fuel 正在通过 FuelVM 充分利用这一新的设计空间，该设计从一开始就设计为可防欺诈并提供最佳的开发者体验。</p>
</li>
<li>
<p>Fuel introduces innovations that optimize for the rapidly approaching modular future, enabling a new generation of blockchains that go #BeyondMonolithic..<br>
Fuel 引入了针对快速接近的模块化未来进行优化的创新，使新一代区块链成为可能 #超越单片链..</p>
</li>
</ul>
<hr>
<h2 id="敬请关注-follow-us"><strong>敬请关注 (Follow Us)</strong></h2>
<ul>
<li><a href="https://twitter.com/fuellabs_"><strong>Twitter</strong></a></li>
<li><a href="http://discord.com/invite/xfpK4Pe"><strong>Discord</strong></a></li>
<li><a href="https://www.linkedin.com/company/fuel-labs/"><strong>LinkedIn</strong></a></li>
<li><a href="https://www.youtube.com/channel/UCam2Sj3SvFSAIfDbP-4jWZQ"><strong>YouTube</strong></a></li>
</ul>
<h2 id="关于我们-about-us"><strong>关于我们 (About Us)</strong></h2>
<p><a href="https://www.fuel.network/">Fuel</a> is the <strong>fastest execution layer</strong> for the modular blockchain stack. Powerful and sleek, the technology enables parallel transaction execution, empowering developers with the <strong>highest flexible throughput</strong> and <strong>maximum security</strong> required to scale. Developers choose the <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> for its <strong>superior developer experience</strong> and the ability to go <strong>beyond the limitations of the EVM</strong>.</p>
<p><a href="https://www.fuel.network/">Fuel</a> 是模块化区块链技术栈的<strong>最快执行层</strong>。该技术功能强大且时尚，支持并行交易执行，为开发人员提供了扩展所需的<strong>最高灵活吞吐量</strong>和<strong>最大安全性</strong>。开发人员选择 <a href="https://fuellabs.github.io/fuel-docs/master/vs-evm.html">FuelVM</a> 是因为它<strong>卓越的开发人员体验和运行能力</strong> ，突破了 EVM 的限制**。</p>
<h2 id="成为贡献者-become-a-contributor"><strong>成为贡献者 (Become a Contributor)</strong></h2>
<ul>
<li>
<p><a href="https://jobs.lever.co/fuellabs">Explore our current job openings</a><br>
<a href="https://jobs.lever.co/fuellabs">探索我们目前的职位空缺</a></p>
</li>
<li>
<p><a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">Apply for a grant</a><br>
<a href="https://1v1l4ftv9zy.typeform.com/fuelgrants">申请资助</a></p>
</li>
<li>
<p><a href="https://fuellabs.github.io/sway/v0.24.5/">Learn Sway</a><br>
<a href="https://fuellabs.github.io/sway/v0.24.5/">学习Sway</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[@fuellabs_长推20221027(@fuellabs_threads20221027)]]></title>
        <id>https://chainguys.github.io/post/fuellabs-chang-tui-20221027fuellabs_threads20221027/</id>
        <link href="https://chainguys.github.io/post/fuellabs-chang-tui-20221027fuellabs_threads20221027/">
        </link>
        <updated>2022-10-27T03:20:40.000Z</updated>
        <content type="html"><![CDATA[<p>原文地址：<a href="https://twitter.com/fuellabs_/status/1585658150396387328">https://twitter.com/fuellabs_/status/1585658150396387328</a></p>
<p>What makes modular execution layers truly groundbreaking? In this series, we cover everything there is to know about modular execution. Including some of the innovative properties that will enable it to scale Ethereum, without compromise.</p>
<p>让模块化执行层真正具有开创性的到底是什么？在本系列中，我们将介绍有关模块化执行的所有知识。包括一些能够毫不妥协地扩容以太坊的创新属性。<br>
（全文见下面链接）</p>
<p><a href="https://fuel-labs.ghost.io/the-case-for-modular-execution-part-2/">Article P2 here </a><br>
<a href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-yi-bu-fen-the-case-for-modular-execution-part-1/">中文翻译版在此</a></p>
<p>Today, we cover:<br>
今天，我们介绍：</p>
<p>The challenge of iterating on L1s !<br>
在 L1 上迭代的挑战！<br>
Possibilities beyond the EVM !<br>
超越 EVM 的可能性！<br>
Optimizing for modular execution!<br>
优化模块化执行！<br>
Conclusions<br>
结论<br>
Let's go !<br>
我们开始吧</p>
<p>Part one, in case you missed it:<br>
第一部分，以防你错过了：</p>
<p><a href="https://fuel-labs.ghost.io/the-case-for-modular-execution-part-1/">Article P1 here</a><br>
<a href="https://chainguys.github.io/post/mo-kuai-hua-zhi-xing-de-an-li-di-er-bu-fen-the-case-for-modular-execution-part-2/">中文翻译版在此</a></p>
<p>The EVM is a great tool for seeding new ecosystems.<br>
EVM 是播种新生态系统的绝佳工具。</p>
<p>However:<br>
然而：</p>
<ul>
<li>The need to maintain backward compatibility means that the EVM has been unable to adopt many innovations.<br>
保持向后兼容性的需要意味着 EVM 无法采用许多创新。</li>
<li>The core design of the EVM is optimized for a monolithic chain, not a modular stack.<br>
EVM 的核心设计是针对单片链而非模块化技术栈进行优化。</li>
</ul>
<p>This has left us stuck in a loop of incremental monolithic innovation<br>
这让我们陷入了增量式单体创新的循环中</p>
<figure data-type="image" tabindex="1"><a href="https://twitter.com/musalbas/status/1582396496229507072"><img src="https://pbs.twimg.com/media/FfXNOg9VEAEMe1e?format=png&amp;name=small" alt="alt text" loading="lazy"></a></figure>
<p>With the advent of the modular stack, we can move away from a disparate ecosystem of L1s competing on vanity metrics, and toward a more cohesive, interoperable, upgradeable stack.</p>
<p>随着模块化技术栈的出现，我们可以摆脱不同 L1 生态系统在虚荣指标上的竞争，转向更具凝聚力、可交互和可升级的技术栈。</p>
<p><a href="https://twitter.com/fuellabs_/status/1569753111983722496">https://twitter.com/fuellabs_/status/1569753111983722496</a></p>
<p>EVM 之外的可能性 (Possibilities beyond the EVM)</p>
<p>The advent of modularism means that execution layers can leverage Ethereum’s liquidity and security without being restricted by the limitations of the EVM.</p>
<p>模块化的出现意味着执行层可以利用以太坊的流动性和安全性，而不受 EVM 的限制。</p>
<figure data-type="image" tabindex="2"><img src="https://pbs.twimg.com/media/FgFjs21UYAYcAap?format=png&amp;name=medium" alt="" loading="lazy"></figure>
<p>These are just a few examples of EIPs which were ultimately rejected for the EVM due to backward compatibility issues, but have been implemented in Fuel. See the complete list:</p>
<p>这些只是 EIP 的几个示例，由于向后兼容性问题最终被 EVM 拒绝，但已在 Fuel 中实现。查看完整列表：</p>
<p><a href="https://t.co/fwZkuFJrnA">https://fuellabs.github.io/fuel-docs/master/vs-evm.html#eips-implemented-in-fuel…</a></p>
<figure data-type="image" tabindex="3"><img src="https://pbs.twimg.com/media/FgFjtSvUUAEvw-K?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Fuel is optimized for modular execution<br>
Fuel针对模块化执行进行了优化</p>
<ul>
<li>
<p>Superior DevEx with<a href="https://twitter.com/SwayLang">@SwayLang</a>and Forc<br>
具有 <a href="https://twitter.com/SwayLang">@SwayLang</a> 和 Forc 的高级 DevEx</p>
</li>
<li>
<p>Parallel Transaction Execution<br>
并行事务执行</p>
</li>
<li>
<p>Designed for fraud proofs and light clients<br>
专为防欺诈和轻客户端而设计</p>
</li>
</ul>
<p><a href="https://twitter.com/camiinthisthang/status/1577738478699171845">https://twitter.com/camiinthisthang/status/1577738478699171845</a></p>
<p>Additional benefits of the FuelVM by<a href="https://twitter.com/sproule_">@sproule_</a>of<a href="https://twitter.com/blockchaincap">@blockchaincap</a></p>
<p>FuelVM 的其他好处，可查看 <a href="https://twitter.com/blockchaincap">@blockchaincap</a> 的<a href="https://twitter.com/sproule_">@sproule_</a> 撰写的<a href="https://chainguys.github.io/post/tan-suo-fuel-xu-ni-ji-fuelvm-exploring-the-fuelvm/">报告</a></p>
<p>Conclusions<br>
结论</p>
<ul>
<li>
<p>Innovation does not require launching a new L1, but can happen at the execution layer.<br>
创新不需要启动新的 L1，可以只发生在执行层。</p>
</li>
<li>
<p>EVM-compatible execution layers can capitalize on the existing Solidity ecosystem, but fail to make the most of the design space offered by the modular stack.<br>
EVM 兼容的执行层可以利用现有的 Solidity 生态系统，但无法充分利用模块化技术栈提供的设计空间。</p>
</li>
</ul>
<p>Cont.<br>
序</p>
<ul>
<li>Focusing on efficient computation without worrying about backward compatibility enable MELs to contribute to Ethereum's scalability without being held back by the inefficiencies of the EVM.<br>
专注于高效计算而不担心向后兼容性，使 MEL 能够为以太坊的扩容做出贡献，而不会因 EVM 的低效率而受阻。</li>
</ul>
<p>Learn more about how Fuel, the fastest modular execution layer, unlocks the future of scalability:</p>
<p>详细了解最快的模块化执行层 Fuel 如何开启可扩展性的未来：</p>
<p><a href="https://www.fuel.network/">https://www.fuel.network/</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zpoken 成功在 Neon EVM 上部署 Compound 协议(Zpoken Successfully Deploys the Compound Protocol on Neon EVM)]]></title>
        <id>https://chainguys.github.io/post/zpoken-cheng-gong-zai-neon-evm-shang-bu-shu-compound-xie-yi-zpoken-successfully-deploys-the-compound-protocol-on-neon-evm/</id>
        <link href="https://chainguys.github.io/post/zpoken-cheng-gong-zai-neon-evm-shang-bu-shu-compound-xie-yi-zpoken-successfully-deploys-the-compound-protocol-on-neon-evm/">
        </link>
        <updated>2022-10-21T03:40:35.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/1*gmc_nXaOC8Reo4m24EF0WA.png" alt="" loading="lazy"></figure>
<hr>
<p>Over the last few months, Neon Labs has partnered with several organizations to test and deploy various protocols and projects on Neon EVM. Neon Labs’ most recent partnership with <a href="https://zpoken.io/">Zpoken</a> has resulted in the successful deployment of the <a href="https://compound.finance/">Compound protocol</a> on Neon EVM. The deployment of Compound on Neon EVM serves to further test the readiness of Neon EVM for production and the onboarding of complex dApps to its ecosystem.</p>
<p>在过去几个月中，Neon Labs 与多家组织合作，在 Neon EVM 上测试和部署各种协议和项目。 Neon Labs 与 Zpoken 的最新合作，就是在 Neon EVM 上成功部署 Compound 协议。在 Neon EVM 上部署 Compound 有助于进一步测试 Neon EVM 的生产准备情况以及复杂 dApp 加入其生态系统的情况。</p>
<p>Compound is a DeFi dApp that first launched in September, 2018 on Ethereum. The protocol allows users to lend and borrow cryptocurrencies without an intermediary</p>
<p>Compound 是一个 DeFi dApp，于 2018 年 9 月在以太坊上首次推出。该协议允许用户在没有中介的情况下借出和借入加密货币。</p>
<h1 id="zpoken是谁-who-is-zpoken">Zpoken是谁? (Who is Zpoken?)</h1>
<p>Zpoken is a full-stack Web3 development firm. The company has shipped more than 50 projects and has 30 active builders across 10+ blockchain networks. Zpoken’s specializations include high-end web3 development, cryptography, capital markets, token design, and liquidity.</p>
<p>Zpoken是一家全栈 Web3 开发公司。该公司已经交付了 50 多个项目，并在 10 多个区块链网络中拥有 30 名活跃的建设者。 Zpoken 的专长包括高端 web3 开发、密码学、资本市场、代币设计和流动性。</p>
<h1 id="我们的目标-our-objective">我们的目标 (Our Objective)</h1>
<p>The main objective of the exercise with Zpoken was to test Neon EVM’s performance and functionality during the deployment of the Compound protocol contracts to <a href="https://proxy.devnet.neonlabs.org/solana">Neon Devnet</a>.</p>
<p>Zpoken练习的主要目的，是在将 Compound 协议合约部署到 Neon Devnet 期间测试 Neon EVM 的性能和功能。</p>
<p>Following the successful deployment, Zpoken conducted unit tests on the protocol. The goal was to ensure the appropriate performance and workflow of the protocol contracts as well as the correctness of the contract calculations and logic.</p>
<p>成功部署后，Zpoken 对该协议进行了单元测试。目标是确保协议合约的适当性能，工作流程以及合约计算和逻辑的正确性。</p>
<h1 id="测试方法-testing-methodology">测试方法 (Testing Methodology)</h1>
<p>Zpoken tested the following smart contract functions to verify the performance of Compound on Neon EVM:</p>
<p>Zpoken测试了以下智能合约函数来验证 Compound 在 Neon EVM 上的性能：</p>
<ul>
<li>
<p>Deploy compound contracts to Neon Devnet network;<br>
将compound合约部署到 Neon Devnet 网络；</p>
</li>
<li>
<p>Test cToken contract functions 测试cToken合约函数:<br>
(constructor, mint, mintFresh, redeem, redeemFreshTokens, redeemFreshAmount, liquidateBorrow, liquidateBorrowFresh, seize, _setComptroller, transfer, balanceOfUnderlying, borrow, borrowRatePerBlock, supplyRatePerBlock, borrowBalanceCurrent, borrowBalanceStored, exchangeRateStored, getCash, borrowFresh, repayBorrowFresh, repayBorrow, repayBorrowBehalf, accrueInterest, _setInterestRateModel, _setInterestRateModelFresh, _setReserveFactor, _setReserveFactorFresh, _reduceReserves, _reduceReservesFresh, admin, pendingAdmin, _setPendingAdmin, _acceptAdmin);</p>
</li>
<li>
<p>Test CEther contract functions   测试 CEther 合约函数:<br>
(getCashPrior, doTransferIn, doTransferOut, mintExplicit, mintFallback, redeemCTokens, redeemUnderlying, borrow, borrowFresh, repayBorrow, repayBorrowFresh, repayBorrowBehalf, addReserves);</p>
</li>
<li>
<p>Test Comptroller contract functions 测试Comptroller合约函数:<br>
(constructor, _setLiquidationIncentive, _setPriceOracle, _setCloseFactor, _setCollateralFactor, _supportMarket, liquidateBorrowAllowed, redeemVerify, liquidateCalculateAmountSeize, _setPauseGuardian, setting paused, liquidity, getAccountLiquidity, getHypotheticalAccountLiquidity, admin, pendingAdmin, _setPendingAdmin, _acceptAdmin);</p>
</li>
<li>
<p>Test CompoundLens contract functions 测试 CompoundLens 合约函数:<br>
(cTokenMetadata, cTokenMetadataAll, cTokenBalances, cTokenBalancesAll, cTokenUnderlyingPrice, cTokenUnderlyingPriceAll, getAccountLimits, governance, comp);</p>
</li>
<li>
<p>Test PriceOracleProxy contract functions 测试 PriceOracleProxy 合约函数:<br>
(constructor, getUnderlyingPrice);</p>
</li>
<li>
<p>Test Timelock contract functions 测试Timelock合约函数:<br>
(constructor, setDelay, setPendingAdmin, acceptAdmin, queueTransaction, cancelTransaction, executeTransaction, executeTransaction, queue and cancel empty);</p>
</li>
<li>
<p>Test InterestRateModel contract functions 测试 InterestRateModel 合约函数:<br>
(baseP025-slopeP20, jump rate tests, baseP05-slopeP45, isInterestRateModel, calculates correct borrow value, jump-rate);</p>
</li>
<li>
<p>Test CCompLikeDelegate contract functions  测试 CCompLikeDelegate 合约函数:<br>
(_delegateCompLikeTo);</p>
</li>
<li>
<p>Test Maximillion contract functions 测试Maximillion合约函数:<br>
(constructor, repayBehalf);</p>
</li>
<li>
<p>Test DAIInterestRateModelV3 contract functions 测试 DAIInterestRateModelV3 合约函数:<br>
(constructor, getBorrowRate, getSupplyRate);</p>
</li>
<li>
<p>Test Flywheel contract functions 测试飞轮合约函数:<br>
(_grantComp, getCompMarkets, _setCompSpeeds, updateCompBorrowIndex, updateCompSupplyIndex, distributeBorrowerComp, distributeSupplierComp, transferComp, claimComp, claimComp batch, harnessRefreshCompSpeeds, harnessSetCompSpeeds, harnessAddCompMarkets, updateContributorRewards, _setContributorCompSpeed).</p>
</li>
</ul>
<h1 id="测试范围-testing-scope">测试范围 (Testing Scope)</h1>
<p>The scope of testing focused on the following deployed contracts:<br>
测试范围集中在以下已部署的合约上：</p>
<figure data-type="image" tabindex="2"><img src="https://miro.medium.com/max/1286/1*NAz_LBdDsp1BTirY_JAwbQ.png" alt="" loading="lazy"></figure>
<h1 id="测试执行-testing-execution">测试执行 (Testing Execution)</h1>
<p>Prior to deployment and testing, Zpoken made two primary changes to the Compound protocol smart contracts:<br>
在部署和测试之前，Zpoken 对 Compound 协议智能合约进行了两项主要更改：</p>
<ul>
<li>
<p>The first change was made to the GRACE_PERIOD and MINIMUM_DELAY constants in <a href="https://raw.githubusercontent.com/neon-smart-contract-dev/compound-finance/neon_test/contracts/Timelock.sol">Timelock.sol</a>. The constants influence time limits for function execution in contracts. The changes were required as the Zpoken team conducted tests on live Neon network nodes and were not able to manipulate time and block numbers.<br>
对 <a href="https://raw.githubusercontent.com/neon-smart-contract-dev/compound-finance/neon_test/contracts/Timelock.sol">Timelock.sol</a> 中的 GRACE_PERIOD 和 MINIMUM_DELAY 常量进行了第一次更改。常量影响合约中函数执行的时间限制。由于 Zpoken 团队在实时 Neon 网络节点上进行了测试，并且无法操纵时间和块数，因此需要进行这些更改。</p>
</li>
<li>
<p>The second change adjusted the address of the external Comp contract in the <a href="https://raw.githubusercontent.com/neon-smart-contract-dev/compound-finance/neon_test/contracts/Comptroller.sol">Comptroller.sol</a> contract (via the function getCompAddress()).<br>
第二个改动调整了<a href="https://raw.githubusercontent.com/neon-smart-contract-dev/compound-finance/neon_test/contracts/Comptroller.sol">Comptroller.sol</a>中外部Comp合约的地址合约(通过函数 getCompAddress())。</p>
</li>
</ul>
<p>Once the contract adjustments were made, the Zpoken team deployed to Neon Devnet from the repository <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a> using the <strong><em>yarn deploy -n neon</em></strong> command.</p>
<p>合约调整完成后，Zpoken 团队从存储库 <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a> 部署到 Neon Devnet ) 使用 <strong><em>yarn deploy -n neon</em></strong> 命令。</p>
<p>Following the deployment, tests were run from the repository <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a>. To run the tests, the local Neon environment first needed to be configured and the private keys added to ~/.neon/neon. The command to run the tests was <strong><em>. start.sh</em></strong></p>
<p>部署之后，从存储库 <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a> 运行测试。要运行测试，首先需要配置本地 Neon 环境并将私钥添加到 ~/.neon/neon。运行测试的命令是 <strong><em>。开始.sh</em></strong></p>
<p>Tests were also run in the local Neon environment via Docker in the repository <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a>. The steps to conduct the test are as follows:</p>
<p>测试还通过存储库中的 Docker 在本地 Neon 环境中运行 <a href="https://github.com/neon-smart-contract-dev/compound-finance">neon-smart-contract-dev/compound-finance</a>。进行测试的步骤如下：</p>
<ol>
<li>
<p>Run a local Neon node using <a href="https://github.com/neonlabsorg/proxy-model.py">proxy-model.py</a><br>
使用 <a href="https://github.com/neonlabsorg/proxy-model.py">proxy-model.py</a> 运行本地 Neon 节点</p>
</li>
<li>
<p>Build the docker image using <strong><em>sudo docker build -t compound-protocol</em></strong><br>
使用 <strong><em>sudo docker build -t Compound-protocol</em></strong> 构建 docker 镜像</p>
</li>
<li>
<p>Run the container using <strong><em>sudo docker run -it — net=host compound-protocol</em></strong><br>
使用 <strong><em>sudo docker run -it --net=host Compound-protocol</em></strong> 运行容器</p>
</li>
</ol>
<p>Project deliverables include deployment and test scripts, as well as integration and unit tests. Deployment and test scripts can be accessed via the <a href="https://github.com/neon-smart-contract-dev/compound-finance">repository</a>. The integration and unit tests performed are available in a <a href="https://github.com/neon-smart-contract-dev/compound-finance/tree/neon_test/tests">GitHub repository</a> and can be run in a <a href="https://github.com/neon-smart-contract-dev/compound-finance/blob/neon_test/Dockerfile">Docker container</a> to re-play the testing scenarios.</p>
<p>项目可交付成果包括部署和测试脚本，以及集成和单元测试。可以点击 <a href="https://github.com/neon-smart-contract-dev/compound-finance">repository</a> 访问部署和测试脚本。执行的集成和单元测试可在 <a href="https://github.com/neon-smart-contract-dev/compound-finance/tree/neon_test/tests">GitHub 存储库</a> 中获得，并且可以在 <a href="https://github.com/neon-smart-contract-dev/compound-finance/blob/neon_test/Dockerfile">Docker 容器中运行</a>重现测试场景。</p>
<h1 id="发现-findings">发现 (Findings)</h1>
<p>Zpoken successfully deployed and tested the Compound protocol base contracts as well as swap pool. The deployment and associated tests indicated that Neon EVM is running correctly and is fully compatible with Ethereum with regards to running complex dApps like Compound. All integration and unit tests were passed. The contract deployment, logic, math, and functionality are working as expected by the Compound developer team. The only thing that could not be tested was the Compound Web Application due to the lack of the Compound API in public GitHub repositories.</p>
<p>Zpoken 成功部署并测试了 Compound 协议基础合约以及交换池。部署和相关测试表明，Neon EVM 运行正常，并且在运行 Compound 等复杂 dApp 方面与以太坊完全兼容。所有的集成和单元测试都通过了。合约部署、逻辑、数学和功能都按照 Compound 开发团队的预期工作。由于公共 GitHub 存储库中缺少 Compound API，唯一无法测试的是 Compound Web 应用。</p>
<p>Zpoken also identified two issues with the Neon platform:</p>
<p>Zpoken 还发现了 Neon 平台的两个问题：</p>
<ol>
<li>
<p>Deploying and testing the Compound contracts required support for RPC eth_accounts. The method has been implemented but there are errors that Neon Labs is currently addressing.<br>
部署和测试 Compound 合约需要支持 RPC eth_accounts。该方法已实施，但 Neon Labs 目前正在解决一些错误。</p>
</li>
<li>
<p>The multi-threaded execution of test scripts implemented in the original Compound tests is not supported by the Neon network. The tests were created for <a href="https://trufflesuite.com/ganache/">Ganache</a>, a personal Ethereum blockchain simulator, rather than a live node. Attempting to use multiple threads results in “nonce too low” errors. To avoid the error, each script should be run from a different deployer address. However, in tests that use multiple threads within a single test, the error cannot be avoided. The tests could not be run in these scenarios and were skipped.<br>
Neon 网络不支持多线程执行原 Compound 测试中实现的测试脚本。这些测试是为个人以太坊区块链模拟器 <a href="https://trufflesuite.com/ganache/">Ganache</a> 而不是实时节点创建的。尝试使用多个线程会导致“nonce too low”错误。为避免该错误，应从不同部署者地址运行每个脚本。但是，在单个测试中使用多个线程的测试中，错误是无法避免的。测试无法在这些场景中运行并被跳过。</p>
</li>
</ol>
<h1 id="结论-conclusion">结论 (Conclusion)</h1>
<p>It’s time for <strong>YOU</strong> to deploy your own smart contracts to Neon EVM. Make sure to share your Neon EVM feedback with us throughout the process. If you have any issues or need additional guidance, check out our <a href="https://docs.neon-labs.org/">Neon Docs</a> or reach out to a team member on <a href="https://discord.com/invite/9jVYEDVwn8">Discord</a>. We know that you’ll create something great!</p>
<p>现在是 <strong>您</strong> 将您自己的智能合约部署到 Neon EVM 的时候了。确保在整个过程中与我们分享您对 Neon EVM 的反馈。如果您有任何问题或需要额外指导，请查看我们的 <a href="https://docs.neon-labs.org/">Neon Docs</a> 或通过 <a href="https://discord.com">Discord</a> 联系团队。我们知道你会创造出伟大的东西！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索Fuel虚拟机(FuelVM)-Exploring the FuelVM]]></title>
        <id>https://chainguys.github.io/post/tan-suo-fuel-xu-ni-ji-fuelvm-exploring-the-fuelvm/</id>
        <link href="https://chainguys.github.io/post/tan-suo-fuel-xu-ni-ji-fuelvm-exploring-the-fuelvm/">
        </link>
        <updated>2022-10-20T01:40:18.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://miro.medium.com/max/1400/0*Wp6jt8fQD2RkhhB0.png" alt="" loading="lazy"></figure>
<hr>
<h1 id="版权提示-copyright-notice">版权提示 (Copyright Notice)</h1>
<p>Thanks to the great article <a href="https://medium.com/blockchain-capital-blog/exploring-the-fuelvm-86cf9ccdc159">Exploring the FuelVM</a> by <a href="https://twitter.com/sproule_">Ryan Sproule</a> ,we could deeply explore the Fuel Project in an easy way.</p>
<p>感谢这篇杰出的文章： <a href="https://medium.com/blockchain-capital-blog/exploring-the-fuelvm-86cf9ccdc159">探索Fuel虚拟机(FuelVM)-Exploring the FuelVM</a>(作者为 <a href="https://twitter.com/sproule_">Ryan Sproule</a>)让我们能深入浅出地了解 <a href="https://twitter.com/fuellabs_">Fuel</a>项目。</p>
<p><em>This translation is a personal work</em> by <a href="https://twitter.com/fuellabs_">Fuel</a> enthusiast <a href="https://twitter.com/Chainguys">@Chainguys</a> , with permission from the author. <strong>The author reserves the right of final explanation</strong>. <strong>This translation should NEVER EVER be regarded as any types or forms of Financial Advice</strong></p>
<p><em>本翻译为 <a href="https://twitter.com/fuellabs_">Fuel</a>爱好者<a href="https://twitter.com/Chainguys">@Chainguys</a>的个人作品，已经过作者本人授权。<strong>作者享有最终解释权</strong></em>。<strong>本作品不应被视为任何形式的财务投资建议</strong></p>
<hr>
<h1 id="sway-和-fuelvm初探-introducing-sway-and-the-fuelvm">Sway 和 FuelVM初探 (Introducing Sway and the FuelVM)</h1>
<p>Fuel Labs is building a novel execution layer for scaling the next generation of blockchain applications. The FuelVM is designed to be modular — it can plug in as the execution engine for any blockchain. Primarily, the FuelVM will be deployed as a Layer 2 rollup on Ethereum, but in theory, it can be deployed anywhere as an L2 or even as another L1. The FuelVM is designed to scale Ethereum without increasing the node requirements but rather by getting <em>more</em> out of the existing hardware.</p>
<p>Fuel Labs 正在构建一个全新的执行层，用于扩展下一代区块链应用。 FuelVM 被设计成模块化的——它可以作为任何区块链的执行引擎插入。首先，FuelVM 将作为layer2汇总，部署在以太坊上，但理论上，它可以作为 L2 甚至作为另一个 L1 部署在任何地方。 FuelVM 旨在在不增加节点要求的情况下扩展以太坊，即从现有硬件中获得更多。</p>
<p>Fuel Labs is also building a novel DSL for writing contracts for the FuelVM called Sway. Sway is inspired by both Rust and Solidity to create the ideal smart contract programming language.</p>
<p>Fuel Labs 还在构建一种全新的 DSL，用于为 FuelVM 编写合约，称为 Sway。 Sway 受到 Rust 和 Solidity 的启发，创建了理想的智能合约编程语言。</p>
<h1 id="什么是-fuelvmwhat-is-the-fuelvm">什么是 FuelVM？(What is the FuelVM?)</h1>
<p>The FuelVM is a fully purpose-built, custom virtual machine for executing smart contracts. Designed from the start to be easily fraud-provable, the Fuel VM can be used as the transaction execution layer for an optimistic rollup.</p>
<p>FuelVM 是一个完全专用的定制虚拟机，用于执行智能合约。 Fuel VM 从一开始就设计为易于欺诈证明的，可用作乐观汇总的交易执行层。</p>
<p>The FuelVM is optimized to better utilize hardware to increase the throughput of transaction execution. Concretely, it is UTXO based and forces every transaction to explicitly define the UTXOs that it will touch. Since the execution engine can identify exactly what state every transaction touches, it is able to trivially find the transactions that are not contentious and parallelize them.</p>
<p>FuelVM 经过优化，可以更好地利用硬件来提高交易执行的吞吐量。具体来说，它是基于 UTXO 的，并强制每笔交易明确定义它将触及的 UTXO。由于执行引擎可以准确识别每个交易涉及的状态，因此它能够轻松找到没有争议的交易并将它们并行(执行)。</p>
<p>You can read the full FuelVM spec <a href="https://github.com/FuelLabs/fuel-specs">here</a> or watch John Adler’s video run-through <a href="https://youtu.be/GKNuaFcPaXc">here</a>.</p>
<p>您可以阅读完整的 FuelVM 规范 <a href="https://github.com/FuelLabs/fuel-specs">此处</a> 或观看 John Adler 的视频演示 <a href="https://youtu.be/GKNuaFcPaXc">此处</a>。</p>
<h1 id="为什么虚拟机如期重要why-does-the-vm-matter">为什么虚拟机如期重要？Why does the VM matter?</h1>
<p>In a smart contract blockchain system, the VM is the system that can understand smart contract code and execute state transitions based on the rules defined in this code. <em>The VM is the operating system for the smart contract blockchain.</em></p>
<p>在智能合约区块链系统中，虚拟机(VM)是能够理解智能合约代码并根据该代码中定义的规则执行状态转换的系统。 <em>VM是智能合约区块链的操作系统。</em></p>
<p>As of today, smart contract VMs have not iterated much beyond the initial versions presented in Ethereum. All widely used smart contract chains (bar Solana) today are using the same VM as Ethereum: the EVM.</p>
<p>截至今天，智能合约虚拟机的迭代并没有超出以太坊中提供的初始版本。今天所有广泛使用的智能合约链(除了Solana)都使用与以太坊相同的VM：EVM。</p>
<p>In today’s world, the EVM is “good enough” because the main bottleneck of scaling is not the rate at which transactions are executed, but rather the bandwidth that the consensus engine can support (blockspace). With the progression of layer 2 scaling solutions and DA solutions like Celestia, EIP-4844, Danksharding, and EigenDA, the cost of posting rollup transaction data to L1 will no longer be the primary constraint.</p>
<p>在当今世界，EVM 已经“足够好”，因为扩展的主要瓶颈不是交易执行的速度，而是共识引擎可以支持的带宽(区块空间)。随着layer2扩展解决方案和 DA 解决方案(如 Celestia、EIP-4844、Danksharding 和 EigenDA)的发展，将汇总交易数据发布到 L1 的成本将不再是主要限制因素。</p>
<p>In this imminent environment where bandwidth is cheap, the next bottleneck will be computational throughput: how fast a system can execute transactions while keeping the underlying hardware requirements <em>low enough</em> for sufficient decentralization. The FuelVM has the advantage of being designed with these considerations for the future in mind and can optimize accordingly.</p>
<p>在这个带宽便宜的迫在眉睫的环境中，下一个瓶颈将是计算吞吐量：系统可以多快执行交易，同时保持底层硬件要求 <em>足够低</em> ，进而实现足够的去中心化。 FuelVM 的优点是在设计时考虑到了这些考虑因素，并且可以相应地进行优化。</p>
<h1 id="fuelvm-的优势-fuelvms-differentiators">FuelVM 的优势 (FuelVM’s Differentiators)</h1>
<h2 id="执行-验证并行化-execution-validation-parallelization">执行 + 验证并行化 (Execution + Validation Parallelization)</h2>
<p>The secret behind the FuelVM’s parallelizable virtual machine is its <em>strict access lists —</em> which require users (in reality, clients or wallets) to indicate which contract(s) their transaction will touch. It is helpful to inspect what exactly makes up a transaction in the FuelVM.</p>
<p>FuelVM 可并行化虚拟机背后的秘密在于它的 <em>严格访问列表——</em> 要求用户(实际上是客户端或钱包)指明他们的交易将触及哪些合约。检查 FuelVM 中事务的确切组成是很有帮助的。</p>
<ul>
<li>
<p><strong>Inputs</strong>: list of all contract UTXOs that the transaction will touch + data to unlock the UTXO or predicate script.<br>
<strong>输入</strong>：交易将触及的所有合约 UTXO 的列表 + 用于解锁 UTXO 或谓词脚本的数据。</p>
</li>
<li>
<p><strong>Outputs</strong>: define the UTXOs that will be created<br>
<strong>输出</strong>：定义将被创建的 UTXO</p>
</li>
<li>
<p><strong>Gas Information</strong>: gas price + gas limits<br>
<strong>Gas 信息</strong>：Gas 价格 + Gas 限制</p>
</li>
<li>
<p><strong>Witnesses</strong>: metadata + digital signature for authorization<br>
<strong>见证人</strong>：元数据+授权数字签名</p>
</li>
</ul>
<p>The critical point here is the explicit “inputs” list, which lists all the UTXOs that will be consumed. This includes “special” contract UTXOs. If, before executing any code, the VM is able to tell which contracts a transaction will touch, it can safely execute all other non-contentious state-accessing transactions in parallel.</p>
<p>这里的关键点是明确的“输入”列表，它列出了所有将被消耗的 UTXO。这包括“特殊”合约 UTXO。如果在执行任何代码之前，VM 能够判断交易将触及哪些合约，它就可以安全地并行执行所有其他无争议的状态访问交易。</p>
<figure data-type="image" tabindex="2"><img src="https://miro.medium.com/max/4000/1*1avkHndlTD9RhwMMYBaL7w.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://miro.medium.com/max/4000/1*nIXbEQkuMQ2p2g5GF-R9IQ.png" alt="" loading="lazy"></figure>
<p>Both transaction execution and validation can take advantage of parallelism (validation can to an even greater extent).</p>
<p>交易执行和验证都可以利用并行性(验证可以在更大程度上利用)。</p>
<p>Notice that since transaction outputs are explicitly included for validation, in the process of asserting that a block that another node proposed was correct, there is no need to execute the overlapping transactions sequentially. This means that validation can happen fully in parallel regardless of state contention. In practice, this means that when nodes are syncing the network, they can achieve even greater parallelization and can catch up faster.</p>
<p>请注意，由于交易输出被明确包含用于验证，因此在判别另一个节点提出的块是否正确的过程中，不需要顺序执行重叠的交易。这意味着无论状态争用如何，验证都可以完全并行进行。在实践中，这意味着当节点同步网络时，它们可以实现更大的并行化，并且可以更快地赶上。</p>
<h2 id="原生资产系统-native-asset-system">原生资产系统 (Native Asset System)</h2>
<p>In the EVM, there is one native asset: ETH. All other assets are implemented via a smart contract that handles accounting for balances (ERC20). In Fuel, developers are free to implement assets in smart contracts, BUT, there is an option to allow the VM to handle this natively.</p>
<p>在 EVM 中，有一种原生资产：ETH。所有其他资产都是通过处理余额会计的智能合约 (ERC20) 实现的。在 Fuel 中，开发人员可以自由地在智能合约中实现资产，但是，有一个选项允许 VM 进行本地处理。</p>
<p>There are a few considerable advantages to native assets over an ERC20-style smart contract for balance management. First, native asset manipulation is cheaper (in terms of gas) than manipulating state in a smart contract. This can be attributed to its running at lower-level primitives (UTXO system is used instead of manipulating storage). Second, native assets have better UX, similar to how sending ETH is much simpler than sending ERC20s (no need for setting approvals).</p>
<p>与 ERC20 风格的智能合约相比，原生资产在余额管理方面有一些相当大的优势。首先，原生资产操作(就gas而言)比在智能合约中操纵状态更便宜。这可以归因于它在较低级别的语言上运行(使用 UTXO 系统而不是操纵存储)。其次，原生资产具有更好的用户体验，类似于发送 ETH 比发送 ERC20 简单得多(无需设置批准)。</p>
<h2 id="本地帐户抽象-谓词-native-account-abstraction-predicates">本地帐户抽象 + 谓词 (Native Account Abstraction + Predicates)</h2>
<p>Account abstraction has been a hot topic of research and several attempts have been made at EIPs (<a href="https://eips.ethereum.org/EIPS/eip-86">EIP-86</a>, <a href="https://eips.ethereum.org/EIPS/eip-2938">EIP-2938</a>, <a href="https://eips.ethereum.org/EIPS/eip-3074">EIP-3074</a>, <a href="https://eips.ethereum.org/EIPS/eip-4337">EIP-4337</a>, <a href="https://eips.ethereum.org/EIPS/eip-5003">EIP-5003</a>) over the years in the Ethereum community. It is difficult to implement and upgrade Ethereum to support account abstraction primarily because of the engineering bandwidth of core teams/technical debt plus the associated complexity, and a long list of higher priority items. Many rollups have the opportunity to implement account abstraction from the start on their novel execution environments. Among these is the FuelVM, which, in addition to native account abstraction, will also include an interesting new primitive: predicates.</p>
<p>帐户抽象一直是研究的热门话题，并且EIP (<a href="https://eips.ethereum.org/EIPS/eip-86">EIP-86</a>、<a href="https://eips.ethereum.org/EIPS/eip-2938">EIP-2938</a>、<a href="https://eips.ethereum.org/EIPS/eip-3074">EIP-3074</a>、<a href="https://eips.ethereum.org/EIPS/eip-4337">EIP-4337</a>, <a href="https://eips.ethereum.org/EIPS/eip-5003">EIP-5003</a>) 多年来在以太坊社区中有所应用。但很难实施和升级以太坊来支持帐户抽象，主要是因为核心团队的工程带宽/技术债务加上相关的复杂性，以及一长串更高优先级项目。许多汇总有机会从一开始就在全新的执行环境中实现帐户抽象。其中包括 FuelVM，除了原生帐户抽象之外，它还将包括一个有趣的新原语：谓词。</p>
<figure data-type="image" tabindex="4"><img src="https://miro.medium.com/max/1360/1*_AYV990rgjSyaGYa-VpkQw.png" alt="" loading="lazy"></figure>
<p>meme原始地址 (meme credit): <a href="https://twitter.com/fueldrinker69/status/1582439702069551109?s=20&amp;t=HJJ_ZwWw8x8f83NLxeo5uw">https://twitter.com/fueldrinker69/status/1582439702069551109?s=20&amp;t=HJJ_ZwWw8x8f83NLxeo5uw</a></p>
<p>A predicate is a pure (does not access state) contract script that simply returns a boolean (true or false). UTXOs can be locked behind a predicate so they can only be spent whenever the conditions defined in the predicate are met. This leads to an interesting UX opportunity where users can set a transaction to execute only under certain conditions, and then once the predicate is met, their transaction can automatically execute. Also, predicates can be pruned when they are destroyed, so they do not contribute to state bloat.</p>
<p>谓词是一个纯粹的(不访问状态)合约脚本，它只返回一个布尔值(真或假)。 UTXO 可以锁定在谓词后面，因此只有在满足谓词中定义的条件时才能使用它们。这带来了一个有趣的 UX 机会，用户可以将交易设置为仅在特定条件下执行，然后一旦满足谓词，他们的交易就可以自动执行。此外，谓词在销毁时可以被修剪，因此它们不会导致状态膨胀。</p>
<blockquote>
<p><em>Trivial demonstrative example: User sets a transaction to buy X tokens whenever the price meets the threshold defined in the predicate. Voila, the pièce de résistance, fully on chain trustless limit orders that won’t bloat the state!</em></p>
<p><em>小示范示例：只要价格达到谓词中定义的阈值，用户就会设置交易来购买 X 个代币。瞧，一点抵抗力量，完全在链上，不会使状态膨胀的去信任化限价订单！</em></p>
</blockquote>
<h2 id="多维资源定价-multi-dimensional-resource-pricing">多维资源定价 (Multi-dimensional Resource Pricing)</h2>
<p>Resource pricing is one of the most critical components of a smart contract blockchain. Decentralization is maintained by keeping the resource requirements of the chain at reasonable, affordable levels. Resource pricing allows the system to charge users for consuming “work” from the nodes in the network.</p>
<p>资源定价是智能合约区块链最关键的组成部分之一。通过将链的资源需求保持在合理、可负担的水平来维持去中心化。资源定价允许系统向用户收取从网络节点消耗“工作”的费用。</p>
<p>In the EVM, one of the most common reasons for the introduction of EIPs has been for opcode re-pricing. This is inherent to the fact that opcodes have hardcoded gas prices, and <strong>the underlying price of resources do not scale proportionally to each other (historically, CPUs improve more rapidly than SSDs)</strong>. Ideally, these systems would be able to price each resource completely independently, so that the entire fee system can dynamically adjust for the underlying hardware system changes.</p>
<p>在 EVM 中，引入 EIP 的最常见原因之一是操作码重新定价。这是操作码硬编码gas价格所固有的，并且<strong>资源的基础价格彼此之间不成比例(从历史上看，CPU 的改进速度比 SSD 快)</strong>。理想情况下，这些系统将能够完全独立地对每个资源进行定价，以便整个收费系统可以针对底层硬件系统的变化进行动态调整。</p>
<p>The FuelVM will be able to implement dynamic multi-resource pricing that can incentivize node runners to optimize their underlying hardware better while still optimizing for the maximum “utility per block.”</p>
<p>FuelVM 将能够实现动态多资源定价，可以激励节点运行者更好地优化其底层硬件，同时仍然优化最大“每块效用”。</p>
<figure data-type="image" tabindex="5"><img src="https://miro.medium.com/max/1400/1*bLvTVR8HlGdSYIgoZvd8AQ.png" alt="" loading="lazy"></figure>
<p>This drawing demonstrates a situation where one smart contract has significantly higher demand than others. With localized resource pricing, other contracts are not impacted to the same extent. An NFT drop is a good example of this. This is not <em>exactly</em> how it works with resource pricing vs contract pricing (proposed Solana style), but the effect is very similar. A smart contract with a specific resource profile will be priced differently than another contract. For the NFT drop example, the hot contract might have a resource profile that is very storage intensive but very computationally cheap. Smart contracts that have high compute requirements relative to storage would not be as impacted by the noisy NFT drop.</p>
<p>该图展示了一种智能合约的需求明显高于其他智能合约的情况。通过本地化资源定价，其他合约不会受到同样程度的影响。 NFT投放/落地就是一个很好的例子。这与资源定价与合约定价(提议的 Solana 风格)不完全一样，但效果非常相似。具有特定资源配置文件的智能合约的定价将与另一个合约不同。对于 NFT 投放示例，有热度的合约可能具有非常存储密集但计算成本非常低的资源配置文件。相对于存储具有高计算要求的智能合约不会受到嘈杂的 NFT投放/落地的影响。</p>
<p>The Solana strategy of breaking the fee markets on accounts or contracts adds a layer of abstraction between the actual underlying resources and the demand for them. This means that there can still be situations where fees are very low, but the strain on the nodes is very high. For example, there can be an extremely high storage load on the system because of an event where, for example, many different NFTs are being minted simultaneously, but the fees are very low because not all this traffic is happening on a single account. The per-account fee model does solve the hot partition problem for accounts but leaves scenarios where the system is not correctly pricing underlying resources, so it can still lead to failures.</p>
<p>Solana 打破账户或合约费用市场的策略，在实际基础资源和对它们的需求之间增加了一层抽象。这意味着仍然可能存在费用非常低，但节点压力非常大的情况。例如，系统上的存储负载可能非常高，例如同时铸造了许多不同的 NFT，但费用却非常低，因为并非所有这些流量都发生在一个帐户上。每账户费用模型确实解决了账户的热分区问题，但留下了系统没有正确定价底层资源的情况，因此仍然可能导致失败。</p>
<p>It is simply cleaner and more accurate to price the system based on the underlying hardware resources instead of trying to add a network-specific abstraction layer like accounts to base the multi-market resource pricing on.</p>
<p>根据底层硬件资源为系统定价更简洁、更准确，而不是尝试添加一个特定于网络的抽象层(如帐户)来作为多市场资源定价的基础。</p>
<h2 id="状态膨胀注意事项-state-bloat-considerations">状态膨胀注意事项 (State-bloat Considerations)</h2>
<p>As mentioned multiple times by the geth team, the current bottleneck in geth is with I/O for state read and write access. Initially, the idea was that 100% of the state Merkle-Patricia-trie (MPT) would fit on the RAM of a standard device. This is not the case anymore as the state has grown to over 900 GB and is expected to grow approx 50–100 GB per year, which is unreasonably large for anyone to fit in RAM, so most nodes have turned to SSDs to store state. Historically, SSDs do not improve as quickly as the state size is growing, so this cost will continue to impact the decentralization of the network. This is a critical problem that <a href="https://hackmd.io/@vbuterin/state_size_management">Ethereum researchers have been discussing for some time.</a></p>
<p>正如 geth 团队多次提到的，当前 geth 的瓶颈在于状态读写访问的 I/O。最初的想法是标准设备的 RAM去与 100% 的状态 Merkle-Patricia-trie (MPT) 适配。现在情况已不再如此，因为状态已增长到超过 900 GB，并且预计每年将增长约 50-100 GB，这对于任何人来说都无法期容纳在 RAM 中，因此大多数节点都转向 SSD 来存储状态。从历史上看，SSD 的改进速度不会随着状态规模的增长而迅速提高，因此这种成本将继续影响网络的去中心化。这是 <a href="https://hackmd.io/@vbuterin/state_size_management">以太坊研究人员已经讨论了一段时间的关键问题。</a></p>
<p>The FuelVM is instead being constructed with this problem front of mind. There have been a couple of talks by Fuel Labs’ co-founder, John Adler, about the role resource pricing plays in the way that state or other resources are consumed by smart contracts. By a combination of appropriate resource pricing and a more clear data model for state pruning with the UTXO system, the FuelVM will be able to keep the state under control, reducing the cost of running a node, which is equivalent to increasing the decentralization of the network.</p>
<p>FuelVM 是在考虑这个问题的前提下构建的。 Fuel Labs 的联合创始人 John Adler 就资源定价在智能合约消耗状态或其他资源的方式中所起的作用，进行了几次会谈。通过适当的资源定价和更清晰的状态剪枝数据模型与 UTXO 系统相结合，FuelVM 将能够控制状态，降低运行节点的成本，这相当于增加了节点的去中心化程度。</p>
<h2 id="序列器的去中心化-decentralization-of-the-sequencer">“序列器”的去中心化 (Decentralization of the “sequencer”)</h2>
<p>Although Layer 2s allow us to offload computation effort from the main chain, they still need to provide a mechanism to order transactions. Many layer 2 solutions are launching with what has been referred to as the “sequencer”. The sequencer is a privileged node that is responsible for ordering transactions, executing state transitions, and then submitting the state root update along with compressed transaction information to Layer 1 Ethereum. It is obvious, but notable, that a single super-computer responsible for sequencing can execute more transactions per epoch than a multitude of smaller computers redundantly executing the same sequence of transactions.</p>
<p>尽管layer2允许我们从主链上卸去计算工作，但它们仍然需要提供一种机制来对交易进行排序。许多layer2解决方案都使用所谓的“序列器”启动。序列器是一个特权节点，负责对交易进行排序、执行状态转换，然后将状态根更新连同压缩的交易信息一起提交到layer1以太坊。很明显，但值得注意的是，一台负责排序的超级计算机每个时期可以执行更多的交易，而不是多个小型计算机冗余地执行相同交易序列。</p>
<p><strong>There are several key problems with this centralized sequence role that needs to be getting more attention!</strong></p>
<p><strong>这个中心化的排序角色有几个关键问题需要引起更多关注！</strong></p>
<ol>
<li>
<p>Controlling the ordering of transactions is very profitable. We have observed in Ethereum and other blockchains that MEV is one of the main sources of income for those who order blocks. A single party controlling ordering and MEV capture eventually leads to worse execution for users as we see in traditional finance today.<br>
控制交易的顺序是非常有利可图的。我们在以太坊和其他区块链中观察到，MEV 是订购区块的人的主要收入来源之一。正如我们今天在传统金融中看到的那样，单方控制订购和 MEV 捕获最终会导致用户执行更差。</p>
</li>
<li>
<p>A centralized sequencer can be a single point of failure both from an availability and regulatory perspective. If a single or a small number of organizations are running sequencers they can go down or be taken down. This is a liveness risk to the network.<br>
从可用性和监管角度来看，中心化序列器可能是单点故障。如果单个或少数组织正在运行序列器，它们可能会关闭或被劫持。这对网络来说是一个活跃的风险。</p>
</li>
<li>
<p>A centralized sequencer may censor transactions on the Layer 2. The sequencer gets to choose whatever transactions and place them in any order during the construction of a block, this leads to the ability to censor. In fairness, many L2s handle this case by providing “forced transaction” mechanisms, which allow users to bypass the sequencer and directly get transactions included by leveraging the L1.<br>
中心化序列器可以审查layer2上的交易。序列器可以选择任何交易并在构建块期间以任何顺序放置，这导致了审查的能力。公平地说，许多 L2 通过提供“强制交易”机制来处理这种情况，该机制允许用户绕过序列器并通过利用 L1 直接获取包含的交易。</p>
</li>
<li>
<p>Sequencers can make inconsistent promises about the state of the chain to users of the rollup. This is often referred to as equivocation, which basically means that the sequencer can make a misleading promise about some state of the L2. This comes from the fact that fast finality on the rollup is a trusted step, a sequencer can abuse this trust that leads users to do things they do not intend.<br>
序列器可以对汇总的用户做出链状态不一致承诺，通常被称为模棱两可，这基本上意味着序列器可以对 L2 的某些状态做出误导性的承诺。这源于这样一个事实，即汇总的快速确定性是一个值得信赖的步骤，序列器可以滥用这种信任，导致用户做他们不想做的事情。</p>
</li>
</ol>
<h2 id="fuel如何解决这些问题-how-does-fuel-solve-these-problems">Fuel如何解决这些问题？ (How does Fuel solve these problems?)</h2>
<p>First of all, Fuel is not just a rollup or an L1 blockchain, rather, it is a system that simply applies state transitions that <em>can</em> be posted to an L1 if configured as a rollup or operate in a network to achieve consensus as an L1. The key difference is that the Fuel execution engine does not care about consensus or transaction ordering. Fuel is only responsible for applying the transactions as quickly as possible. <strong>But</strong>, since Fuel can run on such light hardware and verification is so cheap, it is plausible that Fuel can bootstrap a diverse and decentralized consensus network that does do consensus for much cheaper than an equivalent system running a less performant execution engine like the EVM.</p>
<p>首先，Fuel 不仅仅是一个汇总或 L1 区块链，相反，它是一个简单地应用状态转换的系统，如果配置为 汇总或在网络中运行来实现 L1 的共识，就可以将其发布到 L1。关键区别在于 Fuel 执行引擎不关心共识或交易顺序。 Fuel只负责尽快应用交易。 <strong>但是</strong>，由于 Fuel 可以在如此轻量级的硬件上运行并且验证非常便宜，因此以下内容就变得合理起来： Fuel 可以引导一个多样化和去中心化的共识网络，该网络实现共识确实以比运行性能较低执行引擎的同等系统(如EVM)要便宜得多。</p>
<p>Additionally, the Fuel team is thinking about layer 2 tokenomics with decentralization, MEV, and these other considerations in mind. Fuel co-founder, John Adler, wrote a post on <a href="https://fuel-labs.ghost.io/token-model-layer-2-block-production/">a token model for layer-2 blockchains</a> in January that lays out a design for a token that helps decentralize block production by allowing rollups <strong>to tokenize block space scarcity through the right to collect fees as a block producer.</strong> Fee collection is only one portion of the income for block producers, as we have seen in other chains, MEV is another large portion of the income. Similarly to block space scarcity, MEV income will <em>also</em> be tokenized via the right to produce blocks.</p>
<p>此外，Fuel 团队正在考虑去中心化、MEV 和其他因素的layer2代币经济学。 Fuel 联合创始人 John Adler 在 1 月份写了一篇关于 <a href="https://fuel-labs.ghost.io/token-model-layer-2-block-production/">layer2区块链的代币模型</a> 的帖子,它设计了一种代币(模型)，该代币通过允许汇总**作为区块生产者收取费用的权利，来标记区块空间的稀缺性，进而帮助分散区块生产。**收费只是区块生产者收入的一部分，因为我们在其他链中看到，MEV 是收入的另一大部分。与区块空间的稀缺性类似，MEV 收入也将通过生产区块的权利进行代币化。</p>
<h2 id="状态模型utxo-vs-基于账户-the-state-model-utxo-vs-account-based">状态模型：UTXO vs 基于账户 (The State Model: UTXO vs Account Based)</h2>
<p>The best way to conceptualize the difference between the UTXO data model and the account model is as follows: UTXOs can be likened to cash bills, whereas the account model is more similar to a bank ledger. Account systems naturally lead to hot pieces of state because every transaction is trying to access the same account, while the UTXO, if designed correctly, is less contentious. This characteristic enables better parallelization and also can prevent state bloat by simplifying the process of state pruning.</p>
<p>概念化 UTXO 数据模型和账户模型之间差异的最佳方法如下：UTXO 可以比作现金票据，而账户模型更类似于银行账本。账户系统自然会导致热点状态，因为每笔交易都试图访问同一个账户，而 UTXO，如果设计得当，争议较小。这个特性可以实现更好的并行化，也可以通过简化状态修剪的过程来防止状态膨胀。</p>
<figure data-type="image" tabindex="6"><img src="https://miro.medium.com/max/4000/1*sjfvqbqpQT_MLCe_HsPhNg.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://miro.medium.com/max/4000/1*daR6MsOjX5wPl5BRyypIpA.png" alt="" loading="lazy"></figure>
<p>Sticking with the cash vs. bank ledger metaphor, it becomes clear why parallelization can tend to be much easier with UTXO. 2 cash transactions can happen at the same time and they don’t need to have any knowledge of each other, while if there were to be 2 account updates on a ledger, both transactions would have to update the same shared ledger.</p>
<p>坚持现金与银行分类账的比喻，很明显为什么使用 UTXO 可以更容易地实现并行化。 2 笔现金交易可以同时发生，它们不需要相互了解，而如果分类账上有 2 个账户更新，则两个交易都必须更新同一个共享分类账。</p>
<h1 id="虚拟机大战-the-vm-wars">虚拟机大战 (The VM Wars)</h1>
<p>Other teams, beyond Fuel, are working on next-generation virtual machines for smart contract blockchains such as Mysten Labs and Aptos, who are working with the MoveVM that was originally designed by engineers at Facebook as part of the Libra project. This further bolsters the thesis that there is demand for novel execution environments in order to support the next generation of blockchain applications. All of these projects have interesting approaches and make different trade-offs.</p>
<p>除了 Fuel 之外，其他团队正在开发用于智能合约区块链的下一代虚拟机，例如 Mysten Labs 和 Aptos，他们正在使用最初由 Facebook 工程师设计的 MoveVM(最初作为 Libra 项目的一部分)。这进一步支持了需要新型执行环境来支撑下一代区块链应用的论点。所有这些项目都有有趣的方法并做出不同的权衡。</p>
<p>In the years that the MoveVM sat stagnant when Libra was busy fighting legal battles, a lot changed in the crypto world. Fuel was able to adapt to those changes and stay agile in an extremely fast-paced industry, while Move fell slightly behind. That being said, since Move has spun out of Facebook and new large financing rounds have been completed, they are certainly getting ready to go to war!</p>
<p>在 Libra 忙于打官司，MoveVM 停滞不前的几年里，加密世界发生了很大变化。 Fuel 能够适应这些变化并在这个快节奏的行业中保持敏捷，而 Move 则略微落后。话虽如此，既然 Move 已经从 Facebook 分拆出来，并且新一轮的大额融资已经完成，他们肯定已经做好了开战的准备！</p>
<figure data-type="image" tabindex="8"><img src="https://miro.medium.com/max/400/0*jeQ293mTqR91ylk3" alt="" loading="lazy"></figure>
<h1 id="结论-conclusion">结论 (Conclusion)</h1>
<ul>
<li>
<p>Unlike other L2s, Fuel has plans to decentralize the sequencer role from the start by designing the VM so that expensive hardware is not required to increase scale.<br>
与其他 L2 不同，Fuel 计划从一开始就通过设计虚拟机来分散序列器的角色，这样就不需要昂贵的硬件来扩大规模。</p>
</li>
<li>
<p>Fuel is flexible. It can be deployed in many environments, but the priority is to be Ethereum aligned as an Optimistic Rollup.<br>
Gas是灵活的。它可以部署在许多环境中，但优先级是作为乐观汇总与以太坊对齐。</p>
</li>
<li>
<p>Fuel’s UX will be much better than the EVM’s because of native and novel ways of interacting with the chain, such as account abstraction, scripts, and predicates.<br>
由于与链交互的原生和新颖的方式，例如帐户抽象、脚本和谓词，Fuel 的用户体验将比 EVM 好得多。</p>
</li>
<li>
<p>The UTXO data model is naturally less contentious than the account data model and will lead to more parallelism AND less state bloat.<br>
UTXO 数据模型自然比账户数据模型更少争议，并且会导致更多并行(处理)和更少的状态膨胀。</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[@camiinthisthang长推-20221019(@camiinthisthang twitter threads-20221019)]]></title>
        <id>https://chainguys.github.io/post/camiinthisthang-chang-tui-20221019camiinthisthang-twitter-threads-20221019/</id>
        <link href="https://chainguys.github.io/post/camiinthisthang-chang-tui-20221019camiinthisthang-twitter-threads-20221019/">
        </link>
        <updated>2022-10-20T01:30:32.000Z</updated>
        <content type="html"><![CDATA[<p>原文地址:<a href="https://twitter.com/camiinthisthang/status/1582408630443180035">https://twitter.com/camiinthisthang/status/1582408630443180035</a></p>
<p>Machismo, Inflation, Remittance: Scaling Ethereum to Widespread Adoption in LATAM</p>
<p>大男子主义、通货膨胀、汇款：扩展以太坊以在拉丁美洲得到广泛采用重新创新第 2 层，但更擅长 <a href="https://twitter.com/fuellabs_">@fuellabs_</a></p>
<p>My most recent talk from<a href="https://twitter.com/EFDevcon">@EFDevcon</a>as a thread</p>
<p>我最近来自 <a href="https://twitter.com/EFDevcon">@EFDevcon</a> 的谈话作为一个长推</p>
<p>A pragmatic perspective on the social and technical pieces missing and how we're innovating a layer 2 but better at<a href="https://twitter.com/fuellabs_">@fuellabs_</a></p>
<p>关于缺少的社交和技术部分以及我们如何创新layer2但更 <a href="https://twitter.com/fuellabs_">@fuellabs_</a> 的务实观点却更好</p>
<p>First, a look at the current state of the industry. When building a product, you want to solve a big problem for many people. Right now, crypto sits in the quadrant of solving a small problem for a few people.</p>
<p>首先，看一下行业的现状。在构建产品时，您想为许多人解决一个大问题。目前，加密货币处于为少数人解决小问题的象限。</p>
<figure data-type="image" tabindex="1"><img src="https://pbs.twimg.com/media/FfXYRJoVUAATSxM?format=jpg&amp;name=medium" alt="" loading="lazy"></figure>
<p>As an industry, we're all working towards identifying killer use cases for crypto that unlock functionality and coordination not previously available. I deeply respect everyone working in this industry, and this is not a knock on our work, but this is just today's reality.</p>
<p>作为一个行业，我们都在努力确定加密的杀手级用例，进而解锁以前不可用的功能和协作。我非常尊重在这个行业工作的每一个人，这不是对我们工作的打击，但这只是今天的现实。</p>
<figure data-type="image" tabindex="2"><img src="https://pbs.twimg.com/media/FfXYRuSUcAAo-N0?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://twitter.com/camiinthisthang/status/1582408652727517187/photo/1" alt="" loading="lazy"></figure>
<p>We want to solve a big problem for a lot of people. How do we get there? Not from a theoretical pov, but what are the tactical steps we need to execute to get here?</p>
<p>我们想为很多人解决一个大问题。我们怎么实现？不是从理论上的观点出发，而是我们需要执行哪些战术步骤才能到达这里？</p>
<figure data-type="image" tabindex="4"><img src="https://pbs.twimg.com/media/FfXYSbeUAAcCw3j?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>In this talk, I point out the three most pressing issues we can address NOW. These are probably obvious, but <em>how</em> exactly do we address these issues to empower both developers and end users to build and use novel applications?</p>
<p>在这次演讲中，我指出了我们现在可以解决的三个最紧迫的问题。这些可能是显而易见的，但<em>我们如何</em>解决这些问题，进而使开发人员和最终用户能够构建和使用新颖的应用？</p>
<figure data-type="image" tabindex="5"><img src="https://pbs.twimg.com/media/FfXYS-HUoAARpNu?format=jpg&amp;name=medium" alt="image" loading="lazy"></figure>
<p>1.Solve real problems The bull case for LATAM and a case study on how solving hyperlocal problems (a big problem for many people) drives 100x+ growth, and what crypto can learn from these orgs</p>
<p>解决实际问题 拉美的牛市案例和关于解决超本地问题（对许多人来说是个大问题）如何推动 100 倍以上增长的案例研究，以及加密可以从这些组织中学到什么</p>
<figure data-type="image" tabindex="6"><img src="https://pbs.twimg.com/media/FfXYTnLVIAAHxMH?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Latin America seems to be one of the best places to explore crypto because they already exhibit behaviors that make them ripe for crypto adoption</p>
<p>拉丁美洲似乎是探索加密货币的最佳地点之一，因为它们已经表现出成熟采用加密货币的行为</p>
<figure data-type="image" tabindex="7"><img src="https://pbs.twimg.com/media/FfXYUORUAAExN5b?format=jpg&amp;name=medium" alt="" loading="lazy"></figure>
<p>Some stats highlight that Latinos are already operating and transacting outside of the rails of traditional finance Despite half of the population being unbanked, most consumers access neobank and nonbank financial services.</p>
<p>一些统计数据表明，拉丁美洲人已经在传统金融的轨道之外开展业务和交易，尽管有一半的人口没有银行账户，但大多数消费者都可以使用新银行和非银行金融服务。</p>
<figure data-type="image" tabindex="8"><img src="https://pbs.twimg.com/media/FfXYUzWUAAkgIAQ?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Remittance in 2021 represented almost 25% of total GDP in Honduras and El Salvador and ~15% of GDP in Guatemala. Do you know how insane that is</p>
<p>2021 年的汇款占洪都拉斯和萨尔瓦多 GDP 总额的近 25%，占危地马拉 GDP 的约 15%。你知道那有多疯狂吗！</p>
<figure data-type="image" tabindex="9"><img src="https://pbs.twimg.com/media/FfXYVWnUAAYTBhc?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Data by Gemini indicates that women in LATAM are transacting and holding crypto at higher rates than women in Europe. Crypto offers a new way for women to exercise financial freedom while operating within the bounds of what is culturally acceptable.</p>
<p>Gemini 的数据表明，拉丁美洲的女性交易和持有加密货币的比率高于欧洲女性。加密货币为女性提供了一种行使财务自由的新方式，同时在文化可接受的范围内运作。</p>
<figure data-type="image" tabindex="10"><img src="https://pbs.twimg.com/media/FfXYV5uUYAAsQ5e?format=jpg&amp;name=medium" alt="" loading="lazy"></figure>
<p>In a culture of machismo, patriarchy with a little hot sauce on it, I can see how crypto offers a workaround for women to exercise the ability to hold and earn value without breaking social and cultural norms like opening a bank account without your husband, etc.</p>
<p>在大男子主义、带有少许辣酱的父权制文化中，我可以看到加密货币如何为女性提供一种解决方法，让她们能够在不违反社会和文化规范的情况下行使持有和赚取价值的能力，例如在没有丈夫的情况下开设银行账户等.</p>
<p>Mercado Pago and PicsPay in Colombia and Brazil are great case studies for what happens when you solve hyperlocal problems for consumers. Both are now financial giants in the space, and it all started from a relatively simple, not-so-novel payments platform.</p>
<p>哥伦比亚和巴西的 Mercado Pago 和 PicsPay 是很好的案例研究，说明当您为消费者解决超本地化问题时会发生什么。两者现在都是该领域的金融巨头，这一切都始于一个相对简单、不那么新颖的支付平台。</p>
<figure data-type="image" tabindex="11"><img src="https://pbs.twimg.com/media/FfXYWiuUAAYBCA7?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://pbs.twimg.com/media/FfXYW6sVUAA8Yza?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>We covered the social. What technical milestones do we still have to reach to make Ethereum and blockchains in general usable to the masses?</p>
<ul>
<li>
<p>Scalability</p>
</li>
<li>
<p>More secure applications</p>
<p>These next slides are also core to the reason why I joined Fuel.</p>
</li>
</ul>
<p>我们涵盖了社会面。我们还需要达到哪些技术里程碑才能使以太坊和区块链普遍适用于大众？</p>
<ul>
<li>可扩展性</li>
<li>更安全的应用程序</li>
</ul>
<p>这些下一张幻灯片也是我加入 Fuel 的核心原因。</p>
<figure data-type="image" tabindex="13"><img src="https://pbs.twimg.com/media/FfXYXhFUAAIlDVM?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Scalability without sacrificing decentralization. There are 666M people in LATAM. We need systems that can handle the load without impacts to performance. Fuel's execution model allows for parallelized transaction execution, resulting in a significant net gain in TPS.</p>
<p>不牺牲去中心化的可扩展性。拉丁美洲有 6.66 亿人。我们需要能够在不影响性能的情况下处理负载的系统。 Fuel 的执行模型允许并行执行交易，从而导致 TPS 的显着净收益。</p>
<figure data-type="image" tabindex="14"><img src="https://pbs.twimg.com/media/FfXYYGkUAAIWcnC?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>In LATAM, you're dealing with a population that is more price-sensitive. The average monthly income is ~$500. We have to take steps to minimize the risk of hacks and losses. The<a href="https://twitter.com/SwayLang">@SwayLang</a>compiler will call out reentrancy bugs and won't let you deploy a vulnerable contractS</p>
<p>在拉丁美洲，您面对的是对价格更加敏感的人群。平均月收入约为 500 美元。我们必须采取措施将黑客入侵和损失的风险降至最低。 <a href="https://twitter.com/SwayLang">@SwayLang</a> 编译器将调用可重入性错误，并且不会让您部署易受攻击的合约</p>
<figure data-type="image" tabindex="15"><img src="https://pbs.twimg.com/media/FfXYYtjUAAM4Sro?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>The Sway compiler forces developers to handle all variant control flow paths. Check out this thread by compiler engineer<a href="https://twitter.com/emilyaherbert">@emilyaherbert</a>for more on Sway features</p>
<p>Sway 编译器强制开发人员处理所有变体控制流路径。查看编译器工程师 <a href="https://twitter.com/emilyaherbert">@emilyaherbert</a> 的此长推，了解有关 Sway 功能的更多信息</p>
<figure data-type="image" tabindex="16"><img src="https://pbs.twimg.com/media/FfXYZTuUAAA45vv?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<hr>
<figure data-type="image" tabindex="17"><img src="https://pbs.twimg.com/profile_images/1183078593078923264/M1WaFAKA_normal.jpg" alt="" loading="lazy"></figure>
<p><a href="https://twitter.com/emilyaherbert/status/1575906743254908928">https://twitter.com/emilyaherbert/status/1575906743254908928</a></p>
<hr>
<p>Write more secure smart contracts in Sway with our namespace storage access. Each function's storage access must be annotated, giving clarity to developers and users alike who will never accidentally access storage, causing unintended consequences.</p>
<p>使用我们命名的空间存储，访问在 Sway 中编写的更安全的智能合约。每个函数的存储访问都必须进行注释，让开发人员和用户清楚地知道他们永远不会意外访问存储，从而导致意想不到的后果。</p>
<figure data-type="image" tabindex="18"><img src="https://pbs.twimg.com/media/FfXYZ6OUAAUH0JG?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<figure data-type="image" tabindex="19"><img src="https://pbs.twimg.com/media/FfXYaRnUAAkzoA5?format=jpg&amp;name=medium" alt="Image" loading="lazy"></figure>
<p>Thank you to the whole Devcon team for organizing and allowing me to give this talk.</p>
<p>感谢整个 Devcon 团队组织并允许我进行这次演讲。</p>
<p>If you're interested in experiencing the top-tier developer experience we're crafting at<a href="https://twitter.com/fuellabs_">@fuellabs_</a>, check out our developer quickstart <a href="https://t.co/6QmJCUaOt7">https://fuellabs.github.io/fuel-docs/master/developer-quickstart.html…</a></p>
<p>如果您有兴趣体验我们在 <a href="https://twitter.com/fuellabs_">@fuellabs_</a> 打造的顶级开发人员体验，请查看我们的开发人员快速入门 <a href="https://t.co/6QmJCUaOt7">https://fuellabs.github.io/ Fuel-docs/master/developer-quickstart.html…</a></p>
<p>Expanded thoughts and sources cited from the numbers and stats referenced in this talk</p>
<p>从本次演讲中引用的数字和统计数据中引用的扩展思想和来源</p>
<p><a href="https://twitter.com/camiinthisthang/status/1577688321991417856">https://twitter.com/camiinthisthang/status/1577688321991417856</a></p>
<p>The link to my slides: <a href="https://t.co/RXQbhMAoxL">https://docs.google.com/presentation/d/12EpcqMBJtyJXvWlmIY00kttPv-Y_Mwlpnb8GnkOulnw/edit?usp=sharing…</a>. I'll share the recording of the talk as soon as it's ready. THANK YOU !</p>
<p>我的幻灯片的链接：<a href="https://t.co/RXQbhMAoxL">https://docs.google.com/presentation/d/12EpcqMBJtyJXvWlmIY00kttPv-Y_Mwlpnb8GnkOulnw/edit?usp=sharing...</a>。一旦准备好，我会分享谈话的录音。谢谢你 ！</p>
<figure data-type="image" tabindex="20"><img src="https://pbs.twimg.com/card_img/1582408809128939520/O8w6U0hF?format=jpg&amp;name=small" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>